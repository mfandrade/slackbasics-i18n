<!-- $Id: miscadmin.xml 283 2007-09-18 20:14:31Z danieldk $ -->

<chapter id="sysadmin-misc"> <?dbhtml filename="miscadmin.html"?>
  <title>Miscel·lània</title>

  <sect1 id="sysadmin-misc-cron">
    <sect1info>
    <authorgroup>
      <author>
        <firstname>Murray</firstname>
	<surname>Stokely</surname>
	<contrib>Written by </contrib>
      </author>
    </authorgroup>

    <!-- You can modify the stylesheet to not display the above in
         print or HTML output.  It's just a way to keep things clear
	 in the source document. -->

    </sect1info>

    <title>Planificant tasques amb cron <!--Scheduling tasks with cron--></title>

    <indexterm><primary>cron</primary></indexterm>
    <indexterm><primary>crontab file</primary></indexterm>
    <indexterm><primary>planificant</primary><secondary>tasques</secondary></indexterm>

    <para>
      Slackware Linux inclou una implementació del dimoni clàssic de
      UNIX cron que permet als usuaris planificar tasques per a que 
      s'executen a intervals regulars. Cada usuari pot crear, eliminar,
      o modificar un fitxer crontab individual. Aquest fitxer crontab
      especifica les ordres o guions a executar a intervals de temps
      especificats. Les línies en blanc al crontab o les línies que 
      començen amb un coixinet (<quote><literal>#</literal></quote>)
      són ignorades.

      <!--Slackware Linux includes an implementation of the classic UNIX 
      cron daemon that allows users to schedule tasks for execution at
      regular intervals.  Each user can create, remove, or modify an
      individual crontab file.  This crontab file specifies commands
      or scripts to be run at specified time intervals.  Blank lines
      in the crontab or lines that begin with a hash
      (<quote><literal>#</literal></quote>) are ignored.--></para>

    <para>
      Cada entrada en el fitxer crontab ha de contindre 6 camps
      separats per espais. Aquests camps són minut, hora, dia, mes,
      dia de la setmana, i ordre. Cadascún dels primers cinc camps
      haurien de contindre un temps o el caràcter comodí 
      <quote><literal>*</literal></quote> per a coincidir amb tots els
      temps per a eixe camp. Per exemple, per a tindre la ordre
      <command>date</command> executada cada dia a les 6:10, es
      pordia utilitzat la següent entrada.

      <!--Each entry in the crontab file must contain 6 fields
      separated by spaces.  These fields are minute, hour, day, month,
      day of week, and command.  Each of the first five fields may
      contain a time or the <quote><literal>*</literal></quote>
      wildcard to match all times for that field.  For example, to
      have the <command>date</command> command run every day at 6:10
      AM, the following entry could be used.--></para>

    <programlisting>10 6 * * * date</programlisting>

    <para>
      Un crontab d'usuari es pot visualitzar amb la ordre
      <command>crontab -l</command>. Per a una introducció més 
      a fons a la sintaxi del fitxer crontab, examinem el crontab
      per defecte de l'usuari root.
      <!--A user crontab may be viewed with the <command>crontab
      -l</command> command.  For a deeper introduction to the syntax of
      a crontab file, let us examine the default
    <emphasis>root</emphasis> crontab.--></para>

    <screen># <userinput>crontab -l</userinput>
# If you don't want the output of a cron job mailed to you, you have to direct
# any output to /dev/null.  We'll do this here since these jobs should run
# properly on a newly installed system, but if they don't the average newbie
# might get quite perplexed about getting strange mail every 5 minutes. :^)
#
# Run the hourly, daily, weekly, and monthly cron jobs.
# Jobs that need different timing may be entered into the crontab as before,
# but most really don't need greater granularity than this.  If the exact
# times of the hourly, daily, weekly, and monthly cron jobs do not suit your
# needs, feel free to adjust them.
#
# Run hourly cron jobs at 47 minutes after the hour:
47<co id="co-crontab-1" /> *<co id="co-crontab-2" /> *<co id="co-crontab-3" /> *<co id="co-crontab-4" /> *<co id="co-crontab-5" /> /usr/bin/run-parts /etc/cron.hourly 1&gt; /dev/null<co id="co-crontab-6" />
#
# Run daily cron jobs at 4:40 every day:
40 4 * * * /usr/bin/run-parts /etc/cron.daily 1> /dev/null
#
# Run weekly cron jobs at 4:30 on the first day of the week:
30 4 * * 0 /usr/bin/run-parts /etc/cron.weekly 1> /dev/null
#
# Run monthly cron jobs at 4:20 on the first day of the month:
20 4 1 * * /usr/bin/run-parts /etc/cron.monthly 1> /dev/null</screen>


    <calloutlist>
      <callout arearefs="co-crontab-1">
        <para>
	  El primer camp, <literal>47</literal>, especifica que este
	  treball s'huaria de fer 47 minuts després de l'hora.
	  <!--The first field, <literal>47</literal>, specifies that
          this job should occur at 47 minutes after the hour.--></para>
      </callout>

      <callout arearefs="co-crontab-2">
        <para>
	  El segon camp, <literal>*</literal>, és una comodí, pel que 
	  aquest treball hauria d'ocórrer <emphasis>cada</emphasis> hora.
	  <!--The second field, <literal>*</literal>, is a wildcard,
          so this job should occur <emphasis>every</emphasis> hour.--></para>
      </callout>

      <callout arearefs="co-crontab-3">
        <para>
	  El tercer camp, <literal>*</literal>, és un comodí,
	  pel que aquest treball hauria d'ocórrer <emphasis>cada
	</emphasis> dia.
	  <!--The third field, <literal>*</literal>, is a wildcard,
          so this job should occur <emphasis>every</emphasis> day.--></para>
      </callout>

      <callout arearefs="co-crontab-4">
        <para>
	  El quart camp, <literal>*</literal>, és un comodí,
	  pel que aquest treball hauria d'ocórrer <emphasis>cada
	</emphasis> mes.
	<!--The fourth field, <literal>*</literal>, is a wildcard,
          so this job should occur <emphasis>every</emphasis> month.--></para>
      </callout>

      <callout arearefs="co-crontab-5">
        <para>
	  El cinqué camp, <literal>*</literal>, és un comodí,
	  pel que aquest treball hauria d'ocórrer <emphasis>cada</emphasis> 
	  dia de la setmana.
	  <!--The fifth field, <literal>*</literal>, is a wildcard,
          so this job should occur <emphasis>every</emphasis> day of the week.--></para>
      </callout>

      <callout arearefs="co-crontab-6">
        <para>
	  El sisé camp, <command>/usr/bin/run-parts /etc/cron.hourly 1> 
	  /dev/null</command>, especifica la ordre que s'hauria d'executar
	  en el temps especificat en els primers cinc camps.
	  <!--The sixth field, <command>/usr/bin/run-parts
	  /etc/cron.hourly 1> /dev/null</command>, specifies the
	  command that should be run at the time specification defined
	  in the first five fields.--></para>
      </callout>
    </calloutlist>

    <indexterm><primary>guions periòdics <!--periodic scripts--></primary></indexterm>
    <indexterm><primary>slocate</primary></indexterm>

    <para>
      El crontab per defecte de root està configurat per a executar els 
      guions a <filename>/etc/cron.monthly</filename> mensualment,
      els guions a <filename>/etc/cron.weekly</filename> setmanalment,
      els que hi ha a <filename>/etc/cron.daily</filename> diàriament,
      i els continguts a <filename>/etc/cron.hourly</filename> cada hora.
      Per aquesta raó no és estrictament necessari per a un administrador
      comprendre el funcionament intern de cron. Amb Slackware Linux,
      pots senzillament, afegir un script nou a un dels directoris de
      dalt per a programar una tasca periòdica. De fet, fullejant eixos
      directoris et faràs una idea de la feina que Slackware Linux fa
      regularment fora d'escena per a mantidre coses com la base de dades
      <command>slocate</command> actualitzades.

      <!--The default root crontab is setup to run scripts in
      <filename>/etc/cron.monthly</filename> on a monthly basis, the
      scripts in <filename>/etc/cron.weekly</filename> on a weekly
      basis, the scripts in <filename>/etc/cron.daily</filename> on a
      daily basis, and the scripts in
      <filename>/etc/cron.hourly</filename> on an hourly basis.  For
      this reason it is not strictly necessary for an administrator to
      understand the inner workings of cron at all.  With Slackware Linux,
      you can simply add a new script to one of the above directories
      to schedule a new periodic task.  Indeed, perusing those
      directories will give you a good idea of the work that Slackware Linux
      does behind the scenes on a regular basis to keep things like
      the <command>slocate</command> database updated.--></para>

  </sect1>

  <sect1 id="sysadmin-misc-hdparm">
    <title>Paràmetres de disc dur <!--Hard disk parameters--></title>

    <indexterm><primary>hdparm</primary></indexterm>
    <indexterm><primary>DMA</primary><secondary>encenent-lo</secondary></indexterm>

    <para>
      La majoria de discs ofereixen vàries característiques per a
      incrementar el rendiment del disc i millorar la integritat. La
      majoria d'aquestes característiques es poden ajustar amb la ordre
      <command>hdparm</command>. Vés amb compte al canviar la configuració
      del disc amb aquesta utilitat, perque alguns canvis poden estropejar
      dades al teu disc.

      <!--Many modern disks offer various features for increasing disk
      performance and improving integrity. Many of these features can be
      tuned with the <command>hdparm</command> command. Be careful with
      changing disk settings with this utility, because some changes
      can damage data on your disk-->
    </para>

    <para>
      Pots obtindre un resum de la configuració activa per a un disc
      proporcionanant-li el node de dispositiu d'un disc com a
      paràmetre a <command>hdparm</command>:
      <!--You can get an overview of the active settings for a disk by
      providing the device node of a disk as a parameter to
      <command>hdparm</command>:-->
    </para>

    <screen>
# <command>hdparm /dev/hda</command>

/dev/hda:
 multcount    =  0 (off)
 IO_support   =  1 (32-bit)
 unmaskirq    =  1 (on)
 using_dma    =  1 (on)
 keepsettings =  0 (off)
 readonly     =  0 (off)
 readahead    = 256 (on)
 geometry     = 65535/16/63, sectors = 78165360, start = 0
    </screen>

    <para>
      Una raó comuna per a un rendiment baix de disc és que el DMA
      no és utilitzat automàticament pel núcli per a un disc. DMA
      accelerarà l'ample de banda de E/E (Entrada/Eixida) i disminueix
      l'ús del processador, fent possible la transmissió directa de 
      dades des del disc a la memòria del sistema. Si el DMA s'apaga,
      el resum de la configuració mostraria aquesta línia:

      <!--A common cause for bad disk performance is that DMA was not
      automatically used by the kernel for a disk. DMA will speed up
      I/O throughput and offload CPU usage, by making it possible
      for the disk to directly transfer data from the disk to the
      system memory. If DMA is turned off, the overview of settings
      would shows this line:-->
    </para>

    <screen>
using_dma    =  0 (off)
    </screen>

    <para>
      Pots encendre el DMA fàcilment per a aquest disc amb el 
      paràmetre <parameter class="command">-d</parameter> de
      <command>hdparm</command>:
      <!--You can easily turn on DMA for this disk with the
      <parameter class="command">-d</parameter> parameter of
      <command>hdparm</command>:-->
    </para>

    <screen>
# <command>hdparm -d 1 /dev/hda</command>

/dev/hda:
 setting using_dma to 1 (on)
 using_dma    =  1 (on)
    </screen>

    <para>
      Pots fer açò durant cada inici afegint la ordre
      hdparm a <filename>/etc/rc.d/rc.local</filename>.
      <!--You can do this during every boot by adding the hdparm
      command to <filename>/etc/rc.d/rc.local</filename>.-->
    </para>

    <para>
      El paràmetre <parameter class="command">-i</parameter> de
      <command>hdparm</command> és també molt útilm, perque ofereix
      informació detallada del disc:

      <!--The <parameter class="command">-i</parameter> parameter
      of <command>hdparm</command> is also very useful, because
      it gives detailed information about a disk:-->
    </para>

    <screen>
# <command>hdparm -i /dev/hda</command>
/dev/hda:

 Model=WDC WD400EB-00CPF0, FwRev=06.04G06, SerialNo=WD-WCAAT6022342
 Config={ HardSect NotMFM HdSw>15uSec SpinMotCtl Fixed DTR>5Mbs FmtGapReq }
 RawCHS=16383/16/63, TrkSize=57600, SectSize=600, ECCbytes=40
 BuffType=DualPortCache, BuffSize=2048kB, MaxMultSect=16, MultSect=off
 CurCHS=16383/16/63, CurSects=16514064, LBA=yes, LBAsects=78163247
 IORDY=on/off, tPIO={min:120,w/IORDY:120}, tDMA={min:120,rec:120}
 PIO modes:  pio0 pio1 pio2 pio3 pio4 
 DMA modes:  mdma0 mdma1 mdma2 
 UDMA modes: udma0 udma1 udma2 udma3 udma4 *udma5 
 AdvancedPM=no WriteCache=enabled
 Drive conforms to: device does not report version: 

 * signifies the current active mode
    </screen>
  </sect1>

  <sect1 id="sysadmin-memory-hdparm">
    <title>Monitorejant <!--Fent seguiment de--> l'ús de la memòria <!--Monitoring memory usage--></title>

    <para>
      En algunes situacions rsulta d'utilitat ls informació de diagnòstic
      referent a com s'utilitza la memòria. Per exemple, en un servidor
      amb mal rendiment podries voler veurer si la escassetat de memòria està 
      causant que el sistema emmagatzeme pàgines a la memòria swap, o potser
      estàs posant en marxa un servei de xarxa, i vols trobar els
      paràmetres òptims per a la memòria cau. Slackware Linux 
      propociona algunes eines que t'ajudaràn a analitzar com s'utilitza
      la memòria.

      <!--In some situations it is handy to diagnose information about how
      memory is used. For example, on a badly performing server you may
      want to look whether RAM shortage is causing the system to swap
      pages, or maybe you are setting up a network service, and want to
      find the optimum caching parameters. Slackware Linux provides some
      tools that help you analyse how memory is used.-->
    </para>

    <sect2 id="sysadmin-misc-memory-vmstat">
      <title>vmstat</title>

      <para>
	<command>vmstat</command> és una ordre que proporciona
	estadístiques sobre vàries parts de la memòria virtual del
	sistema. Executat sense paràmetres <command>vmstat</command>
	proporciona un resum d'algunes estadístiques relevants:
        <!--<command>vmstat</command> is a command that can provide
        statistics about various parts of the virtual memory system.
        Without any extra parameters <command>vmstat</command>
        provides a summary of some relevant statistics:-->
      </para>

      <screen>
# <command>vmstat</command>
procs -----------memory---------- ---swap-- -----io---- --system-- ----cpu----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in    cs us sy id wa
 0  0      0 286804   7912  98632    0    0   198     9 1189   783  5  1 93  1
      </screen>

      <para>
	Com només estem mirant l'ús de memòria en aquesta secció, només
	ens fixarem en els camps <emphasis>memory</emphasis> i
        <emphasis>swap</emphasis>
        <!--Since we are only looking at memory usage in this section, we will
        only have a look at the <emphasis>memory</emphasis> and
        <emphasis>swap</emphasis> fields.-->
      </para>

      <itemizedlist>
        <listitem>
          <para>
            <emphasis>swpd</emphasis>: La quantitat de memòria virtual
	    sent utilitzada.
	    <!--The amount of virtual memory
            being used.-->
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>free</emphasis>: La quantitat de memòria 
	    lliure en eixe moment.
<!--The amount of memory that is not
            used at the moment.-->
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>buff</emphasis>: La quantitat de memòria 
	    utilitzada com a buffers.
<!--The amount of memory used as
            buffers.-->
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>cache</emphasis>: La quantitat de memòria
	    utilitzada com a cau.
<!--The amount of memory used as
            cached.-->
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>si</emphasis>: La quantitat de memòria que
	    és intercanviada des del disc per segon.
<!--The amount of memory that is
            swapped in from disk per second.-->
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>so</emphasis>: La quantitat de memòria que
	    és intercanviada cap al disc per segon.
<!--The amount of memory that is
            swapped to disk per second.-->
          </para>
        </listitem>
      </itemizedlist>

      <para>
	Sol ser d'utilitat veurer com l'ús de la memòria canvia al llarg
	del temps. Pots afegir un interval com a paràmetre a 
	<command>vmstat</command> per a que aquest s'execute contínuament, 
	imprimint les estadístiques actuals. Aquest interval és en segons,
	així que, si vols obtindre estadístiques cada segon, pots executar:

        <!--It is often useful to see how memory usage changes over time.
        You can add an interval as a parameter to <command>vmstat</command>,
        to run <command>vmstat</command> continuously, printing the current
        statistics. This interval is in seconds. So, if you want to get
        updated statistics every second, you can execute:-->
      </para>

      <screen>
# <command>vmstat 1</command>
procs -----------memory---------- ---swap-- -----io---- --system-- ----cpu----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in    cs us sy id wa
 2  0      0 315132   8832  99324    0    0   189    10 1185   767  5  1 93  1
 1  0      0 304812   8832  99324    0    0     0     0 1222  6881 24  8 68  0
 0  0      0 299948   8836  99312    0    0     0     0 1171  1824 41  9 49  0
 [...]
      </screen>

      <para>
	Addicionalment, pots dir-li a <command>vmstat</command> cuantes vegades
	hauria de mostrar les estadístiques (enlloc de fer-ho sense fi).
	Per exemple, si volguéres imprimir estes estadístiques cada dos segons,
	i cinc vegades en total, podries executar <command>vmstat</command> de
	la següent manera:

        <!--Additionally, you can tell <command>vmstat</command> how many times
        it should output these statistics (rather than doing this infinitely). 
        For example, if you would like to print these statistics every
        two seconds, and five times in total, you could execute
        <command>vmstat</command> in the following manner:-->
      </para>

      <screen>
# <command>vmstat 2 5</command>
procs -----------memory---------- ---swap-- -----io---- --system-- ----cpu----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in    cs us sy id wa
 2  0      0 300996   9172  99360    0    0   186    10 1184   756  5  1 93  1
 0  1      0 299012   9848  99368    0    0   336     0 1293  8167 20  8 21 51
 1  0      0 294788  11976  99368    0    0  1054     0 1341 12749 14 11  0 76
 2  0      0 289996  13916  99368    0    0   960   176 1320 17636 22 14  0 64
 2  0      0 284620  16112  99368    0    0  1086   426 1351 21217 25 18  0 58
      </screen>
    </sect2>

  </sect1>

</chapter>
