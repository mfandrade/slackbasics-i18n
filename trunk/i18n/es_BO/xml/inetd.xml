<!-- $Id: inetd.xml 283 2007-09-18 20:14:31Z danieldk $ -->

<chapter> <?dbhtml filename="inetd.html"?>
<title>El Internet super server</title>

<sect1>
<title>Introducción</title>

<para>
Existen dos formas de ofrecer servicios TCP/IP: ejecutando un 
servidor de aplicaciones auto-suficiente como demonio o usando
el Internet super server, <command>inetd</command>. <command>inetd</command> 
es un demonio que monitorea un rango de puertos. Si un cliente 
intenta conectarse a un puerto <command>inetd</command> 
maneja la conexión y delega la misma a el software servidor 
que maneja ese tipo de conexión. La ventaja de esta alternativa 
es que agrega una capa extra de seguridad y facilita el 
registro de historial de conexiones entrantes. La desventaja 
es que es algo mas lento que utilizar un demonio auto-suficente. 
Es una buena idea ejecutar una demonio auto-suficiente, por ejemplo, 
en un servidor FTP sobrecargado.
</para>

</sect1>

<sect1>
<title>Configuracion</title>

<para>
<command>inetd</command> puede ser configurado utilizando 
el archivo <filename>/etc/inetd.conf</filename>. Demos un  
vistazo a una linea de ejemplo de <filename>inetd.conf</filename>:
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Esta linea especifica que el <command>inetd</command> debería  
aceptar conexiones FTP y pasarlas a <command>tcpd</command>. Esto  
puede parecer un poco extraño, por que normalmente <command>proftpd</command>  
maneja las conexiones FTP. Tambien puede especificar el uso de  
<command>proftpd</command> directamente en <filename>inetd.conf</filename>,  
pero Slackware Linux normalmente pasa la conexion a <command>tcpd</command>. 
Este programa a su vez pasa la conexion a <command>proftpd</command>, como  
fué especificado. <command>tcpd</command> es usado para monitorear servicios 
y para proveer control basado en host.
</para>

<para>
Los servicios pueden ser deshabilitados agregando el caracter de  
comentario (#) al inicio de la linea. Es una buena idea deshabilitar 
todos los servicios y despues habilitar los servicios que requiera uno a la vez. 
Despues de cambiar <filename>/etc/inetd.conf</filename>, <command>inetd</command> 
necesita ser reiniciado para activar los cambios. Esto puede realizarse 
enviando una señal HUP al proceso inetd:
</para>

<screen>
# <command>ps ax | grep 'inetd'</command>
   64 ?        S      0:00 /usr/sbin/inetd
# <command>kill -HUP 64</command>
</screen>

<para>
  O puede usar el script de inicialización <filename>rc.inetd</filename> para 
  reiniciar <command>inetd</command>:
</para>

<screen>
# <command>/etc/rc.d/rc.inetd restart</command>
</screen>

</sect1>

<sect1>
<title>TCP wrappers</title>

<para>
Como puede ver en <filename>/etc/inetd.conf</filename> las conexiones para 
la mayoría de los protocolos se realizan a través de <command>tcpd</command>, 
en vez de pasar la conexion directamente al programa de servicio. Por ejemplo:
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
En este ejemplo las conexiones ftp pasan a través <command>tcpd</command>. 
<command>tcpd</command> registra la conexion a través de syslog y permite 
chequeos adicionales. Una de las características mas usadas de <command>tcpd</command>  
es el control de acceso basado en host. Los hosts que deberían ser negados  
son controlados via <filename>/etc/hosts.deny</filename>, los host que 
deberían ser permitidos via <filename>/etc/hosts.allow</filename>. Ambos  
archivos tienen una regla en cada linea en la forma siguiente:
</para>

<screen>
service: hosts
</screen>

<para>
Los hosts se pueden especificar por hostname o direccion IP. La palabra clase 
ALL especifica todos los hosts o todos los servicios.
</para>

<para>
Suponga que quiere bloquear el acceso a todos los servicios administrados 
a través de <command>tcpd</command>, a excepción del host <quote>trusted.example.org</quote>. 
Para hacer esto, los siguientes archivos 
<filename>hosts.deny</filename> and <filename>hosts.allow</filename>  
deberían ser creados.
</para>

<para>
<filename>/etc/hosts.deny</filename>:
</para>

<screen>
ALL: ALL
</screen>

<para>
<filename>/etc/hosts.allow</filename>:
</para>

<screen>
ALL: trusted.example.org
</screen>

<para>
En el archivo <filename>hosts.deny</filename> el acceso esta bloqueado  
a todos (ALL) los servicios para todos los hosts (ALL). Pero  
<filename>hosts.allow</filename> especifica que todos los servicios (ALL)  
deberían estar disponibles a <quote>trusted.example.org</quote>.
</para>

</sect1>

</chapter>
