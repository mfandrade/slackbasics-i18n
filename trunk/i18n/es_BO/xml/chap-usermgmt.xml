<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
	 xml:lang="es" xml:id="chap-usermgmt">
  <title>Administración de usuarios</title>

  <sect1 xml:id="chap-usermgmt-intro">
    <title>Introducción</title>

    <para>
      GNU/Linux es un sistema operativo multi-usuario. Esto significa
      que múltiples usuarios pueden usar el sistema simultáneamente.
      Los conceptos GNU/Linux para la administración de usuarios son
      bastante simples. En primer lugar, existen varias cuentas de
      usuario en cada sistema. Inclusive en sistemas con un solo
      usuario existen múltiples cuentas, porque GNU/Linux usa cuentas
      únicas para algunas tareas. Los usuarios pueden ser miembros de
      grupos. Los grupos son usados para permisos mas detallados, por
      ejemplo, puede hacer un archivo leíble para un grupo
      específico. Hay unos pocos usuarios y grupos reservados en cada
      sistema. La más importante de estas es la cuenta
      <emphasis>root</emphasis>. El usuario <emphasis>root</emphasis>
      es el administrador del sistema. Es aconsejable evitar loguearse
      como roo, porque implica grandes riesgos de seguridad. Usted
      puede loguearse como usuario normal y realizar tareas
      administrativas utilizando los comandos <command>su</command> y
      <command>sudo</command>.
    </para>

    <para>
      Las cuentas de usuario disponibles están especificadas en
      <filename>/etc/passwd</filename>. Puede dar un vistazo a este
      archivo para darse una idea de qué cuentas de usuario son
      obligatorias. Como usted probablemente notará, no hay
      contraseñas en este archivo. Las contraseñas se aloja en un
      archivo separado <filename>/etc/shadow</filename> como una
      cadena encriptada. La información sobre grupos es almacenada en
      <filename>/etc/group</filename>. En general no es aconsejable
      editar estos archivos directamente. Existen algunas excelentes
      herramientas que pueden ayudarle con la administración de
      usuarios y grupos. Este capítulo describirá algunas de estas
      herramientas.
    </para>
  </sect1>

  <sect1 xml:id="chap-usermgmt-user">
    <title>Agregando y eliminando usuarios</title>

    <sect2 xml:id="chap-usermgmt-user-add">
      <title>useradd</title>

      <para>
	El comando <command>useradd</command> es usado para agregar
	cuentas de usuario al sistema. Ejecutando
	<command>useradd</command> con un nombre de usuario como
	parámetro creará el usuario en el sistema. Por ejemplo:
      </para>

      <screen>
# <userinput>useradd bob</userinput>
      </screen>

      <para>
	Crea la cuenta de usuario <emphasis>bob</emphasis>. Por favor
	tenga en cuenta que esto no crea un directorio home para el
	usuario. Agregue el parámetro <parameter
	class="command">-m</parameter> para crear un directorio
	home. Por ejemplo:
      </para>

      <screen>
# <userinput>useradd -m bob</userinput>
      </screen>

      <para>
	Esto debería agregar el usuario <emphasis>bob</emphasis> al
	sistema y crear el directorio home
	<filename>/home/bob</filename> para este usuario. Normalmente
	el usuario se agrega como miembro el grupo
	<emphasis>users</emphasis>. Suponga que quisiéramos colocar el
	grupo <emphasis>crew</emphasis> como grupo primario para el
	usuario <emphasis>bob</emphasis>. Esto puede hacerse usando el
	parámetro <parameter class="command">-g</parameter>. Por
	ejemplo:
      </para>

      <screen>
# <userinput>useradd -g crew -m bob</userinput>
      </screen>

      <para>
	También es posible agregar este usuario a grupos secundarios
	durante la creación de la cuenta con el parámetro
	<emphasis>-G</emphasis>. Los nombres de los grupos pueden
	estar separados con comas. El siguiente comando creará el
	usuario <emphasis>bob</emphasis>, que es miembro del grupo
	<emphasis>crew</emphasis> y de los grupos secundarios
	<emphasis>www-admins</emphasis> y
	<emphasis>ftp-admins</emphasis>:
      </para>

      <screen>
# <userinput>useradd -g crew -G www-admins,ftp-admins -m bob</userinput>
      </screen>

      <para>
	Por defecto el comando <command>useradd</command> solamente
	agrega usuarios, no asigna una contraseña para el usuario
	agregado.  Las contraseñas pueden asignarse usando el comando
	<command>passwd</command>.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-passwd">
      <title>passwd</title>

      <para>
	Como probablemente ya haya notado, el comando
	<command>passwd</command> es usado para asignar una contraseña
	para un usuario. Ejecutando este comando como un usuario sin
	parámetros cambiará la contraseña para este usuario. El
	comando <command>passwd</command> preguntará por la contraseña
	anterior una vez, y dos veces por la nueva contraseña:
      </para>

      <screen>
$ <userinput>passwd</userinput>
Changing password for bob
(current) UNIX password: 
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
      </screen>

      <para>
	El usuario <emphasis>root</emphasis> puede asignar contraseñas
	para usuarios especificando el nombre de usuario como
	parámetro.  El comando <command>passwd</command> solamente
	preguntará por la nueva contraseña. Por ejemplo:
      </para>

      <screen>
# <userinput>passwd bob</userinput>
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
      </screen>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-adduser">
      <title>adduser</title>

      <para>
	El comando <command>adduser</command> combina
	<command>useradd</command> y <command>passwd</command> en un
	script interactivo. Le pedirá llenar información sobre la
	cuenta a ser creada. Después de eso creará una cuenta basado
	en la información proveída. La pantalla listada abajo muestra
	una sesión de ejemplo.
      </para>

      <screen>
# <userinput>adduser</userinput>

Login name for new user []: <userinput>john</userinput>

User ID ('UID') [ defaults to next available ]: <userinput>&lt;Enter&gt;</userinput>

Initial group [ users ]: <userinput>&lt;Enter&gt;</userinput>

Additional groups (comma separated) []: <userinput>staff</userinput>

Home directory [ /home/john ] <userinput>&lt;Enter&gt;</userinput>

Shell [ /bin/bash ] <userinput>&lt;Enter&gt;</userinput>

Expiry date (YYYY-MM-DD) []: <userinput>&lt;Enter&gt;</userinput>

New account will be created as follows:

---------------------------------------
Login name.......:  john
UID..............:  [ Next available ]
Initial group....:  users
Additional groups:  [ None ]
Home directory...:  /home/john
Shell............:  /bin/bash
Expiry date......:  [ Never ]

This is it... if you want to bail out, hit Control-C.  Otherwise, press
ENTER to go ahead and make the account.
<userinput>&lt;Enter&gt;</userinput>

Creating new account...


Changing the user information for john
Enter the new value, or press ENTER for the default
        Full Name []: <userinput>John Doe</userinput>
        Room Number []: <userinput>&lt;Enter&gt;</userinput>
        Work Phone []: <userinput>&lt;Enter&gt;</userinput>
        Home Phone []: <userinput>&lt;Enter&gt;</userinput>
        Other []: <userinput>&lt;Enter&gt;</userinput>
Changing password for john
Enter the new password (minimum of 5, maximum of 127 characters)
Please use a combination of upper and lower case letters and numbers.
New password: <userinput>password</userinput>
Re-enter new password: <userinput>password</userinput>


Account setup complete.
      </screen>

      <para>
	Puede usar los valores por defecto, o dejar algunos campos
	vacíos presionando la tecla &lt;Enter&gt;.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-userdel">
      <title>userdel</title>

      <para>
	Algunas veces es necesario remover una cuenta de usuario del
	sistema. GNU/Linux ofrece la herramienta
	<command>userdel</command> para hacer esto. Solamente
	espeficique el nombre de usuario como parámetros para remover
	ése usuario del sistema. Por ejemplo, el siguiente comando
	removerá la cuenta de usuario <emphasis>bob</emphasis> del
	sistema:
      </para>

      <screen>
# <userinput>userdel bob</userinput>
      </screen>

      <para>
	Esto solamente removerá la cuenta de usuario, no el directorio
	home del usuario ni su cola de correo. Solamente agregue el
	parámetro <parameter class="command">-r</parameter> para
	también eliminar el directorio home y la cola de correo del
	usuario. Por ejemplo:
      </para>

      <screen>
# <userinput>userdel -r bob</userinput>
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-usermgmt-su">
    <title>Evitando el uso de root con su</title>

    <para>
      Es aconsejable evitar loguearse como
      <emphasis>root</emphasis>. Hay muchar razones para no hacer
      esto. Teclear erróneamente un comando puede causar problemas, y
      programas maliciosos pueden hacer mucho daño cuando se está
      logueado como <emphasis>root</emphasis>. Aún asi, hay muchas
      situaciones en las que requerirá acceder como root. Por ejemplo,
      para realizar tareas de administración o para instalar nuevos
      programas. Afortunadamente el comando <command>su</command>
      puede darle temporalmente privilegios de usuario root.
    </para>

    <para>
      Using <command>su</command> is very simple. Just executing
      <command>su</command> will ask you for the root password, and
      will start a shell with root privileges after the password is
      correctly entered:
    </para>

    <screen>
$ <userinput>whoami</userinput>
bob
$ <userinput>su</userinput>
Password: 
# <userinput>whoami</userinput>
root
# <userinput>exit</userinput>
exit
$ <userinput>whoami</userinput>
bob
    </screen>

    <para>
      In this example the user <emphasis>bob</emphasis> is logged on,
      the <command>whoami</command> output reflects this. The user
      executes su and enters the <emphasis>root</emphasis>
      password. <command>su</command> launches a shell with root
      privileges, this is confirmed by the <command>whoami</command>
      output. After exiting the <emphasis>root</emphasis> shell,
      control is returned to the original running shell running with
      the privileges of the user <emphasis>bob</emphasis>.
    </para>

    <para>
      It is also possible to execute just one command as the
      <emphasis>root</emphasis> user with the <parameter
      class="command">-c</parameter> parameter. The following example
      will run <command>lilo</command>:
    </para>

    <screen>
$ <userinput>su -c lilo</userinput>
    </screen>

    <para>
      If you want to give parameters to the command you would like to
      run, use quotes (e.g. <command>su -c &quot;ls -l
      /&quot;</command>). Without quotes <command>su</command> cannot
      determine whether the parameters should be used by the specified
      command, or by <command>su</command> itself.
    </para>

    <sect2 xml:id="chap-usermgmt-su-restrict">
      <title>Restricting su access</title>

      <para>
	You can refine access to <command>su</command> with
	<emphasis>suauth</emphasis>.  It is a good security practice
	to only allow members of a special group to
	<command>su</command> to <emphasis>root</emphasis>. For
	instance, you can restrict root <command>su</command>-ing in a
	BSD fashion to members of the <emphasis>wheel</emphasis> group
	by adding the following line to
	<filename>/etc/suauth</filename>:
      </para>

      <screen>
root:ALL EXCEPT GROUP wheel:DENY
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-usermgmt-quota">
    <title>Disk quota</title>

    <sect2 xml:id="chap-usermgmt-quota-intro">
      <title>Introduction</title>

      <para>
	Disk quota is a mechanism that allows the system administrator
	to restrict the number of disk blocks and inodes that a
	particular user and group can use. Not all filesystems
	supported by Linux support quota, widely used filesystems that
	support quota are ext2, ext3 and XFS. Quota are turned on and
	managed on a per filesystem basis.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-config">
      <title>Enabling quota</title>

      <para>
	Quota can be enabled per filesystem in
	<filename>/etc/fstab</filename>, by using the
	<parameter>usrquota</parameter> and
	<parameter>grpquota</parameter> filesystem options. For
	example, suppose that we have the following entry for the
	<filename>/home</filename> partition in
	<filename>/etc/fstab</filename>:
      </para>

      <screen>
/dev/hda8        /home            xfs         defaults         1   2
      </screen>

      <para>
	We can now enable user quota by adding the
	<parameter>usrquota</parameter> filesystem option:
      </para>

      <screen>
/dev/hda8        /home            xfs         defaults<emphasis role="bold">,usrquota</emphasis> 1   2
      </screen>

      <para>
	At this point the machine can be rebooted, to let the
	Slackware Linux initialization scripts enable quota. You can
	also enable quota without rebooting the machine, by remounting
	the partition, and running the <command>quotaon</command>
	command:
      </para>

      <screen>
# <userinput>mount -o remount /home</userinput>
# <userinput>quotaon -avug</userinput>
      </screen>
    </sect2>

    <sect2 xml:id="chap-usermgmt-quota-edit">
      <title>Editing quota</title>

      <para>
	User and group quotas can be edited with the
	<quote>edquota</quote> utility. This program allows you to
	edit quotas interactively with the <command>vi</command>
	editor. The most basic syntax of this command is
	<command>edquota username</command>. For example:
      </para>

      <screen>
# <userinput>edquota joe</userinput>
      </screen>

      <para>
	This will launch the <command>vi</command> editor with the
	quota information for the user <emphasis>joe</emphasis>.  It
	will look like this:
      </para>

      <screen>
Disk quotas for user joe (uid 1143):
  Filesystem                   blocks       soft       hard     inodes     soft    hard
  /dev/hda5                      2136          0          0         64        0       0
      </screen>

      <para>
	In this example quotas are only turned on for one file system,
	namely the filesystem on <filename>/dev/hda5</filename>. As
	you can see there are multiple columns. The
	<emphasis>blocks</emphasis> column shows how many block the
	user uses on the file system, and the
	<emphasis>inodes</emphasis> column the number of inodes a user
	occupies. Besides that there are <emphasis>soft</emphasis> and
	<emphasis>hard</emphasis> columns after both
	<emphasis>blocks</emphasis> and
	<emphasis>inodes</emphasis>. These columns specify the soft
	and hard limits on blocks and inodes. A user can exceed the
	soft limit for a grace period, but the user can never exceed
	the hard limit. If the value of a limit is
	<emphasis>0</emphasis>, there is no limit.
      </para>

      <note>
	<para>
          The term <quote>blocks</quote> might be a bit confusing in
          this context. In the quota settings a block is 1KB, not the
          block size of the file system.
        </para>
      </note>

      <para>
	Let's look at a simple example. Suppose that we would like to
	set the soft limit for the user <emphasis>joe</emphasis> to
	<emphasis>250000</emphasis>, and the hard limit to
	<emphasis>300000</emphasis>. We could change the quotas listed
	above to:
      </para>

      <screen>
Disk quotas for user joe (uid 1143):
  Filesystem                   blocks       soft       hard     inodes     soft    hard
  /dev/hda5                      2136     <emphasis role="bold">250000</emphasis>     <emphasis role="bold">300000</emphasis>         64        0       0
      </screen>

      <para>
        The new quota settings for this user will be active after
        saving the file, and quitting <command>vi</command>.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-quota-repquota">
      <title>Getting information about quota</title>

      <para> 
	It is often useful to get statistics about the current quota
	usage.  The <command>repquota</command> command can be used to
	get information about what quotas are set for every user, and
	how much of each quota is used. You can see the quota settings
	for a specific partition by giving the name of the partition
	as a parameter. The <parameter class="command">-a</parameter>
	parameter will show quota information for all partitions with
	quota enabled. Suppose that you would like to see quota
	information for <filename>/dev/hda5</filename>, you can use
	the following command:
      </para>

      <screen>
# <userinput>repquota /dev/hda5</userinput>
*** Report for user quotas on device /dev/hda5
Block grace time: 7days; Inode grace time: 7days
                        Block limits                File limits
User            used    soft    hard  grace    used  soft  hard  grace
----------------------------------------------------------------------
root      --       0       0       0              3     0     0       
[..]
joe       --    2136  250000  300000             64     0     0       
[..]
      </screen>
    </sect2>
  </sect1>
</chapter>
