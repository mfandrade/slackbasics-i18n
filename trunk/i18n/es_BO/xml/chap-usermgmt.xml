<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
	 xml:lang="es" xml:id="chap-usermgmt">
  <title>Administración de usuarios</title>

  <sect1 xml:id="chap-usermgmt-intro">
    <title>Introducción</title>

    <para>
      GNU/Linux es un sistema operativo multi-usuario. Esto significa
      que múltiples usuarios pueden usar el sistema simultáneamente.
      Los conceptos GNU/Linux para la administración de usuarios son
      bastante simples. En primer lugar, existen varias cuentas de
      usuario en cada sistema. Inclusive en sistemas con un solo
      usuario existen múltiples cuentas, porque GNU/Linux usa cuentas
      únicas para algunas tareas. Los usuarios pueden ser miembros de
      grupos. Los grupos son usados para permisos mas detallados, por
      ejemplo, puede hacer un archivo leíble para un grupo
      específico. Hay unos pocos usuarios y grupos reservados en cada
      sistema. La más importante de estas es la cuenta
      <emphasis>root</emphasis>. El usuario <emphasis>root</emphasis>
      es el administrador del sistema. Es aconsejable evitar loguearse
      como root, porque implica grandes riesgos de seguridad. Usted
      puede loguearse como usuario normal y realizar tareas
      administrativas utilizando los comandos <command>su</command> y
      <command>sudo</command>.
    </para>

    <para>
      Las cuentas de usuario disponibles están especificadas en
      <filename>/etc/passwd</filename>. Puede dar un vistazo a este
      archivo para darse una idea de qué cuentas de usuario son
      obligatorias. Como usted probablemente notará, no hay
      contraseñas en este archivo. Las contraseñas se alojan en un
      archivo separado <filename>/etc/shadow</filename> como una
      cadena encriptada. La información sobre grupos es almacenada en
      <filename>/etc/group</filename>. En general no es aconsejable
      editar estos archivos directamente. Existen algunas excelentes
      herramientas que pueden ayudarle con la administración de
      usuarios y grupos. Este capítulo describirá algunas de estas
      herramientas.
    </para>
  </sect1>

  <sect1 xml:id="chap-usermgmt-user">
    <title>Agregando y eliminando usuarios</title>

    <sect2 xml:id="chap-usermgmt-user-add">
      <title>useradd</title>

      <para>
	El comando <command>useradd</command> es usado para agregar
	cuentas de usuario al sistema. Ejecutando
	<command>useradd</command> con un nombre de usuario como
	parámetro creará el usuario en el sistema. Por ejemplo:
      </para>

      <screen>
# <userinput>useradd bob</userinput>
      </screen>

      <para>
	Crea la cuenta de usuario <emphasis>bob</emphasis>. Por favor
	tenga en cuenta que esto no crea un directorio home para el
	usuario. Agregue el parámetro <parameter
	class="command">-m</parameter> para crear un directorio
	home. Por ejemplo:
      </para>

      <screen>
# <userinput>useradd -m bob</userinput>
      </screen>

      <para>
	Esto debería agregar el usuario <emphasis>bob</emphasis> al
	sistema y crear el directorio home
	<filename>/home/bob</filename> para este usuario. Normalmente
	el usuario se agrega como miembro el grupo
	<emphasis>users</emphasis>. Suponga que quisiéramos colocar el
	grupo <emphasis>crew</emphasis> como grupo primario para el
	usuario <emphasis>bob</emphasis>. Esto puede hacerse usando el
	parámetro <parameter class="command">-g</parameter>. Por
	ejemplo:
      </para>

      <screen>
# <userinput>useradd -g crew -m bob</userinput>
      </screen>

      <para>
	También es posible agregar este usuario a grupos secundarios
	durante la creación de la cuenta con el parámetro
	<emphasis>-G</emphasis>. Los nombres de los grupos pueden
	estar separados con comas. El siguiente comando creará el
	usuario <emphasis>bob</emphasis>, que es miembro del grupo
	<emphasis>crew</emphasis> y de los grupos secundarios
	<emphasis>www-admins</emphasis> y
	<emphasis>ftp-admins</emphasis>:
      </para>

      <screen>
# <userinput>useradd -g crew -G www-admins,ftp-admins -m bob</userinput>
      </screen>

      <para>
	Por defecto el comando <command>useradd</command> solamente
	agrega usuarios, no asigna una contraseña para el usuario
	agregado. Las contraseñas pueden asignarse usando el comando
	<command>passwd</command>.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-passwd">
      <title>passwd</title>

      <para>
	Como probablemente ya haya notado, el comando
	<command>passwd</command> es usado para asignar una contraseña
	para un usuario. Ejecutando este comando como un usuario sin
	parámetros cambiará la contraseña para este usuario. El
	comando <command>passwd</command> preguntará por la contraseña
	anterior una vez, y dos veces por la nueva contraseña:
      </para>

      <screen>
$ <userinput>passwd</userinput>
Changing password for bob
(current) UNIX password: 
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
      </screen>

      <para>
	El usuario <emphasis>root</emphasis> puede asignar contraseñas
	para usuarios especificando el nombre de usuario como
	parámetro. El comando <command>passwd</command> solamente
	preguntará por la nueva contraseña. Por ejemplo:
      </para>

      <screen>
# <userinput>passwd bob</userinput>
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
      </screen>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-adduser">
      <title>adduser</title>

      <para>
	El comando <command>adduser</command> combina
	<command>useradd</command> y <command>passwd</command> en un
	script interactivo. Le pedirá llenar información sobre la
	cuenta a ser creada. Después de eso creará una cuenta basado
	en la información proveída. La pantalla listada abajo muestra
	una sesión de ejemplo.
      </para>

      <screen>
# <userinput>adduser</userinput>

Login name for new user []: <userinput>john</userinput>

User ID ('UID') [ defaults to next available ]: <userinput>&lt;Enter&gt;</userinput>

Initial group [ users ]: <userinput>&lt;Enter&gt;</userinput>

Additional groups (comma separated) []: <userinput>staff</userinput>

Home directory [ /home/john ] <userinput>&lt;Enter&gt;</userinput>

Shell [ /bin/bash ] <userinput>&lt;Enter&gt;</userinput>

Expiry date (YYYY-MM-DD) []: <userinput>&lt;Enter&gt;</userinput>

New account will be created as follows:

---------------------------------------
Login name.......:  john
UID..............:  [ Next available ]
Initial group....:  users
Additional groups:  [ None ]
Home directory...:  /home/john
Shell............:  /bin/bash
Expiry date......:  [ Never ]

This is it... if you want to bail out, hit Control-C.  Otherwise, press
ENTER to go ahead and make the account.
<userinput>&lt;Enter&gt;</userinput>

Creating new account...


Changing the user information for john
Enter the new value, or press ENTER for the default
        Full Name []: <userinput>John Doe</userinput>
        Room Number []: <userinput>&lt;Enter&gt;</userinput>
        Work Phone []: <userinput>&lt;Enter&gt;</userinput>
        Home Phone []: <userinput>&lt;Enter&gt;</userinput>
        Other []: <userinput>&lt;Enter&gt;</userinput>
Changing password for john
Enter the new password (minimum of 5, maximum of 127 characters)
Please use a combination of upper and lower case letters and numbers.
New password: <userinput>password</userinput>
Re-enter new password: <userinput>password</userinput>


Account setup complete.
      </screen>

      <para>
	Puede usar los valores por defecto, o dejar algunos campos
	vacíos presionando la tecla &lt;Enter&gt;.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-userdel">
      <title>userdel</title>

      <para>
	Algunas veces es necesario remover una cuenta de usuario del
	sistema. GNU/Linux ofrece la herramienta
	<command>userdel</command> para hacer esto. Solamente
	espeficique el nombre de usuario como parámetros para remover
	ése usuario del sistema. Por ejemplo, el siguiente comando
	removerá la cuenta de usuario <emphasis>bob</emphasis> del
	sistema:
      </para>

      <screen>
# <userinput>userdel bob</userinput>
      </screen>

      <para>
	Esto solamente removerá la cuenta de usuario, no el directorio
	home del usuario ni su cola de correo. Solamente agregue el
	parámetro <parameter class="command">-r</parameter> para
	también eliminar el directorio home y la cola de correo del
	usuario. Por ejemplo:
      </para>

      <screen>
# <userinput>userdel -r bob</userinput>
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-usermgmt-su">
    <title>Evitando el uso de root con su</title>

    <para>
      Es aconsejable evitar iniciar sesión como
      <emphasis>root</emphasis>. Hay muchar razones para no hacer
      esto. Podría teclear erróneamente un comando puede causar
      problemas, y programas maliciosos pueden hacer mucho daño cuando
      se está logueado como <emphasis>root</emphasis>. Aún asi, hay
      muchas situaciones en las que requerirá acceder como root. Por
      ejemplo, para realizar tareas de administración o para instalar
      nuevos programas. Afortunadamente el comando
      <command>su</command> puede darle temporalmente privilegios de
      usuario root.
    </para>

    <para>
      Usar <command>su</command> es muy simple. La ejecución del
      <command>su</command> le preguntará por la contraseña root e
      iniciará una consola con privilegios de usuario después de que
      la contraseña sea correctamente ingresada:
    </para>

    <screen>
$ <userinput>whoami</userinput>
bob
$ <userinput>su</userinput>
Password: 
# <userinput>whoami</userinput>
root
# <userinput>exit</userinput>
exit
$ <userinput>whoami</userinput>
bob
    </screen>

    <para>
      En este ejemplo el usuario <emphasis>bob</emphasis> está
      logueado, la salida del comando <command>whoami</command>
      refleja esto. El usuario ejecuta su e ingresa la contraseña
      <emphasis>root</emphasis>. <command>su</command> inicia una
      consola con privilegios root, esto es confirmado por la salida
      del comando <command>whoami</command>. Después de salir de la
      consola <emphasis>root</emphasis>, el control es retornado a la
      consola original con los privilegios del usuario
      <emphasis>bob</emphasis>.
    </para>

    <para>
      También es posible ejecutar solamente un comando como usuario
      <emphasis>root</emphasis> con el parámetro <parameter
      class="command">-c</parameter>. El siguiente ejemplo ejecutará
      <command>lilo</command>:
    </para>

    <screen>
$ <userinput>su -c lilo</userinput>
    </screen>

    <para>
      Si quiere pasarle parámetros al comando que quisiera ejecutar,
      utilice comillas (e.g. <command>su -c &quot;ls -l
      /&quot;</command>). Sin las comillas <command>su</command> no
      puede determinar si los parámetros deberían ser usado por el
      comando especificado, o por el mismo <command>su</command>.
    </para>

    <sect2 xml:id="chap-usermgmt-su-restrict">
      <title>Restringiendo acceso a su</title>

      <para>
	Puede refinar el acceso a <command>su</command> con
	<emphasis>suauth</emphasis>. Es una buena práctica de
	seguridad solamente permitir a algunos miembros de un grupo
	especial usar el comando <command>su</command> como
	<emphasis>root</emphasis>. Por ejemplo, puede restringir
	acceso a operaciones root en una forma BSD solamente para
	miembros del grupo <emphasis>wheel</emphasis> agregando la
	siguiente línea a <filename>/etc/suauth</filename>:
      </para>

      <screen>
root:ALL EXCEPT GROUP wheel:DENY
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-usermgmt-quota">
    <title>Cuota de disco (Disk quota)</title>

    <sect2 xml:id="chap-usermgmt-quota-intro">
      <title>Introducción</title>

      <para>
	Disk quota es un mecanismo que permite al administrador del
	sistema restringir el número de bloques de disco e inodos que
	un usuario o grupo en particular puede usar. No todos los
	sistemas de archivos soportados por Linux soportan quota, los
	sistemas ampliamente usados que soportan quota son ext2, ext3
	y XFS. Quota es habilitado y administrado para cada sistema de
	archivos.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-config">
      <title>Habilitando quota</title>

      <para>
	Quota puede habilitarse para cada sistema de archivos en
	<filename>/etc/fstab</filename>, usando las opciones del
	sistema de archivos <parameter>usrquota</parameter> y
	<parameter>grpquota</parameter>. Por ejemplo, suponga que
	tenemos la siguiente entrada para la partición
	<filename>/home</filename> en <filename>/etc/fstab</filename>:
      </para>

      <screen>
/dev/hda8        /home            xfs         defaults         1   2
      </screen>

      <para>
	Ahora podemos habilitar la quota de usuario agregando la
	opción del sistema de archivos
	<parameter>usrquota</parameter>:
      </para>

      <screen>
/dev/hda8        /home            xfs         defaults<emphasis role="bold">,usrquota</emphasis> 1   2
      </screen>

      <para>
	En este punto la máquina puede ser reiniciada, para dejar que
	los scripts de inicialización de Slackware Linux habiliten
	quota. También puede activar quota sin reiniciar el sistema,
	remontando la partición y ejecutando el comando
	<command>quotaon</command>:
      </para>

      <screen>
# <userinput>mount -o remount /home</userinput>
# <userinput>quotaon -avug</userinput>
      </screen>
    </sect2>

    <sect2 xml:id="chap-usermgmt-quota-edit">
      <title>Editando quota</title>

      <para>
	Las quotas (cuotas) de usuario y grupo pueden ser editadas con
	la utilidad <quote>edquota</quote>. Este programa permite
	editar las quotas interactivamente con el editor
	<command>vi</command>. La sintaxis básica de este comando es
	<command>edquota username</command>. Por ejemplo:
      </para>

      <screen>
# <userinput>edquota joe</userinput>
      </screen>

      <para>
	Esto iniciará el editor <command>vi</command> con la
	información de la quota para el usuario
	<emphasis>joe</emphasis>. Se vería así:
      </para>

      <screen>
Disk quotas for user joe (uid 1143):
  Filesystem                   blocks       soft       hard     inodes     soft    hard
  /dev/hda5                      2136          0          0         64        0       0
      </screen>

      <para>
	En este ejemplo las quotas son activadas para un sistema de
	archivos, el sistema de archivos en
	<filename>/dev/hda5</filename>. Como puede ver hay múltiples
	columnas. La columna <emphasis>blocks</emphasis> muestra
	cuántos bloques son usados por el usuario en el sistema de
	archivos y la columna <emphasis>inodes</emphasis> muestra el
	número de inodos que un usuario ocupa. Además están las
	columnas <emphasis>soft</emphasis> y <emphasis>hard</emphasis>
	después de las ya mencionadas. Estas columnas especifican los
	límites soft y hard en bloques e inodos. Un usuario puede
	exceder el límite soft por un periodo temporal, pero el
	usuario nunca puede exceder el límite hard. Si el valor de un
	límite es <emphasis>0</emphasis>, entonces no hay límite:
      </para>

      <note>
	<para>
	  El término <quote>blocks</quote> puede ser un poco confuso
	  en este contexto. En la configuración de quota un bloque es
	  1KB, no el tamñano de bloque del sistema de archivos.
        </para>
      </note>

      <para>
	Veamos un ejemplo simple. Suponga que quisiéramos configurar
	el límite soft para el usuario <emphasis>joe</emphasis> en
	<emphasis>250000</emphasis> y el límite hard en
	<emphasis>300000</emphasis>. Podríamos cambiar las quotas
	listadas anteriormente a:
      </para>

      <screen>
Disk quotas for user joe (uid 1143):
  Filesystem                   blocks       soft       hard     inodes     soft    hard
  /dev/hda5                      2136     <emphasis role="bold">250000</emphasis>     <emphasis role="bold">300000</emphasis>         64        0       0
      </screen>

      <para>
	La nueva configuración de quota para este usuario se activará
	después de guardar el archivo y salir de
	<command>vi</command>.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-quota-repquota">
      <title>Obteniendo información sobre quota</title>

      <para> 
	A veces es útil obtener estadísticas sobre el uso de la quota
	actual. El comando <command>repquota</command> puede ser usado
	para obtener información sobre las cuotas asignadas para cada
	usuario y para una partición específica dando el nombre de la
	partición como parámetro. El parámetro <parameter
	class="command">-a</parameter> mostrará la información de la
	quota para todas las particiones con quota activada. Suponga
	que quisiera ver la información de quota para
	<filename>/dev/hda5</filename>, para esto puede usar el
	siguiente comando:
      </para>

      <screen>
# <userinput>repquota /dev/hda5</userinput>
*** Report for user quotas on device /dev/hda5
Block grace time: 7days; Inode grace time: 7days
                        Block limits                File limits
User            used    soft    hard  grace    used  soft  hard  grace
----------------------------------------------------------------------
root      --       0       0       0              3     0     0       
[..]
joe       --    2136  250000  300000             64     0     0       
[..]
      </screen>
    </sect2>
  </sect1>
</chapter>
