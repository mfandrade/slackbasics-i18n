<?xml version="1.0" encoding="UTF-8"?>

<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
	 xml:lang="es" xml:id="kernel">
  <title>Construyendo un kernel</title>

  <sect1 xml:id="chap-kernel-intro">
    <title>Introducción</title>

    <para>
      El kernel Linux es brevemente discutido en <xref
      linkend="chap-intro-linux" />. Una de las ventajas de Linux 
      es que los archivos fuente están disponibles (como la mayoría 
      del sistema Slackware Linux). Esto quiere decir que usted puede 
      recompilar el kernel. Hay muchas situaciones en las que es útil 
      recompilar el kernel. Por ejemplo:
    </para> 

    <itemizedlist>
      <listitem>
	<para>
	  <emphasis role="bold">Agilizar el kernel</emphasis>: Uno
	  puede deshabilitar ciertas funcionalidades del kernel, para
	  reducir su tamaño. Esto es especialmente útil en ambientes
	  donde la memoria es escasa.
	</para>
      </listitem>
      <listitem>
	<para>
	  <emphasis role="bold">Optimizar el kernel</emphasis>: Es
	  posible optimizar el kernel. Por ejemplo, compilándolo para
	  un tipo específico de procesador.
	</para>
      </listitem>
      <listitem>
	<para>
	  <emphasis role="bold">Soporte de hardware</emphasis>: El
	  soporte para algunos dispositivos de hardware no está
	  habilitado por defecto en el kernel Linux proveído por
	  Slackware Linux. Un ejemplo común es el soporte para
	  sistemas SMP.
	</para>
      </listitem>
      <listitem>
	<para>
	  <emphasis role="bold">Utilizar parches personalizados</emphasis>: 
	  Existen muchos parches no oficiales para el kernel Linux. 
	  Generalmente hablando, es aconsejable evitar parches no 
	  oficiales. Pero algun software de terceros requiere instalar 
	  parches adicionales al kernel, como <ulink
	  url="http://www.netraverse.com">Win4Lin</ulink>.
	</para>
      </listitem>
      <listitem>
	<para>
	  Preparar las cabeceras correctas y construir una infraestructura 
	  disponible para construir módulos de terceros.
	</para>
      </listitem>
    </itemizedlist>

    <para>
      Este capítulo se enfoca en la serie del kernel por defecto usada
      en Slackware Linux 12.0, Linux 2.6. Compilar un kernel no es
      difícil, solamente mantenga una copia de seguridad del kernel
      que pueda usar cuando algo malo ocurra. La compilación de Linux
      incluye estos pasos:
    </para>

    <itemizedlist>
      <listitem>
	<para>
	  Configuración del kernel.
	</para>
      </listitem>
      <listitem>
	<para>
	  Construcción del kernel.
	</para>
      </listitem>
      <listitem>
	<para>
	  Construcción de módulos.
	</para>
      </listitem>
      <listitem>
	<para>
	  Instalación del kernel y los módulos.
	</para>
      </listitem>
      <listitem>
	<para>
	  Actualización de la configuración de LILO.
	</para>
      </listitem>
    </itemizedlist>
    
    <para>
      En este capítulo, suponemos que las fuentes del kernel están 
      disponibles en <filename>/usr/src/linux</filename>. Si ha instalado 
      las fuentes del kernel desde el conjunto de paquetes <quote>k</quote>, 
      las fuentes del kernel están disponibles en 
      <filename>/usr/src/linux-kernelversion</filename> y 
      <filename>/usr/src/linux</filename> es un enlace simbólico al 
      directorio real de las fuentes del kernel. Entonces, si usted 
      usa el paquete estándar del kernel Slackware Linux está listo 
      para continuar.
    </para>

    <para>
      En contraste con versiones anteriores del kernel, ya no es
      necesario utilizar un enlace simbólico
      <filename>/usr/src/linux</filename>. Si usted ha extraído nuevas
      fuentes del kernel en <filename>/usr/src</filename>, puede
      construir el kernel en
      <filename>/usr/src/linux-&lt;version&gt;</filename> y usar ese
      directorio en los ejemplos de éste capítulo.
    </para>
  </sect1>

  <sect1 xml:id="chap-kernel-build">
    <title>Configuración</title>

    <para>
      Como ya se describió, el primer paso es configurar las fuentes
      del kernel. Para facilitar la configuración, es aconsejable
      copiar la configuración por defecto del kernel de Slackware
      Linux a las fuentes del kernel. Los archivos de configuración
      del kernel de Slackware Linux se almacenan en el medio de
      distribución como
      <filename>kernels/&lt;kernelname&gt;/config</filename>. Suponga
      que quiere usar la configuración del kernel
      <filename>hugesmp.s</filename> (el cual es el kernel por
      defecto) como punto de partida y tiene montado el CD-ROM de
      Slackware Linux en <filename>/mnt/cdrom</filename>, usted puede
      copiar la configuración del kernel de Slackware Linux con:
    </para>
    
    <screen>
# <userinput>cp /mnt/cdrom/kernels/hugesmp.s/config /usr/src/linux/.config</userinput>
    </screen>

    <para>
      La configuración del kernel en un kernel en ejecución puede
      obtenerse como <filename>/proc/config.gz</filename> si el kernel
      fué compilado con las opciones
      <emphasis>CONFIG_IKCONFIG</emphasis> y
      <emphasis>CONFIG_IKCONFIG_PROC</emphasis>. Los kernels por
      defecto en Slackware Linux tienen estas opciones
      activadas. Entonces, si usted quisiera usar la configuración del
      kernel en ejecución, puede ejecutar:
    </para>

    <screen>
# <userinput>zcat /proc/config.gz > /usr/src/linux/.config</userinput>
    </screen>

    <para>
      Si esta usando un archivo de configuración para otra versión del
      kernel diferente a la que esta compilando debe ser consciente de
      que ambas versiones del kernel no tienen el mismo conjunto de
      opciones. Usualmente nuevas opciones son agregadas (e.g. por que
      nuevos controladores son agregados) y algunas veces se remueven
      componentes del kernel. Puede configurar nuevas opciones (y
      remover opciones obsoletas) con el comando <command>make
      oldconfig</command>:
    </para>

    <para>
# <userinput>cd /usr/src/linux ; make oldconfig</userinput>
    </para>

    <para>
      Esto le preguntará por si quiere compilar en soporte
      (<emphasis>Y</emphasis>), compilar soporte como módulo
      (<emphasis>M</emphasis>), o no incluir soporte
      (<emphasis>N</emphasis>). Por ejemplo:
    </para>

    <screen>
IBM ThinkPad Laptop Extras (ACPI_IBM) [N/m/y/?] (NEW)
    </screen>

    <para>
      Como puede ver, las opciones posibles se muestran, con la
      elección por defecto en mayúscula. Si usted presiona
      &lt;Enter&gt;, la opción en mayúscula será usada. Si usted
      quiere mas información sobre una opción, puede ingresar el signo
      de pregunta (<emphasis>?</emphasis>):
    </para>

    <screen>
    IBM ThinkPad Laptop Extras (ACPI_IBM) [N/m/y/?] (NEW) <userinput>?</userinput>

This is a Linux ACPI driver for the IBM ThinkPad laptops. It adds
support for Fn-Fx key combinations, Bluetooth control, video
output switching, ThinkLight control, UltraBay eject and more.
For more information about this driver see &lt;file:Documentation/ibm-acpi.txt&gt;
and &lt;http://ibm-acpi.sf.net/&gt; .

If you have an IBM ThinkPad laptop, say Y or M here.

    IBM ThinkPad Laptop Extras (ACPI_IBM) [N/m/y/?] (NEW)
    </screen>

    <para>
      La salida de este comando puede ser algo corta, porque las
      opciones que fueron usadas en el archivo de configuración y que
      están disponibles en el kernel en ejecución también se muestran,
      pero la configuración será llenada automáticamente basada en el
      archivo de configuración.
    </para>
    
    <para>
      En este punto puede empezar a configurar el kernel en
      detalle. Existen tres front-ends (interfaces) de configuración
      para el kernel. El primero es <parameter
      class="command">config</parameter>, que pregunta sobre qué
      quiere hacer para cada opción del kernel. Esto toma mucho
      tiempo. Entonces, normalmente esta no es una buena forma de
      configurar del kernel. Una solución mas amigable es el front-end
      <parameter class="command">menuconfig</parameter>, que utiliza
      un sistema de menús que puede usar para configurar el
      kernel. Existe también un front-end X (de ventanas) denominado
      <parameter class="command">xconfig</parameter>. Puede iniciar
      cualquier interfaz de configuración navegando al directorio de
      fuentes del kernel, y ejecutando <command>make
      &lt;front-end&gt;</command>. Por ejemplo, para configurar el
      kernel con el front-end de menús puede usar los siguientes
      comandos:
    </para>
    
    <screen>
# <userinput>cd /usr/src/linux</userinput>
# <userinput>make menuconfig</userinput>
    </screen>
    
    <para>
      Por supuesto, si usted prefiere, puede editar directamente el
      archivo <filename>.config</filename> con su editor de texto
      favorito.
    </para>

    <para>
      Como hemos visto previamente, hay tres opciones para cada
      selección en la configuración del kernel: <quote>n</quote>
      deshabilita la funcionalidad, <quote>y</quote> habilita la
      funcionalidad y <quote>m</quote> compila la funcionalidad como
      un módulo. La configuración del kernel por defecto en Slackware
      Linux es muy buena, incluye el soporte para la mayoría de los
      controladores de discos comunes y sistemas de archivos, el resto
      es compilado como módulos. Cualquiera sean las elecciones que
      haga, debe asegurarse de incluir el controlador del disco y el
      soporte para el sistema de archivos que contiene sus sistema
      raíz. Cuando no estan incluídos el kernel no será capaz de
      montar el sistema raíz y se generará un error del tipo
      <emphasis>kernel panic</emphasis> por que no se puede delegar la
      inicialización al programa <command>init</command>.
    </para>

    <note>
      <para>
	Es aconsejable mantener su kernel y módulos antiguos cerca, en
	el caso de que cometa un error de configuración. Si el kernel
	a ser compilado tiene el mismo número de version que el kernel
	en ejecución, debería considerar seriamente modificar la
	opción <emphasis>CONFIG_LOCALVERSION</emphasis>. La cadena
	especificada en esta opción se concatena al nombre de
	versión. Por ejemplo, si el kernel tiene la versión 2.6.21.6
	asignada y <emphasis>CONFIG_LOCALVERSION</emphasis> está con
	el valor <emphasis>"-smp-ddk"</emphasis>, la versión completa
	del kernel será <emphasis>2.6.21.6-smp-ddk</emphasis>.
      </para>

      <para>
	Si usted no modifica la versión de esta forma, la instalación
	de los módulos desde el kernel nuevo sobreescribirán los
	módulos del kernel en ejecución. Esto es altamente incómodo si
	necesita regresar al kernel antiguo.
      </para>
    </note>
  </sect1>
  
  <sect1 xml:id="chap-kernel-compile">
    <title>Compilación</title>

    <para>
      La compilación del kernel usada consiste en múltiples pasos,
      pero los kernels 2.6 puede ser compilados ejecutando
      <command>make</command> en el directorio fuente del
      kernel. Esto calculará dependencias, construirá el kernel,
      construirá y enlazará los módulos del kernel.
    </para>

    <screen>
# <userinput>cd /usr/src/linux</userinput>
# <userinput>make</userinput>
    </screen>
    
    <para>
      Después de finalizada la compilación, el árbol contiene los
      módulos compilados y una imagen comprimida del kernel nombrada
      <filename>bzImage</filename> en
      <filename>/usr/src/linux/arch/i386/boot</filename>. Ahora puede
      continuar con la instalación del kernel y sus módulos.
    </para>
  </sect1>
  
  <sect1 xml:id="chap-kernel-install">
    <title>Instalación</title>
    
    <sect2 xml:id="chap-kernel-install-kernel">
      <title>Instalando el kernel</title>
      
      <para>
	El siguiende paso es instalar el kernel y los módulos del
	kernel. Empezaremos instalando los módulos del kernel, porque
	esto puede realizarse con un solo comando dentro del árbol
	fuente del kernel:
      </para>
      
      <screen>
# <userinput>make modules_install</userinput>
      </screen>
      
      <para>
	Esto instalará los módulos en
	<filename>/lib/modules/&lt;kernelversion&gt;</filename>. Si
	está reemplazando un kernel con exactamente el mismo número de
	versión, es aconsejable remover los módulos antiguos antes de
	instalar los nuevos. E.g.:
      </para>
	
      <screen>
# <userinput>rm -rf /lib/modules/2.6.21.5-smp</userinput>
      </screen>
      
      <para>
	Puede <quote>instalar</quote> el kernel copiándolo a el
	directorio <filename>/boot</filename>. Puede asignarle el
	nombre que quiera, pero es aconsejable usar una convención de
	nombrado. E.g.  <filename>vmlinuz-version</filename>. Por
	ejemplo, si lo nombra
	<filename>vmlinuz-2.6.21.5-smp-ddk</filename>, puede copiarlo
	desde el árbol fuente del kernel con:
      </para>
      
      <screen>
# <userinput>cp arch/i386/boot/bzImage /boot/vmlinuz-2.6.21.5-smp-ddk</userinput>
      </screen>
      
      <para>
	En este punto, usted casi ha terminado. El último paso es
	agregar el nuevo kernel a la configuración del cargador de
	arranque de Linux (LILO).
      </para>
    </sect2>
    
    <sect2 xml:id="chap-kernel-install-lilo">
      <title>Configurando LILO</title>
      
      <para>
	<acronym>LILO</acronym> (Linux Loader) es el cargador de
	arranque por defecto en Slackware Linux. La configuración de
	LILO funciona en dos pasos; el primer paso es alterar la
	configuración de LILO en
	<filename>/etc/lilo.conf</filename>. El segundo paso es
	ejecutar el comando <command>lilo</command>, que escribirá la
	configuración de LILO al cargador de arranque. La
	configuración de LILO ya tiene una entrada para el kernel que
	esta ejecutando. Es aconsejable mantener esta entrada, como
	una opción de retroceso si su nuevo kernel no funciona. Si se
	desplaza al final del archivo
	<filename>/etc/lilo.conf</filename> verá esta entrada, que se
	similar a esto:
      </para>
      
      <screen>
# Linux bootable partition config begins
image = /boot/vmlinuz
  root = /dev/hda5
  label = Slack
  read-only # Non-UMSDOS filesystems should be mounted read-only for checking
# Linux bootable partition config ends
      </screen>
      
      <para>
	La forma más sencilla de agregar el nuevo kernel es duplicar
	la entrada existente y luego editar la primera entrada,
	cambiando las opciones <parameter>image</parameter> y
	<parameter>label</parameter>. Después de cambiar según el
	ejemplo anterior, se vería así:
      </para>
      
      <screen>
# Linux bootable partition config begins
image = /boot/vmlinuz-2.6.21.5-smp-ddk
  root = /dev/hda5
  label = Slack
  read-only # Non-UMSDOS filesystems should be mounted read-only for checking

image = /boot/vmlinuz
  root = /dev/hda5
  label = SlackOld
  read-only # Non-UMSDOS filesystems should be mounted read-only for checking
# Linux bootable partition config ends
      </screen>
      
      <para>
	Como puede ver la primera entrada <parameter>image</parameter>
	apunta al nuevo kernel y la etiqueta de la segunda entrada fué
	cambiada a <quote>SlackOld</quote>. LILO cargará
	automáticamente la primera imagen. Ahora puede instalar esta
	nueva configuración de LILO con el comando
	<command>lilo</command>:
      </para>

      <screen>
# <userinput>lilo</userinput>
Added Slack *
Added SlackOld
      </screen>

      <para>
	La siguiente vez que inicie el sistema, ambas entradas estarán
	disponibles y la entrada <quote>Slack</quote> será iniciada
	por defecto:
      </para>
      
      <note>
	<para>
	  Si quiere que LILO muestre un menú con las entradas
	  configuradas vía <filename>lilo.conf</filename> en cada
	  inicio del sistema, asegúrese de agregar la lína que dice 
	</para>

	<screen>
prompt
	</screen>

	<para>
	  a <filename>lilo.conf</filename>. De otra forma LILO
	  iniciará la entrada por defecto que está configurada con
	  <emphasis>default=&lt;name&gt;</emphasis>, o la primera
	  entrada cuando no hay un kernel por defecto
	  configurado. Puede acceder a este menú con entradas en
	  cualquier momento presionando la tecla &lt;Shift&gt; cuando
	  LILO es iniciado.
	</para>
      </note>
    </sect2>
  </sect1>
</chapter>
