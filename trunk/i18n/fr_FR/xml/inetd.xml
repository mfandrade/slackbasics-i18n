<!-- $Id: inetd.xml 283 2007-09-18 20:14:31Z danieldk $ -->

<chapter> <?dbhtml filename="inetd.html"?>
<title>Le super serveur Internet</title>

<sect1>
<title>Introduction</title>

<para>
Il y a 2 manières d'offrir des services TCP/IP : en lançant les applications
serveur autonome en tant que démon ou en utilisant le super serveur Internet,
<command>inetd</command>. <command>inetd</command> est un démon qui surveille
une plage de ports. Si un client tente de se connecter à un port,
<command>inetd</command> gère la connexion et transfère la connexion au logiciel
serveur qui gère ce type de connexion. L'avantage de cette approche est qu'elle
ajoute une couche supplémentaire de sécurité et facilite le log des connexions
entrantes. L'inconvénient est que cela est un peu plus lent que l'utilisation
d'un serveur autonome. Il est donc judicieux d'utiliser un démon autonome,
par exemple sur un serveur FTP très chargé.
</para>

</sect1>

<sect1>
<title>Configuration</title>

<para>
<command>inetd</command> peut être configuré via le fichier
<filename>/etc/inetd.conf</filename>. Voyons une ligne d'exemple de
<filename>inetd.conf</filename> :
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Cette ligne spécifie que <command>inetd</command> doit accepter des connexions
FTP et les passer à <command>tcpd</command>. Cela peut sembler un peu étrange,
vu que normalement c'est <command>proftpd</command> qui gère les connexions FTP.
Vous pouvez aussi spécifier <command>proftpd</command> directement dans
<filename>inetd.conf</filename>, cependant Slackware Linux passe habituellement
la connexion à <command>tcpd</command>. Ce programme passe la connexion à
<command>proftpd</command> à son tour, comme spécifié.
<command>tcpd</command> est utilisé pour surveiller les services et pour fournir
un contrôle d'accès au niveau de l'hôte.
</para>

<para>
Les services peuvent être désactivés en ajoutant un caractère de commentaire (#)
au début de la ligne. Il est conseillé de désactiver tous les services et
d'activer les services dont vous avez besoin un par un. Après modification de
<filename>/etc/inetd.conf</filename> <command>inetd</command>
doit être redémarré pour prendre en compte les changements. Cela s'effectue en
envoyant le signal HUP au processus inetd :
</para>

<screen>
# <command>ps ax | grep 'inetd'</command>
   64 ?        S      0:00 /usr/sbin/inetd
# <command>kill -HUP 64</command>
</screen>

<para>
  Ou vous pouvez utiliser le script d'initialisation
  <filename>rc.inetd</filename> pour redémarrer <command>inetd</command> :
</para>

<screen>
# <command>/etc/rc.d/rc.inetd restart</command>
</screen>

</sect1>

<sect1>
<title>TCP wrappers</title>

<para>
Comme vous pouvez le voir dans <filename>/etc/inetd.conf</filename> les
connexions pour la plupart des protocoles s'effectuent au travers de
<command>tcpd</command>, plutôt que de passer la connexion directement au
programme rendant le service. Par exemple :
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Dans cet exemple les connexions ftp passent à travers <command>tcpd</command>.
<command>tcpd</command> loggue la connexion via syslog et effectue des
vérifications additionnelles. Une des fonctionnalités les plus utilisées de
<command>tcpd</command> est le contrôle d'accès au niveau de l'hôte. Les hôtes
devant être rejetés sont contrôlés via <filename>/etc/hosts.deny</filename>,
les hôtes devant être autorisés via <filename>/etc/hosts.allow</filename>.
Les 2 fichiers fichiers ont une règle par ligne, de la forme suivante :
</para>

<screen>
service: hôtes
</screen>

<para>
Les hôtes peuvent être spécifié par leur nom d'hôte ou par leur adresse IP.
Le mot-clé ALL spécifie tout hôte ou tout service.
</para>

<para>
Supposez que vous vouliez bloquer l'accès à tous les services gérés à travers
<command>tcpd</command>, sauf pour l'hôte
<quote>trusted.example.org</quote>. Pour réaliser cela les fichiers suivants
<filename>hosts.deny</filename> et <filename>hosts.allow</filename> doivent être
créés.
</para>

<para>
<filename>/etc/hosts.deny</filename>:
</para>

<screen>
ALL: ALL
</screen>

<para>
<filename>/etc/hosts.allow</filename>:
</para>

<screen>
ALL: trusted.example.org
</screen>

<para>
Dans <filename>hosts.deny</filename> l'accès est bloqué pour tout (ALL) service
pour tout (ALL) hôte. Cependant <filename>hosts.allow</filename> spécifie que
tout (ALL) service doit être disponible pour <quote>trusted.example.org</quote>.
</para>

</sect1>

</chapter>
