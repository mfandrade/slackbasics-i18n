<!-- $Id: security.xml 283 2007-09-18 20:14:31Z danieldk $ -->

<chapter> <?dbhtml filename="security.html"?>
<title>Sécurité</title>

<sect1>
<title>Introduction</title>

<para>
Avec l'utilisation croissante d'Internet et des réseaux sans fil, la sécurité
devient de plus en plus importante au fil du temps. Il est impossible de couvrir
ce sujet en un seul chapitre d'introduction à GNU/Linux. Ce chapitre couvre
quelques techniques de sécurité de base fournissant un bon début pour la
sécurité d'un ordinateur de bureau ou un serveur.
</para>

<para>
Avant d'entrer dans des sujets plus spécifiques, il est judicieux d'émettre
quelques remarques au sujet des mots de passe. L'autorisation d'accès à
un ordinateur repose essentiellement sur les mots de passe. Assurez-vous
d'utiliser de bons mots de passe en toutes situations. Evitez d'utiliser des
mots, noms, année de naissance, et mots de passe courts. Ces mots de passe
peuvent aisément être cassés à l'aide d'attaques par dictionnaire ou d'attaques
par force brute contre les hôtes ou les tables de mots de passe. Utilisez des
mots de passe longs, 8 caractères ou plus idéalement, composé de lettre
aléatoires (majuscules inclues) et de nombres.
</para>
</sect1>

<sect1>
<title>Fermer des services</title>

<sect2>
<title>Introduction</title>

<para>
Beaucoup de systèmes GNU/Linux exécutent des services ouverts au réseau local ou
à l'Internet. D'autres hôtes peuvent accéder à ces services en se connectant à
des ports spécifiques. Par exemple, le port 80 est utilisé pour le trafic WWW.
Le fichier <filename>/etc/services</filename> contient un tableau avec
les services les plus utilisés, et les numéros de ports employés pour ces
services.
</para>

<para>
Un système sécurisé doit exécuter les services nécessaires. Donc, supposez qu'un
hôte joue le rôle de serveur web, il de devrait pas avoir (et donc servir) les
ports FTP ou SMTP. Les riques de sécurité augmentent d'autant plus qu'il y a de
ports ouverts, car il y a plus de chances qu'un logiciel servant un port donné
contienne une vulnérabilité, ou qu'il soit mal configuré. Les sections suivantes
vous aideront à traquer les ports ouverts, et à les fermer.
</para>
</sect2>

<sect2>
<title>Trouver les ports ouverts</title>

<para>
Les ports ouverts peuvent être repérés grâce à un scanner de ports. Probablement
le plus célèbre scanner de ports pour GNU/Linux est <command>nmap</command>.
<command>nmap</command> est disponible dans la collection <quote>n</quote>. 
</para>

<para>
La syntaxe de base de <command>nmap</command> est :
<command>nmap hôte</command>. Le paramêtre <emphasis>hôte</emphasis> peut aussi
bien être un nom d'hôte qu'une adresse IP. Supposez que vous voulez scanner
l'hôte sur lequel <command>nmap</command> est installé. Dans ce cas vous pouvez
spécifier l'adresse IP de <emphasis>localhost</emphasis>, <emphasis>127.0.0.1</emphasis> :
</para>

<screen>
$ <command>nmap 127.0.0.1</command>

Starting nmap V. 3.00 ( www.insecure.org/nmap/ )
Interesting ports on localhost (127.0.0.1):
(The 1596 ports scanned but not shown below are in state: closed)
Port       State       Service
21/tcp     open        ftp                     
22/tcp     open        ssh                     
23/tcp     open        telnet                  
80/tcp     open        http                    
6000/tcp   open        X11                     

Nmap run completed -- 1 IP address (1 host up) scanned in 0 seconds
</screen>

<para>
Dans cet exemple vous pouvez voir que l'hôte a 5 ports servis ouverts ; ftp,
ssh, telnet, http et X11.
</para>
</sect2>

<sect2>
<title>inetd</title>

<para>
Il y a 2 façons d'offrir des services TCP/IP : en lançant les applications serveur en tant que démons autonomes ou en utilisant le super serveur Internet,
<command>inetd</command>. inetd est un démon surveillant un éventail de ports.
Si un client tente de se connecter à un port écouté par inetd, celui-ci
transfère la connexion au logiciel serveur qui gère ce genre de connexion.
L'avantage de cette approche est l'ajout d'une couche supplémentaire de sécurité
et la facilité de log des connexions entrantes. L'inconvénient est que cela
peut ralentir par rapport à l'utilisation d'un démon autonome. Il est donc
conseillé de lancer un démon autonome, par exemple, un serveur FTP très chargé.
</para>

<para>
Vous pouvez vérifier si <command>inetd</command> s'exécute ou non avec
<command>ps</command>, par exemple :
</para>

<screen>
$ <command>ps ax | grep inetd</command>
 2845 ?        S      0:00 /usr/sbin/inetd
</screen>

<para>
Dans cet exemple inetd s'exécute avec le PID (ID processus) 2845. 
<command>inetd</command> peut être configuré par le fichier
<filename>/etc/inetd.conf</filename>. Jetons un oeil à une ligne d'exemple de
inetd.conf :
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Cette ligne spécifie que inetd doit accepter les connexions FTP et les passer
à <command>tcpd</command>. Cela peut sembler un peu étrange, car c'est
<command>proftpd</command> qui gère en principe les connexions FTP. Vous pouvez
dire aussi d'utiliser proftpd directement dans <filename>inetd.conf</filename>,
mais il est conseillé de laisser la connexion à <command>tcpd</command>. Ce
programme passe la connexion à <command>proftpd</command> à son tour, comme
spécifié. <command>tcpd</command> est utilisé pour surveiller les services et
pour fournir un contrôle d'accès à l'hôte.
</para>

<para>
Les services peuvent être désactivés en ajoutant un caractère de commentaire (#)
au début de la ligne. Il est conseillé de désactiver tous les services et
d'activer les services dont vous avez besoin un par un. Après avoir changé
<filename>/etc/inetd.conf</filename> <command>inetd</command> doit être
redémarré pour prendre en compte les modifications. Cela se fait en envoyant le
signal HUP au processus inetd :
</para>

<screen>
# <command>ps ax | grep 'inetd'</command>
   2845 ?        S      0:00 /usr/sbin/inetd
# <command>kill -HUP 2845</command>
</screen>

<para>
Si vous n'avez pas du tout besoin d'<command>inetd</command>, il est judicieux
de l'enlever. Si vous voulez le garder installé, mais sans vouloir que Slackware Linux ne le lance durant le processus de démarrage, exécutez la commande
suivante en tant que root :
</para>

<screen>
# <command>chmod a-x /etc/rc.d/rc.inetd</command>
</screen>
</sect2>
</sect1>

</chapter>
