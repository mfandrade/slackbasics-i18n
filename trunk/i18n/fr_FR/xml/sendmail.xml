<!-- $Id: sendmail.xml 301 2007-09-19 23:00:26Z danieldk $ -->

<chapter id="email-sendmail"> <?dbhtml filename="sendmail.html"?>
  <title>Sendmail</title>

  <indexterm><primary>sendmail</primary></indexterm>

  <sect1 id="email-sendmail-introduction">
    <title>Introduction</title>
    
    <indexterm><primary>MTA</primary></indexterm>
    <indexterm><primary>Mail Transfer Agent</primary></indexterm>

    <para>
      Sendmail est l'agent de transfert de messagerie (<acronym>MTA</acronym> - 
      NdT : Mail Transfer Agent) qu'utilise Slackware Linux. sendmail a été
      écrit à l'origine par Eric Allman, qui maintient encore sendmail. Le rôle
      principal du MTA sendmail est de délivrer les messages, que ce soit
      localement ou à distance. La livraison est faite en principe via le
      protocole SMTP. Cela signifie que sendmail accepte des e-mails de sites
      distants à travers le port SMTP, et que sendmail livre les e-mails
      destinés aux sites distants aux autres serveurs SMTP.
    </para>
  </sect1>

  <sect1 id="email-sendmail-installation">
    <title>Installation</title>

    <indexterm><primary>sendmail</primary><secondary>installation</secondary></indexterm>

    <para>
      Sendmail est disponible dans le paquet <emphasis>sendmail</emphasis> de la
      série <quote>n</quote>. Si vous voulez générer vos propres fichiers de
      configuration sendmail, le paquet <emphasis>sendmail-cf</emphasis> est
      également requis. Pour savoir comment installer des paquets sur Slackware
      Linux, voir <xref linkend="chap-pkgmgmt" />.
    </para>

    <para>
      Vous pouvez laisser Slackware Linux démarrer sendmail à chaque démarrage
      en rendant <filename>/etc/rc.d/rc.sendmail</filename> exécutable.
      Vous pouvez faire cela en exécutant :
    </para>

    <screen>
# <command>chmod a+x /etc/rc.d/rc.sendmail</command>
    </screen>

    <para>
      Vous pouvez aussi démarrer, stopper et redémarrer sendmail en mettant
      <emphasis>start</emphasis>, <emphasis>stop</emphasis>, et
      <emphasis>restart</emphasis> en paramètre du script d'initialisation de
      sendmail. Par exemple, vous pouvez redémarrer sendmail de la manière
      suivante :
    </para>

    <screen>
# <command>/etc/rc.d/rc.sendmail restart</command>
    </screen>
  </sect1>	

  <sect1 id="email-sendmail-configuration">
    <title>Configuration</title>

    <para>
      Le fichier de configuration de sendmail le plus important est
      <filename>/etc/mail/sendmail.cf</filename> ; c'est là que se configure le
      comportement de sendmail, et où sont inclus les autres fichiers. La
      syntaxe de <filename>/etc/mail/sendmail.cf</filename> est plutôt obscure,
      car ce fichier est compilé à partir de fichiers beaucoup plus simples
      <filename>.mc</filename> qui utilisent des macros M4 définies pour
      sendmail.
    </para>

    <para>
      On peut changer quelques définitions aisément dans le fichier
      <filename>/etc/mail/sendmail.cf</filename>, mais pour d'autres
      modifications il vaut mieux créer votre propre fichier
      <filename>.mc</filename>. Des exemples de ce chapitre seront consacrés à
      la création d'un fichier mc personnalisé.
    </para>

    <sect2 id="email-sendmail-configuration-mc">
      <title>Travailler avec des fichiers mc</title>
    
      <indexterm><primary>sendmail</primary><secondary>fichiers mc</secondary></indexterm>

      <para>
	Dans cette section nous allons voir comment vous pouvez démarrer avec un
	fichier mc, et comment compiler vos propres fichiers .mc en fichier cf.
	Il y a beaucoup de fichiers d'exemple intéressants, disponibles dans 
	<filename>/usr/share/sendmail/cf/cf</filename>. Les plus intéressants
	sont <filename>sendmail-slackware.mc</filename> (qui est utilisé pour
        générer le fichier par défaut <filename>sendmail.cf</filename> de
	Slackware Linux), et <filename>sendmail-slackware-tls.mc</filename> qui
	ajoute le support TLS à la configuration standard de sendmail de
	Slackware Linux. Si vous voulez créer votre propre configuration
	sendmail, il est judicieux de démarrer sur une copie du fichier mc
	standard de Slackware Linux. Par exemple, supposez que vous désirez
	créer un fichier de configuration pour le serveur nommé
	<emphasis>straw</emphasis>, vous pouvez exécuter :
      </para>

      <screen>
# <command>cd /usr/share/sendmail/cf/cf</command>
# <command>cp sendmail-slackware.mc sendmail-straw.mc</command>
      </screen>

      <para>
	et éditer <filename>sendmail-straw.mc</filename>. Dès que le fichier
	de configuration est modifié à votre convenance, M4 peut être sollicité
	pour compiler en fichier cf :
      </para>

      <screen>
# <command>m4 sendmail-straw.mc &gt; sendmail-straw.cf</command>
      </screen>

      <para>
	Si vous voulez utiliser ce nouveau fichier de configuration comme
	configuration par défaut, vous pouvez le copier en
        <filename>/etc/mail/sendmail.cf</filename>:
      </para>

      <screen>
# <command>cp sendmail-straw.cf /etc/mail/sendmail.cf</command>
      </screen>
    </sect2>
    
    <sect2 id="email-sendmail-configuration-smarthost">
      <title>Utiliser un smarthost</title>

      <indexterm><primary>sendmail</primary><secondary>smarthost</secondary></indexterm>

      <para>
	Si vous voulez utiliser un autre hôte pour délivrer l'e-mail à des sites
	que le serveur sendmail que vous configurez n'est pas capable
	d'atteindre, vous pouvez dire à sendmail d'utiliser un soit-disant
	<quote>hôte intelligent</quote>, ou <quote>smart host</quote>.
	Sendmail enverra tout e-mail non livrable vers le smart host, qui est
	supposé gérer l'e-mail à son tour. Vous dites cela en définissant
	<emphasis>SMART_HOST</emphasis> dans votre fichier mc.
	Par exemple, si vous voulez utiliser
	<emphasis>smtp2.example.org</emphasis> comme smart host, vous pouvez
	ajouter la ligne suivante :
      </para>

      <screen>
define(`SMART_HOST',`stmp2.example.org')
      </screen>
    </sect2>

    <sect2 id="email-sendmail-configuration-accepthosts">
      <title>Noms d'hôtes/domaines alternatifs</title>

      <indexterm><primary>sendmail</primary><secondary>noms d'hôtes locaux</secondary></indexterm>

      <para>
	Par défaut sendmail accepte les messages destinés à localhost, et au
	nom d'hôte courant du système. Vous pouvez simplement ajouter des hôtes
	ou domaines supplémentaires pour lesquels il doit accepter des e-mails.
	La première étape est de s'assurer que la ligne suivante est présente
	dans votre configuration mc :
      </para>

      <screen>
FEATURE(`use_cw_file')dnl
      </screen>

      <para>
	Lorsque cette option est activée vous pouvez ajouter à
        <filename>/etc/mail/local-host-names</filename> des noms d'hôte et des
	noms de domaine pour lesquels accepter les e-mails. Ce fichier est une
	base de données de noms séparés par un caractère de fin de ligne. Par
	exemple, le fichier peut ressembler à cela :
      </para>

      <screen>
example.org
mail.example.org
www.example.org
      </screen>
    </sect2>

    <sect2 id="email-sendmail-configuration-mapaddr">
      <title>Table d'utilisateur virtuel</title>

      <indexterm><primary>sendmail</primary><secondary>table d'utilisateur virtuel</secondary></indexterm>

      <para>
	Souvent vous voulez associer des adresses email à des noms
	d'utilisateurs. Ceci est requis quand le nom d'utilisateur est différent
	de la partie avant le <quote>@</quote> d'une adresse e-mail. Pour
	activer cette fonctionnalité, assurez-vous que la ligne suivante est
	présente dans votre fichier mc :
      </para>

      <screen>
FEATURE(`virtusertable',`hash -o /etc/mail/virtusertable.db')dnl
      </screen>

      <para>
	Les associations vont à présent être lues depuis
        <filename>/etc/mail/virtusertable.db</filename>. C'est un fichier de
	base de données binaire qui ne doit pas être édité directement. Vous
	pouvez éditer plutôt <filename>/etc/mail/virtusertable</filename>, et
	générer <filename>/etc/mail/virtusertable.db</filename> depuis ce
	fichier.
      </para>

      <para>
	Le fichier <filename>/etc/mail/virtusertable</filename> est un simple
	fichier texte. Il contient une association par ligne, avec une adresse
	e-mail et un nom d'utilisateur séparés par une tabulation. Par exemple :
      </para>

      <screen>
john.doe@example.org    john
john.doe@mail.example.org        john
      </screen>

      <para>
	Dans cet exemple à la fois l'e-mail pour
        <emphasis>john.doe@example.org</emphasis> et
        <emphasis>john.doe@mail.example.org</emphasis> seront délivrés dans le
	compte <emphasis>john</emphasis>. Il est aussi possible de délivrer des
	e-mails destinés pour un domaine hébergé sur le serveur à une autre
	adresse e-mail, en spécifiant l'adresse e-mail à laquelle délivrer le
	message dans la seconde colonne. Par exemple :
      </para>

      <screen>
john.doe@example.org    john.doe@example.com
      </screen>

      <para>
	Après avoir effectué les modification nécessaires au fichier
        <filename>virtusertable</filename> vous pouvez générer la base de
	données avec la commande suivante :
      </para>

      <screen>
# <command>makemap hash /etc/mail/virtusertable &lt; /etc/mail/virtusertable</command>
      </screen>
    </sect2>
  </sect1>

</chapter>
