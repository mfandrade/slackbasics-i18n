<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
	 xml:lang="fr" xml:id="chap-usermgmt">
  <title>Gestion des utilisateurs</title>

  <sect1 xml:id="chap-usermgmt-intro">
    <title>Introduction</title>

    <para>
      GNU/Linux est un système d'exploitation multi-utilisateurs. Cela signifie
      que plusieurs peuvent utiliser le système, et peuvent l'utiliser
      simultanément. Les concepts GNU/Linux de gestion des utilisateurs sont
      relativement simples. Tout d'abord, il y a plusieurs comptes utilisateur
      sur tout système. Même sur un système à un seul utilisateur il y a
      plusieurs comptes utilisateur, car GNU/Linux utilise des comptes
      particuliers pour certaines tâches. Les utilisateurs peuvent être des
      membres de groupes. Les groupes pour affiner les permissions, comme par
      exemple pour rendre un fichier lisible pour un certain groupe
      d'utilisateurs. Il y a quelques utilisateurs et groupes réservés sur un
      système. Le plus important parmis eux est le compte
      <emphasis>root</emphasis>. L'utilisateur <emphasis>root</emphasis> est
      l'administrateur système. Il vaut mieux éviter de le logger en tant que
      root, car cela augmente grandement les risques de sécurité. Vous pouvez
      vous logger en tant qu'utilisateur normal, et effectuer les tâches
      d'administration avec les commandes <command>su</command> et
      <command>sudo</command>.
    </para>

    <para>
      Les comptes utilisateur disponibles sont spécifiées dans
      <filename>/etc/passwd</filename>. Vous pouvez jeter un oeil à ce fichier
      pour avoir une idée des comptes utilisateur obligatoires. Comme vous le
      remarquerez probablement, il n'y a pas de mot de passe dans ce fichier.
      Les mots de passe sont enregistrés dans un fichier séparé
      <filename>/etc/shadow</filename>, en tant que chaînes de caractères
      cryptées. Les informations sur les groupes sont stockées dans 
      <filename>/etc/group</filename>. De manière générale ce n'est pas une
      bonne idée d'éditer ces fichiers directement. Il y a quelques excellents
      outils qui peuvent vous aider à l'admistration des utilisateurs et
      groupes. Ce chapitre décrit certains de ces outils.
    </para>
  </sect1>

  <sect1 xml:id="chap-usermgmt-user">
    <title>Ajouter et supprimer des utilsateurs</title>

    <sect2 xml:id="chap-usermgmt-user-add">
      <title>useradd</title>

      <para>
	<command>useradd</command> est utilisé pour ajouter des comptes
	utilisateurs dans le système. Exécuter <command>useradd</command> avec
	un nom d'utilisateur en paramètre va créer l'utilisateur dans le
	système. Par exemple :
      </para>

      <screen>
# <userinput>useradd bob</userinput>
      </screen>

      <para>
	Crée le compte utilisateur <emphasis>bob</emphasis>. Veuillez noter que
	cela ne crée pas le répertoire personnel de l'utilisateur. Ajoutez le
	paramètre <parameter class="command">-m</parameter> pour créer le
	répertoire personnel. Par exemple :
      </para>

      <screen>
# <userinput>useradd -m bob</userinput>
      </screen>

      <para>
	Va ajouter l'utilsateur <emphasis>bob</emphasis> dans le système, et
	créer <filename>/home/bob</filename>, le répertoire personnel de cet
	utilisateur. En principe l'utilisateur est ajouté membre du groupe
	<emphasis>users</emphasis>. Supposez que vous voulez que le groupe
	primaire de l'utilisateur <emphasis>bob</emphasis> soit
	<emphasis>crew</emphasis>. Cela se fait avec le paramètre
	<parameter class="command">-g</parameter>. Par exemple :
      </para>

      <screen>
# <userinput>useradd -g crew -m bob</userinput>
      </screen>

      <para>
	Il est aussi possible d'ajouter à cet utilisateur des groupes
	secondaires à la création du compte avec <emphasis>-G</emphasis>.
	Les noms de groupes sont séparés par une virgule. La commande suivante
	va créer l'utilisateur <emphasis>bob</emphasis>, membre du groupe
	<emphasis>crew</emphasis>, et des groupes secondaires
	<emphasis>www-admins</emphasis> et
	<emphasis>ftp-admins</emphasis> :
      </para>

      <screen>
# <userinput>useradd -g crew -G www-admins,ftp-admins -m bob</userinput>
      </screen>

      <para>
	Par défaut <command>useradd</command> ajoute des utilisateurs seulement,
	il ne fixe pas le mot de passe pour l'utilisateur ajouté. Les mots de
	passe peuvent être configurés avec la commande
	<command>passwd</command>.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-passwd">
      <title>passwd</title>

      <para>
	Comme vous l'avez sans doute deviné la commande
	<command>passwd</command> est utilisée pour changer le mot de passe d'un
	utilisateur. Lancer cette command en tant qu'utilisateur sans paramètre
	va changer le mot de passe pour cet utilisateur. La commande
	<command>passwd</command> vous demande l'ancien mot de passe, le nouveau
	mot de passe 2 fois.
      </para>

      <screen>
$ <userinput>passwd</userinput>
Changement du mot de passe de bob
Ancien mot de passe: 
Entrez le nouveau mot de passe (minimum de 5, maximum de 127
caractères). Utilisez une combinaison de lettres en majuscule/minuscule
et de nombres.
Nouveau mot de passe : 
Nouveau mot de passe (à nouveau) :
Mot de passe changé.
      </screen>

      <para>
	L'utilisateur <emphasis>root</emphasis> peut modifier les mots de passe
	des utilisateurs en spécifiant le nom d'utilisateur en paramètre. La
	commande <command>passwd</command> ne demandera que le nouveau mot de
	passe. Par exemple :
      </para>

      <screen>
# <userinput>passwd bob</userinput>
Nouveau mot de passe : 
Nouveau mot de passe (à nouveau) :
Mot de passe changé.
      </screen>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-adduser">
      <title>adduser</title>

      <para>
	La commande <command>adduser</command> combine
	<command>useradd</command> et <command>passwd</command> sous la forme
	d'un script interactif. Il vous demande les informations sur le compte
	à créer. Après cela il va créer un compte à partir des informations que
	vous avez fournies. L'affichage écran ci-dessous montre une session
	d'exemple.
      </para>

      <screen>
# <userinput>adduser</userinput>

Login name for new user []: <userinput>john</userinput>

User ID ('UID') [ defaults to next available ]: <userinput>&lt;Enter&gt;</userinput>

Initial group [ users ]: <userinput>&lt;Enter&gt;</userinput>

Additional groups (comma separated) []: <userinput>staff</userinput>

Home directory [ /home/john ] <userinput>&lt;Enter&gt;</userinput>

Shell [ /bin/bash ] <userinput>&lt;Enter&gt;</userinput>

Expiry date (YYYY-MM-DD) []: <userinput>&lt;Enter&gt;</userinput>

New account will be created as follows:

---------------------------------------
Login name.......:  john
UID..............:  [ Next available ]
Initial group....:  users
Additional groups:  [ None ]
Home directory...:  /home/john
Shell............:  /bin/bash
Expiry date......:  [ Never ]

This is it... if you want to bail out, hit Control-C.  Otherwise, press
ENTER to go ahead and make the account.
<userinput>&lt;Enter&gt;</userinput>

Creating new account...


Changing the user information for john
Enter the new value, or press ENTER for the default
        Full Name []: <userinput>John Doe</userinput>
        Room Number []: <userinput>&lt;Enter&gt;</userinput>
        Work Phone []: <userinput>&lt;Enter&gt;</userinput>
        Home Phone []: <userinput>&lt;Enter&gt;</userinput>
        Other []: <userinput>&lt;Enter&gt;</userinput>
Changing password for john
Enter the new password (minimum of 5, maximum of 127 characters)
Please use a combination of upper and lower case letters and numbers.
New password: <userinput>password</userinput>
Re-enter new password: <userinput>password</userinput>


Account setup complete.
      </screen>

      <para>
	Vous pouvez utiliser les valeurs par défaut, ou laisser des champs
	vides, en pressant la touche &lt;Entrée&gt;.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-userdel">
      <title>userdel</title>

      <para>
	Parfois il est nécessaire de supprimer un compte utilisateur d'un
	système. Pour ce faire, GNU/Linux offre l'outil
	<command>userdel</command>. Spécifiez seulement le nom d'utilisateur en
	paramètre pour supprimer celui-ci du système. Par exemple, la commande
	suivante va supprimer du système le compte utilisateur
	<emphasis>bob</emphasis> :
      </para>

      <screen>
# <userinput>userdel bob</userinput>
      </screen>

      <para>
	Cela va supprimer le compte utilisateur, pas le répertoire personnel de
	celui-ci ni son espace de messagerie. Ajoutez simplement le paramètre
	<parameter class="command">-r</parameter> pour supprimer le répertoire
	personnel de l'utilisateur ainsi que son espace de messagerie. Par
	exemple :
      </para>

      <screen>
# <userinput>userdel -r bob</userinput>
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-usermgmt-su">
    <title>Eviter l'utilisation de root avec su</title>

    <para>
      Il est judicieux d'éviter de se logger en tant que
      <emphasis>root</emphasis>. Il y a plein de raisons de ne pas le faire.
      Taper accidentellement une mauvaise commande peut provoquer des dégâts, et
      des programmes malicieux peuvent causer beaucoup de dommages lorsque vous
      être loggé en tant que <emphasis>root</emphasis>.  Cela dit, il y a
      beaucoup de situations où vous avez besoin d'avoir accès à root. Par
      exemple, pour effectuer les tâches d'administration  système, ou pour
      installer un nouveau logiciel. Heureusement <command>su</command> peut
      vous donner temporairement les privilèges de root.
    </para>

    <para>
      Utiliser <command>su</command> est très simple. Exécuter seulement
      <command>su</command> vous demande le mot de passe de root, et démarre un
      shell avec les droits root une fois que le mot de passe a été correctement
      saisi.
    </para>

    <screen>
$ <userinput>whoami</userinput>
bob
$ <userinput>su</userinput>
Password: 
# <userinput>whoami</userinput>
root
# <userinput>exit</userinput>
exit
$ <userinput>whoami</userinput>
bob
    </screen>

    <para>
      Dans cet exemple l'utilisateur <emphasis>bob</emphasis> est loggé, la
      sortie de <command>whoami</command> témoigne de cela. L'utilisateur
      exécute su et entre le mot de passe de <emphasis>root</emphasis>.
      <command>su</command> lance un shell avec les privilèges de root, 
      ce qui est confirmé par la sortie de <command>whoami</command>. Après être
      sorti du shell <emphasis>root</emphasis>, le contrêle est redonné au shell
      d'origine avec les privilèges de l'utilistaeur <emphasis>bob</emphasis>.
    </para>

    <para>
      Il est aussi possible d'exécuter une seule commande en tant que
      <emphasis>root</emphasis> avec le paramètre <parameter
      class="command">-c</parameter>. L'exemple suivant lance
      <command>lilo</command>:
    </para>

    <screen>
$ <userinput>su -c lilo</userinput>
    </screen>

    <para>
      Si vous voulez passer des paramètres à la commande à lancer, utilisez les
      cotes (e.g. <command>su -c &quot;ls -l /&quot;</command>). Sans les cotes
      <command>su</command> ne peut pas savoir si les paramètres doivent être
      interprétes par la commande spécifiée, ou par <command>su</command>
      elle-même.
    </para>

    <sect2 xml:id="chap-usermgmt-su-restrict">
      <title>Restreindre l'accès à su</title>

      <para>
	Vous pouvez raffiner l'accès à <command>su</command> avec
	<emphasis>suauth</emphasis>.  C'est une bonne pratique de sécurité de
	n'autoriser seulement les membres d'un groupe spécifique d'effectuer un
	<command>su</command> en <emphasis>root</emphasis>. Par exemple, vous
	pouvez restreindre <command>su</command> en root à la mode 
	BSD aux membre du groupe <emphasis>wheel</emphasis> en ajoutant la ligne
	suivante à <filename>/etc/suauth</filename> :
      </para>

      <screen>
root:ALL EXCEPT GROUP wheel:DENY
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-usermgmt-quota">
    <title>Quotas disque</title>

    <sect2 xml:id="chap-usermgmt-quota-intro">
      <title>Introduction</title>

      <para>
	Le quota disque est un mécanisque qui permet à un administrateur système
	de restreindre à un utilisateur ou groupe particulier l'utilisation
	d'un nombre de blocs disque et d'inodes. Tous les systèmes de fichiers
	supportés par Linux ne gèrent pas les quotas, les systèmes de fichiers
	populaires qui supportent les quotas sont ext2, ext3 et XFS. Les quotas
	sont activés et gérés par instance de système de fichiers.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-config">
      <title>Activer les quotas</title>

      <para>
	Les quotas peuvent être activés par système de fichiers dans
	<filename>/etc/fstab</filename>, en utilisant les options système de
	fichiers <parameter>usrquota</parameter> et
	<parameter>grpquota</parameter>. Par exemple, supposez que nous avons
	l'entrée suivante pour la partition <filename>/home</filename> dans
	<filename>/etc/fstab</filename> :
      </para>

      <screen>
/dev/hda8        /home            xfs         defaults         1   2
      </screen>

      <para>
	Nous pouvons activer les quotas utilisateur en ajoutant l'option système
	de fichiers <parameter>usrquota</parameter> :
      </para>

      <screen>
/dev/hda8        /home            xfs         defaults<emphasis role="bold">,usrquota</emphasis> 1   2
      </screen>

      <para>
	A ce stade la machine peut être redémarrée, permettant aux scripts
	d'initialisation de Slackware Linux d'activer les quotas. Vous pouvez
	aussi activer les quotas sans rebooter la machine, en remontant la
	partition, et en exécutant la commande <command>quotaon</command> :
      </para>

      <screen>
# <userinput>mount -o remount /home</userinput>
# <userinput>quotaon -avug</userinput>
      </screen>
    </sect2>

    <sect2 xml:id="chap-usermgmt-quota-edit">
      <title>Editer les quotas</title>

      <para>
	Les quotas utilisateur et groupe peuvent être édités avec l'utilitaire
	<quote>edquota</quote>. Ce programme vous permet d'éditer les quotas
	de manière interactive avec l'éditeur <command>vi</command>. La syntaxe
	la plus simple de cette commande est
	<command>edquota username</command>. Par exemple :
      </para>

      <screen>
# <userinput>edquota joe</userinput>
      </screen>

      <para>
	Va lancer l'éditeur <command>vi</command> avec les informations de quota
	pour l'utilisateur <emphasis>joe</emphasis>.  Cela ressemble à ceci :
	will look like this:
      </para>

      <screen>
Disk quotas for user joe (uid 1143):
  Filesystem                   blocks       soft       hard     inodes     soft    hard
  /dev/hda5                      2136          0          0         64        0       0
      </screen>

      <para>
	Dans cet exemple les quotas ne sont activés que pour un système de
	fichiers, à savoir le système de fichier sur
	<filename>/dev/hda5</filename>. Comme vous pouvez le voir il y a
	plusieurs colonnes. La colonne <emphasis>blocks</emphasis> affiche
	combien de blocs l'utilisateur occupe sur le système de fichiers, et la
	colonne <emphasis>inodes</emphasis> le nombre d'inodes qu'occupe
	l'utilisateur. Ajouté à cela les colonnes <emphasis>soft</emphasis> et
	<emphasis>hard</emphasis> se trouvent après les colonnes
	<emphasis>blocks</emphasis> et <emphasis>inodes</emphasis>. Ces colonnes
	spécifent les limites soft et hard sur les blocs et inodes. Un
	utilisateur peut dépasser la limite soft pendant un délai de grâce, mais
	un utilisateur ne peut jamais dépasser la limite hard. Si une valeur
	de limite est <emphasis>0</emphasis>, il n'y a pas de limitation.
      </para>

      <note>
	<para>
          Le terme <quote>blocks</quote> peut prêter à confusion dans ce
	  contexte. Pour les réglages de quota un bloc vaut 1Ko, et pas la
	  taille de bloc du système de fichiers.
        </para>
      </note>

      <para>
	Jetons un oeil à un exemple simple. Supposez que vous voulez fixer la
	limite soft d'un utlisateur <emphasis>joe</emphasis> à
	<emphasis>250000</emphasis>, et la limite hard à
	<emphasis>300000</emphasis>. Nous pouvons modifier les quotas cités
	ci-dessus comme ceci :
      </para>

      <screen>
Disk quotas for user joe (uid 1143):
  Filesystem                   blocks       soft       hard     inodes     soft    hard
  /dev/hda5                      2136     <emphasis role="bold">250000</emphasis>     <emphasis role="bold">300000</emphasis>         64        0       0
      </screen>

      <para>
	Les nouveaux réglages de quota pour cet utilisateurs seront effectifs
	après sauvegarde du fichier, et sortie de <command>vi</command>.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-quota-repquota">
      <title>Obtenir les informations sur les quotas</title>

      <para> 
	Il est souvent utile d'avoir des statistiques sur l'utilisation du quota
	courant. La commande <command>repquota</command> est utilisée pour
	obtenir les informations sur les quotas fixés pour chaque utilisateur,
	et combien de chacun des quotas est utilisé. Vous pouvez voir les
	réglages de quota pour une partition spécifique en donnant le nom de la
	partition en paramètre. Le paramètre
	<parameter class="command">-a</parameter> affiche les informations de
	quota de toutes les partitions pourlesquelles le quota est activé.
	Supposez que vous désirez voir les informations de quota pour
	<filename>/dev/hda5</filename>, vous pouvez utiliser la commande
	suivante :
      </para>

      <screen>
# <userinput>repquota /dev/hda5</userinput>
*** Report for user quotas on device /dev/hda5
Block grace time: 7days; Inode grace time: 7days
                        Block limits                File limits
User            used    soft    hard  grace    used  soft  hard  grace
----------------------------------------------------------------------
root      --       0       0       0              3     0     0       
[..]
joe       --    2136  250000  300000             64     0     0       
[..]
      </screen>
    </sect2>
  </sect1>
</chapter>
