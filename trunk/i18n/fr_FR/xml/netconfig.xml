<!-- $Id: netconfig.xml 295 2007-09-18 23:03:49Z danieldk $ -->

<chapter id="sysadmin-netconfig"> <?dbhtml filename="netconfig.html"?>
<title>Configuration réseau</title>

<sect1 id="sysadmin-netconfig-hardware">
<title>Matériel</title>

<bridgehead>Cartes réseau</bridgehead>

<para>
Les pilotes pour les cartes réseau sont installées en tant que modules noyau. Le
module pour votre carte réseau doit être chargé lors de l'initialisation de
Slackware Linux. Sur la plupart des systèmes la carte réseau est détectée
automatiquement et configurée lors de l'installation de Slackware Linux. Vous
pouvez reconfigurer votre carte réseau avec la commande
<command>netconfig</command>. <command>netconfig</command> ajoute le pilote
(module) de la carte détectée à <filename>/etc/rc.d/rc.netdevice</filename>. 
</para>

<para>
Il est aussi possible de configurer manuellement les modules devant être chargés
durant l'initialisation du système. Cela se fait en ajoutant une ligne
<command>modprobe</command> à <filename>/etc/rc.d/rc.modules</filename>. Par
exemple, si vous voulez charger le module carte réseau 3Com 59x (3c59x.o),
ajoutez la ligne suivante à <filename>/etc/rc.d/rc.modules</filename> :
</para>

<screen>
/sbin/modprobe 3c59x
</screen>

<bridgehead>Cartes PCMCIA</bridgehead>

<para>
Les cartes PCMCIA supportées sont automatiquement détectées par le logiciel
PCMCIA. Le paquet pcmcia-cs de la collection <quote>a</quote> fournit la
fonctionalité PCMCIA à Slackware Linux.
</para> 

</sect1>

<sect1>
<title>Configuration des interfaces</title>

<para>
Les cartes réseau sont accessibles sous Linux à travers de ce qu'on nomme des
<quote>interfaces</quote>.
La commande <command>ifconfig</command> est utilisée pour afficher les
interfaces disponibles :
</para>

<screen>
# <command>ifconfig -a</command>
eth0      Link encap:Ethernet  HWaddr 00:20:AF:F6:D4:AD  
          inet addr:192.168.1.1  Bcast:192.168.1.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1301 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1529 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1 txqueuelen:100 
          RX bytes:472116 (461.0 Kb)  TX bytes:280355 (273.7 Kb)
          Interrupt:10 Base address:0xdc00 

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:77 errors:0 dropped:0 overruns:0 frame:0
          TX packets:77 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:8482 (8.2 Kb)  TX bytes:8482 (8.2 Kb)
</screen>

<para>
Les cartes réseau on pout nom ethn, où n est un nombre, commençant à 0. Dans
l'exemple ci-dessus, la première carte réseau (eth0) a déjà une adresse IP.
Cependant les cartes non configurées n'ont pas d'adresse IP ; la commande
<command>ifconfig</command> n'affichera pas d'adresse IP pour les interfaces non
configurées. Les interfaces sont configurées dans le fichier
<filename>/etc/rc.d/rc.inet1.conf</filename>. Vous pouvez simplement lire les
commentaires, et remplir les informations requises. Par exemple :
</para>

<screen>
# Config information for eth0:
IPADDR[0]="192.168.1.1"
NETMASK[0]="255.255.255.0"
USE_DHCP[0]=""
DHCP_HOSTNAME[0]=""
</screen>

<para>
Dans cet exemple l'adresse IP 192.168.1.1 avec le netmask 255.255.255.0 sont affectés à la première interface ethernet (eth0). Si vous utilisez un serveur DHCP
vous pouvez modifier la ligne <emphasis>USE_DHCP=""</emphasis> en
<emphasis>USE_DHP[n]="yes"</emphasis> (remplacez <quote>n</quote> par le numéro
d'interface). Les autres variables, excepté <emphasis>DHCP_HOSTNAME</emphasis>
sont ignorées lors de l'utilisation de DHCP. Par exemple :
</para>

<screen>
IPADDR[1]=""
NETMASK[1]=""
USE_DHCP[1]="yes"
DHCP_HOSTNAME[1]=""
</screen>

<para>
Procédez de même pour les autres interfaces. Vous pouvez activer les réglages en
redémarrant le système ou en exécutant <command>/etc/rc.d/rc.inet1</command>.
Il est aussi possible de reconfigurer seulement une interface avec
<command>/etc/rc.d/rc.inet1 ethX_restart</command>, où <emphasis>ethX</emphasis>
doit être remplacé par le nom de l'interface que vous voulez reconfigurer.
</para>
</sect1>

<sect1>
<title>Configuration des interfaces (IPv6)</title>

<sect2>
<title>Introduction</title>

<para>
<acronym>IPv6</acronym> est le protocole Internet nouvelle génération. Un ce ses
avantages est l'espace d'adressage bien plus grand. Dans IPv4
(le protocole internet utilisé communément aujourd'hui) les adresses sont en
32-bit, cet espace d'adressage est presque totalement alloué à ce jour, et on
manque d'adresses IPv4. IPv6 utilise des adresses sur 128-bit, ce qui fournit
un espace d'adressage inimaginable (2^128 adresses). IPv6 utilise une autre
notation pour les adresses, premièrement on utilise des nombre hexadécimaux
au lieu de nombres décimaux, et l'adresse est notée par lots de 16 bits, séparés
par des deux-points (<quote>:</quote>).  Regardons un exemple d'adresse :
</para>

<screen>
fec0:ffff:a300:2312:0:0:0:1
</screen>

<para>
Un bloc de zéros est remplacé par deux fois deux-points (<quote>::</quote>).
Par conséquent, l'adresse ci-dessus peut s'écrire :
</para>

<screen>
fec0:ffff:a300:2312::1
</screen>

<para>
Chaque adresse IPv6 a un préfixe. Normalement il est composé de 2 éléments :
32 bits identifiant l'espace d'adressage que vous offre le fournisseur, et un
nombre sur 16 bits spécifiant le réseau. Ces 2 éléments forment le préfixe, et
dans ce cas la longueur du préfixe est de 32 + 16 = 48 bits. Par conséquent, si
vous avez un préfixe /48 vous pouvez avoir 2^16 sous-réseaux et avoir 2^80 hôtes
sur chaque sous-réseau. L'image ci-dessous montre la structure d'une adresse
IPv6 avec un préfixe à 48 bits.
</para>

<figure id="ipv6address">
<title>Anatomie d'une adresse IPv6</title>
<mediaobject>
<imageobject>
<imagedata fileref="../../images/ipv6addr.png" format="PNG" />
</imageobject>
</mediaobject>
</figure>

<para>
Il y a quelques préfixes réservés, les plus notables sont :
</para>

<table>
<title>Préfixes IPv6 importants</title>
<tgroup cols="2">
<thead>
<row>
<entry>Préfixe</entry><entry>Description</entry>
</row>
</thead>
<tbody>
<row>
<entry>fe80::</entry><entry>Adresses de lien local, non routées.</entry>
</row>
<row>
<entry>fec0::</entry><entry>Adresses locales au site, routées localement, mais
pas de ou vers Internet.</entry>
</row>
<row>
<entry>2002::</entry><entry>adresses 6to4, utilisées pour la transition de IPv4
vers IPv6.</entry>
</row> 
</tbody>
</tgroup>
</table>
</sect2>

<sect2>
<title>Support IPv6 dans Slackware Linux</title>

<para>
Les images noyau Linux incluses dans Slackware Linux ne supportent pas IPv6 par
défaut, mais en tant que module noyau. Ce module peut être chargé en utilisant
<command>modprobe</command> :
</para>

<screen>
# <command>modprobe ipv6</command>
</screen>

<para>
Vous pouvez vérifier que le support IPv6 est chargé correctement en regardant la
sortie kernel avec <command>dmesg</command> :
</para>

<screen>
$ <command>dmesg</command>
[..]
IPv6 v0.8 for NET4.0
</screen>

<para>
Le support IPv6 peut être activé de façon permanente en ajoutant la ligne
suivante dans <filename>/etc/rc.d/rc.modules</filename> :
</para>

<screen>
/sbin/modprobe ipv6
</screen>

<para>
Les interfaces sont configurée avec <command>ifconfig</command>. Mais il est
recommandé de configurer les données IPv6 en utilisant la commande
<command>ip</command>, qui fait partie du paquet <quote>iputils</quote> qui se
trouve dans le répertoire <filename>extra/</filename> de l'arborescence
Slackware Linux.
</para>
</sect2>

<sect2>
<title>Ajouter une adresse IPv6 à une interface</title>

<para>
S'il y a un routeur sur le réseau il y a des chances que les interfaces sur
ce réseau aient déjà une adresse IPv6 attribuée lors du chargement du support
IPv6 du kernel. Si ce n'est pas le cas vous pouvez ajouter une adresse IPv6 à
l'interface à l'aide de l'utilitaire <command>ip</command>. Supposez que vous
voulez ajouter l'adresse <quote>fec0:0:0:bebe::1</quote> avec une longueur de
préfixe de 64 (signifiant que <quote>fec0:0:0:bebe</quote> est le préfixe).
La syntaxe suivante permet de faire cela :
</para>

<screen>
# <command>ip -6 addr add &lt;ip6addr&gt;/&lt;prefixlen&gt; dev &lt;device&gt;</command>
</screen>

<para>
Par exemple :
</para>

<screen>
# <command>ip -6 addr add fec0:0:0:bebe::1/64 dev eth0</command>
</screen> 

</sect2>

</sect1>

<sect1>
<title>Interfaces sans fil</title>

<para>
Les interfaces sans fil demandent en principe un peu de configuration
supplémentaire, comme la configuration des clés ESSID, WEP et le mode sans fil.
Les réglages de l'interface spécifiques aux interfaces sans fil sont définis
dans le fichier <filename>/etc/rc.d/rc.wireless.conf</filename>. Le script
<command>/etc/rc.d/rc.wireless</command> configure les interfaces sans fil
en se basant sur les paramètres dans
<filename>/etc/rc.d/rc.wireless.conf</filename>. Dans
<filename>rc.wireless.conf</filename> les réglages sont par adresse MAC
d'interface. Par défaut ce fichier contient une section correspondant à toute
interface :
</para>

<screen>
## NOTE : Comment out the following five lines to activate the samples below ...
## --------- START SECTION TO REMOVE -----------
## Pick up any Access Point, should work on most 802.11 cards
*)
    INFO="Any ESSID"
    ESSID="any"
    ;;
## ---------- END SECTION TO REMOVE ------------
</screen>

<para>
Il est en principe conseillé de supprimer cette section pour configurer les
réglages spéficiques à chaque carte. Si vous êtes fénéant et que vous avez
seulement une carte sans fil, vous pouvez conserver cette section et y ajouter
les paramètres de configuration dont vous avez besoin. Puisque cette section
correspond à n'importe quelle interface sans fil, la carte sans fil que vous avez
correspondra et sera configurée. Vous pouvez cependant ajouter une section pour
vos interfaces sans fil. Chaque section est sous le format suivant :
</para>

<screen>
&lt;Adresse MAC&gt;)
    &lt;paramètres&gt;
;;
</screen>

<para>
Vous pouvez déterminer l'adresse MAC d'une interface en regardant la sortie de
la commande <command>ifconfig</command> de l'interface. Par exemple, si une
carte sans fil a pour nom d'interface <emphasis>eth1</emphasis>, vous pouvez
trouver l'adresse MAC de la façon suivante :
</para>

<screen>
# <command>ifconfig eth1</command>
eth1      Link encap:Ethernet  HWaddr <emphasis>00:01:F4:EC:A5:32</emphasis>
          inet addr:192.168.2.2  Bcast:192.168.2.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:4 errors:1 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:0 (0.0 b)  TX bytes:504 (504.0 b)
          Interrupt:5 Base address:0x100
</screen>

<para>
L'adresse hexadécimale affichée après <emphasis>HWaddr</emphasis> est l'adresse
MAC, ici <emphasis>00:01:F4:EC:A5:32</emphasis>. Lorsque vous avez trouvé
l'adresse MAC de l'interface vous pouvez ajouter une section relative à ce
périphérique dans <filename>/etc/rc.d/rc.wireless.conf</filename>. Par exemple :
</para>

<screen>
00:01:F4:EC:A5:32)
    INFO="Cabletron Roamabout WLAN NIC"
    ESSID="home"
    CHANNEL="8"
    MODE="Managed"
    KEY="1234-5678-AB"
    ;;
</screen>

<para>
Cela va demander à l'interface ayant pour adresse MAC
<emphasis>00:01:F4:EC:A5:32</emphasis> d'utiliser le ESSID
<emphasis>home</emphasis> et de travailler en mode <emphasis>Managed</emphasis>
sur le canal <emphasis>8</emphasis>. La clé utilisée pour le cryptage WEP est
<emphasis>1234-5678-AB</emphasis>. Il y a beaucoup d'autres paramètres
modifiables. Pour un aperçu de tous les paramètres, voir le dernier exemple dans
<filename>rc.wireless.conf</filename>.
</para>

<para>
Après avoir configuré une interface sans fil, vous pouvez appliquer les
changements en exécutant le script d'initialisation du réseau
<command>/etc/rc.d/rc.inet1</command>. Vous pouvez voir les réglages courants
du réseau sans fil avec la commande <command>iwconfig</command> :
</para>

<screen>
eth1      IEEE 802.11-DS  ESSID:"home"  Nickname:"HERMES I"
          Mode:Managed  Frequency:2.447 GHz  Access Point: 02:20:6B:75:0C:56   
          Bit Rate:2 Mb/s   Tx-Power=15 dBm   Sensitivity:1/3  
          Retry limit:4   RTS thr:off   Fragment thr:off
          Encryption key:1234-5678-AB
          Power Management:off
          Link Quality=0/92  Signal level=134/153  Noise level=134/153
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:27  Invalid misc:0   Missed beacon:0
</screen>

</sect1>

<sect1>
<title>Résolution</title>

<bridgehead>Nom d'hôte</bridgehead>

<para>
Tout ordinateur sur Internet a un nom d'hôte. Si vous n'avez pas de nom d'hôte
résoluble par DNS, il est toujours conseillé de configurer votre nom d'hôte,
car certains logiciels l'utilisent. Vous pouvez configurer le nom d'hôte dans
<filename>/etc/HOSTNAME</filename>.
Une seule ligne avec le nom d'hôte de la machine suffit. Normalement un nom
d'hôte a la forme suivante : hôte.domaine.tld, par exemple
darkstar.slackfans.org. Veillez à ce que le nom d'hôte soit résoluble, ce qui
veut dire que GNU/Linux doit être capable de convertir le nom d'hôte en adresse
IP. Vous pouvez vous assurer que le nom d'hôte est résoluble en l'ajoutant à
<filename>/etc/hosts</filename>. Allez à la section suivante pour plus
d'informations sur ce fichier.
</para>

<bridgehead>/etc/hosts</bridgehead>

<para>
<filename>/etc/hosts</filename> est une table d'adresses IP avec les noms d'hôtes
associés. Ce fichier peut être utilisé pour nommer des ordinateurs sur un petit
réseau. Voyons un exemple de fichier <filename>/etc/hosts</filename> :
</para>

<screen>
127.0.0.1               localhost
192.168.1.1             tazzy.slackfans.org tazzy
192.168.1.169           flux.slackfans.org
</screen>

<para>
La ligne <emphasis>localhost</emphasis> doit toujours être présente. Elle
associe le nom <emphasis>localhost</emphasis> à une interface spéciale, le
loopback. Dans cet exemple les noms
<emphasis>tazzy.slackfans.org</emphasis> et <emphasis>tazzy</emphasis> sont
associés à l'adresse IP 192.168.1.1, et le nom
<emphasis>flux.slackfans.org</emphasis> est associé à l'addresse IP
192.168.1.169. Sur le système contenant ce fichier les 2 ordinateurs sont
disponibles sous les noms d'hôte mentionés.
</para>

<para>
Il est aussi possible d'ajouter des adresses IPv6, qui seront utilisées si votre
système est configuré pour l'IPv6. Voici l'exemple d'un fichier
<filename>/etc/hosts</filename> avec des entrées IPv4 et IPv6 : 
</para>

<screen>
# IPv4 entries
127.0.0.1               localhost
192.168.1.1             tazzy.slackfans.org tazzy
192.168.1.169           gideon.slackfans.org

# IPv6 entries
::1			localhost
fec0:0:0:bebe::2	flux.slackfans.org	
</screen>

<para>
Veuillez noter que <quote>::1</quote> est l'adresse IPv6 loopback par défaut.
</para>

<bridgehead>/etc/resolv.conf</bridgehead>

<para>
Le fichier <filename>/etc/resolv.conf</filename> est utilisé pour spécifier les
serveurs de noms que doit utiliser le système. Un serveur de noms convertit des
noms d'hôtes en adresses IP. Votre FAI vous a donné au moins 2 noms de serveurs
de noms de domaine (serveurs DNS). Vous pouvez ajouter ces serveurs de noms dans
<filename>/etc/resolv.conf</filename> en ajoutant la ligne
<emphasis>nameserver adresseip</emphasis> pour chaque serveur de noms. Par exemple :
</para>

<screen>
nameserver 192.168.1.1
nameserver 192.168.1.169
</screen>

<para>
Vous pouvez vérifier si les noms d'hôtes sont convertis correctement avec la
commande <command>host nomhôte</command>. Remplacez
<emphasis>nomhôte</emphasis> par un nom d'hôte existant, par exemple le site
web de votre fournisseur d'accès Internet.
</para>
</sect1>

<sect1>
<title>Redirection IPv4</title>

<para>
La redirection IPv4 connecte 2 ou plus de réseaux en envoyant les paquets
arrivant sur une interface vers une autre interface. Cela permet à une machine
GNU/Linux de jouer le rôle de routeur. Par exemple, vous pouvez connecter
plusieurs réseaux, ou votre réseau local à Internet.
Voyons un exemple :
</para> 

<figure id="router">
<title>Exemple de routeur</title>
<mediaobject>
<imageobject>
<imagedata fileref="../../images/router.png" format="PNG" />
</imageobject>
</mediaobject>
</figure>

<para>
Dans cet exemple il y a 2 réseaux, 192.168.1.0 et 192.168.2.0. 3 hôtes sont
connectés à chaque réseau. Un de ces hôtes est connecté aux 2 réseaux par des
interfaces. L'interface sur le réseau 192.168.1.0 a pour adresse IP 192.168.1.3,
l'interface sur le réseau 192.168.2.0 a pour adresse IP 192.168.2.3. Si l'hôte
joue le rôle de routeur entre les 2 réseaux il transmet les paquets depuis le
réseau 192.168.1.0 vers le réseau 192.168.2.0 et vice versa. Le routage de
paquets classiques TCP/IP IPv4 peut être activé par l'activation de la
redirection IPv4.
</para>

<para>
La redirection IPv4 peut être activée ou désactivée sous Slackware Linux en
modifiant le bit d'exécution du fichier
<filename>/etc/rc.d/rc.ip_forward</filename>. Si le bit d'exécution est
positionné sur ce fichier, la redirection IP sera activée lors du démarrage du
système, sinon elle sera désactivée. Vous pouvez vérifier si le bit d'exécution
est positionné avec <command>ls -l</command> (une description de la commande
<command>ls</command> se trouve dans
<xref linkend="chap-filesystems-analyzing-listing" />). 
</para>

<para>
Il est aussi possible d'activer la redirection IPv4 sur un système en
cours d'exécution avec la commande suivante (0 désactive la redirection, 1
active la redirection) :
</para>

<screen>
# <command>echo 0 > /proc/sys/net/ipv4/ip_forward</command>
</screen>

<para>
Attention ! Par défaut il n'y a pas de filtrage de paquets actifs. Cela signifie
que tout le monde peut accéder aux autres réseaux. Le trafic peut être filtré et
loggé avec le filtre de paquets kernel iptables. Iptables peut être
administré à l'aide de la commande <command>iptables</command>.
NAT (Network Address Translation - NdT : traduction d'adresse réseau),
sous-ensemble de iptables, peut être contrôlé et activé à travers la commande
<command>iptables</command>. NAT permet de <quote>cacher</quote> un réseau
derrnière une adresse IP. Cela vous permet d'utiliser Internet sur un réseau
entier avec seulement une adresse IP.
</para>
</sect1>

</chapter>
