<!-- $Id: services.xml 283 2007-09-18 20:14:31Z danieldk $ -->

<chapter> <?dbhtml filename="services.html"?>
<title>Serviços de rede</title>

<sect1>
<title>O super servidor internet</title>

<para>
Há duas maneiras de disponibilizar serviços TCP/IP: executando as
aplicações servidoras de forma independente como daemon ou usando o
super servidor internet, <command>inetd</command>.  O
<command>inetd</command> é um daemon que monitora um intervalo de
portas.  Se um cliente tenta se conectar a uma porta,o
<command>inetd</command> manipula a conexão e a encaminha para o
software servidor responsável por aquele tipo de conexão.  A vantagem
dessa abordagem é que ela adiciona uma camada extra de segurança e torna
mais fácil o log de conexões entrantes.  A desvantagem é que acaba sendo
mais lento que usar um daemon independente.  Então, será uma boa idéia
usar o servidor como daemon indepentente, por exemplo, em um servidor
FTP bastante carregado.
</para>

<para>
O <command>inetd</command> pode ser configurado através do arquivo
<filename>/etc/inetd.conf</filename>.  Vamos ver um exemplo de uma linha
do <filename>inetd.conf</filename>:
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Esta linha especifica que o <command>inetd</command> deve aceitar
conexões FTP e passá-las para o <command>tcpd</command>.  Isto pode
parecer um pouco estranho, afinal é o <command>proftpd</command> que
normalmente manipula conexões FTP.  Você também poderia atribuir o
<command>proftpd</command> diretamente no
<filename>inetd.conf</filename>, mas o Slackware Linux normalmente passa
a conexão para o <command>tcpd</command>.  Por sua vez, este programa
repassa a conexão para o <command>proftpd</command>, como especificado.
O <command>tcpd</command> é usado para monitorar serviços e permitir
controle de acesso baseado em hosts.
</para>

<para>
Serviços podem ser desabilitados adicionando-se o caracter de comentário
(#) no começo da linha.  É uma boa idéia desabilitar todos os serviços e
deixar habilitados apenas aqueles que você precisar a cada momento.
Depois de modificar o <filename>/etc/inetd.conf</filename>, o
<command>inetd</command> precisa ser reiniciado para ativar as mudanças.
Isto pode ser feito enviando-se um sinal HUP para o processo inetd:
</para>

<screen>
# <command>ps ax | grep 'inetd'</command>
   64 ?        S      0:00 /usr/sbin/inetd
# <command>kill -HUP 64</command>
</screen>

</sect1>

<sect1>
<title>Cache de servidor de nomes</title>

<para>
Um cache de servidor de nomes disponibiliza os serviços de DNS para uma
máquina ou uma rede, mas não fornece DNS para um domínio.  Isto
significa que tal servidor pode ser usado apenas para converter nomes de
hosts em endereços IP.  Configurar um servidor de nomes no Slackware
Linux é muito fácil, pois o BIND já é definido como ser usado como cache
de servidor de nomes por padrão.  Habilitar o cache de servidor de nomes
leva apenas dois passos: você tem que instalar o BIND e alterar os
scripts de inicialização.  O BIND pode ser instalado adicionando-se o
pacote bind a partir da série <quote>n</quote>.  Depois, o bind pode ser
iniciado executando-se o comando <command>named</command>.  Se quiser
iniciar o BIND por padrão, deixe o arquivo
<filename>/etc/rc.d/rc.bind</filename> executável.  Isto pode ser feito
como root com o seguinte comando:
</para>

<screen>
# <command>chmod a+x /etc/rc.d/rc.bind</command>
</screen>

<para>
Se você quiser usar o servidor de nomes na máquina que executa o BIND,
você também precisa alterar o <filename>/etc/resolv.conf</filename>.
</para>

</sect1>

<sect1>
<title>O servidor web Apache</title>

<para>
Apache é o servidor web mais difundido e mais utilizado na internet, e é
claro, é parte do Slackware Linux.  O Apache pode ser instalado
adicionando-se o pacote <filename>apache</filename> a partir do conjunto
da série <quote>n</quote>.  Se você também quiser usar PHP, os pacotes
<filename>php</filename> (série <quote>n</quote>) e
<filename>mysql</filename> (série <quote>ap</quote>) também são
requeridos.  O MySQL é necessário porque o pacote precompilado do PHP
depende de bibliotecas compartilhadas do MySQL.  Você não precisa
executar o MySQL em si.  Depois de instalar o Apache, ele pode ser
executado automaticamente na inicialização do sistema deixando-se o
arquivo <filename>/etc/rc.d/rc.httpd</filename> executável.  Você pode
fazer isso com o comando:
</para>

<screen>
# <command>chmod a+x /etc/rc.d/rc.httpd</command>
</screen>

<para>
A configuração do Apache pode ser alterada no arquivo
<filename>/etc/apache/httpd.conf</filename>.  O Apache pode ser
parado/iniciado/reiniciado a qualquer momento com o comando
<command>apachectl</command>, e os respectivos parâmetros <parameter
class="command">stop</parameter>, <parameter
class="command">start</parameter> e <parameter
class="command">restart</parameter>.  Por exemplo,
execute o seguinte comando para reiniciar o Apache:
</para>

<screen>
# <command>apachectl restart</command>
/usr/sbin/apachectl restart: httpd restarted
</screen>

</sect1>

</chapter>
