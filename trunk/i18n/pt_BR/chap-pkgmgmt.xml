<?xml version="1.0" encoding="UTF-8"?>

<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
	 xml:id="chap-pkgmgmt">
  <title>Gerenciamento de Pacotes</title>

  <sect1 xml:id="chap-pkgmgmt-pkgtools">
    <title>Pkgtools</title>

    <sect2 xml:id="chap-pkgmgmt-pkgtools-intro">
      <title>Introdução</title>

      <para>
	O Slackware não usa um gerenciador de pacotes complexo, 
	diferente de muitas outras distribuições Linux. Os pacotes
	têm a extensão
	<filename>.tgz</filename>, e são normalmente um pacote normal
	com dois arquivos a mais: um script de instalação e um arquivo
	de descrição do pacote. Devido à simplicidade dos pacotes, o
	Slackware não trata as dependências. Mas muitos usuários do
	Slackware preferem esse sistema, pois geralmente as dependências
	causam mais problemas do que soluções.
      </para>

      <para>
        O Slackware Linux possui algumas poucas ferramentas para manipular
        pacotes.  As ferramentas mais importantes serão abordadas neste
        capítulo.  Para aprender a compreender as ferramentas nós precisamos
        dar uma olhada na nomenclatura de um pacote.  Vejamos um exemplo,
        imagine que temos um pacote em um arquivo chamado
        <filename>bash-2.05b-i386-2.tgz</filename>.  Neste caso o nome do
        pacote é bash-2.05b-i386-2.  No nome do pacote, as informações sobre o
        pacote são separadas pelo caractere '-'.  Um nome de pacote possui o
        seguinte significado: 
        <emphasis>nomedoprograma-versão-arquitetura-revisãodopacote</emphasis>
      </para>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-pkgtools-pkgtool">
      <title>pkgtool</title>

      <para>
	O comando <command>pkgtool</command> oferece uma interface de menu para
    algumas operações de pacotes.  Os itens de menu mais importantes são
    <emphasis>Remove</emphasis> e <emphasis>Setup</emphasis>.  A opção
    <emphasis>Remove</emphasis> apresenta uma lista de pacotes instalados.
    Você pode selecionar quais pacotes você quer remover com a barra de espaço
    e confirmar suas escolhas com a tecla Enter.  Você também pode desmarcar um
    pacote marcado para remoção com a barra de espaço.
      </para>

      <para>
	A opção <emphasis>Setup</emphasis> oferece acesso a algumas poucas
    ferramentas que podem ajudá-lo na configuração de seu sistema, como por
    exemplo: <command>netconfig</command>, <command>pppconfig</command> e
    <command>xwmconfig</command>.
      </para>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-pkgtools-installpkg">
      <title>installpkg</title>

      <para>
	O comando <command>installpkg</command> é usado para instalar pacotes.  O 
	<command>installpkg</command> precisa de um arquivo de pacote como um
    parâmetro.  Por exemplo, se você quiser instalar o pacote 
	<filename>bash-2.05b-i386-2.tgz</filename>, execute:
      </para>

      <screen>
# <userinput>installpkg bash-2.05b-i386-2.tgz</userinput>
      </screen>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-pkgtools-upgradepkg">
      <title>upgradepkg</title>

      <para>
        O <command>upgradepkg</command> pode ser usado para atualizar pacotes.
        Diferentemente do <command>installpkg</command> ele apenas instala
        pacotes quando já houver uma versão mais antiga disponível no sistema.
        A sintaxe do comando é semelhante à do 
        <command>installpkg</command>.  Por exemplo, se você quiser atualizar
        pacotes usando os pacotes em um diretório:
      </para>

      <screen>
# <userinput>upgradepkg *.tgz</userinput>
      </screen>

      <para>
        Como já dito, só serão instalados aqueles pacotes cujas versões mais
        antigas já estiverem instaladas no sistema.
      </para>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-pkgtools-removepkg">
      <title>removepkg</title>

      <para>
	O <command>removepkg</command> pode ser usado para remover pacotes
    instalados.  Por exemplo, se você quiser remover o pacote
	<quote>bash</quote> (não é recomendável fazer isso!), você pode executar:
      </para>

      <screen>
# <userinput>removepkg bash</userinput>
      </screen>

      <para>
        Como você pode ver, apenas o nome do pacote é especificado neste
        exemplo.  Você também pode remover um pacote especificando seu nome
        completo:
      </para>

      <screen>
# <userinput>removepkg bash-2.05b-i386-2</userinput>
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-pkgmgmt-slackpkg">
    <title>Slackpkg</title>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-intro">
      <title>Introdução</title>

      <para>
        Slackpkg é uma ferramenta de pacotes escrita por Roberto F. Batista e
        Evaldo Gardenali.  Ela ajuda os usuários a instalar e atualizar pacotes
        do Slackware Linux usando um dos repositórios espelhos do Slackware
        Linux.  O Slackpkg é incluído no diretório 
        <filename>extra/</filename> no segundo CD do conjunto de CDs do
        Slackware Linux.
      </para>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-config">
      <title>Configuração</title>

      <para>
        O Slackpkg é configurado por meio de alguns arquivos em
        <filename>/etc/slackpkg</filename>.  A primeira coisa que você deveria
        fazer é configurar o espelho que o slackpkg deve usar.  Isto pode ser
        feito editando-se o arquivo <filename>/etc/slackpkg/mirrors</filename>.
        Este arquivo já contém uma relação de espelhos, e você pode apenas
        descomentar um espelho que esteja próximo de você.  Por exemplo:
      </para>

      <screen>
ftp://ftp.nluug.nl/pub/os/Linux/distr/slackware/slackware-12.0/
      </screen>

      <para>
        Isto irá usar a árvore do Slackware Linux 12.0 no espelho
        ftp.nluug.nl mirror.  Certifique-se de usar uma árvore que inclua sua
        versão do Slackware Linux.  Se você gostaria de acompanhar o
        slackware-current, você deve descomentar a seguinte linha no entanto
        (quando você quiser usar o mesmo espelho NLUUG em questão):
      </para>

      <screen>
ftp://ftp.nluug.nl/pub/os/Linux/distr/slackware/slackware-current/
      </screen>

      <para>
        O Slackpkg irá aceitar apenas um espelho.  Descomentar mais de uma
        linha não irá adiantar.
      </para>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-gpgkey">
      <title>Importando a chave GPG do Slackware Linux</title>

      <para>
	Por padrão, o slackpkg verifica os pacotes usando as assinaturas de pacote
    com a chave pública GPG do Slackware Linux.  Como isto é uma boa idéia do
    ponto de vista de segurança, você provavelmente não vai querer mudar esse
    comportamento.  Para ser capaz de verificar os pacotes você precisa
    importar a chave GPG de <emphasis>security@slackware.com</emphasis>.  Se
    você nunca tiver usado o GPG antes, você precisa criar o diretório GPG na
    pasta local do usuário <emphasis>root</emphasis>:
      </para>

      <screen>
# <userinput>mkdir ~/.gnupg</userinput>
      </screen>

      <para>
        O próximo passo é procurar a chave pública de 
        <emphasis>security@slackware.com</emphasis>.  Nós faremos isso
        consultando o servidor <emphasis>pgp.mit.edu</emphasis>:
      </para>

      <screen>
# <userinput>gpg --keyserver pgp.mit.edu --search security@slackware.com</userinput>
gpg: keyring `/root/.gnupg/secring.gpg' created
gpg: keyring `/root/.gnupg/pubring.gpg' created
gpg: searching for "security@slackware.com" from HKP server pgp.mit.edu
Keys 1-2 of 2 for "security@slackware.com"
(1)     Slackware Linux Project &lt;security@slackware.com&gt;
          1024 bit DSA key 40102233, created 2003-02-25
(2)     Slackware Linux Project &lt;security@slackware.com&gt;
          1024 bit DSA key 40102233, created 2003-02-25
Enter number(s), N)ext, or Q)uit &gt; 
      </screen>

      <para>
        Como você pode ver, nós temos dois (idênticos) registros.  Selecione o
        primeiro digitando <quote>1</quote>.  O GnuPG irá importar esta chave
        para o chaveiro do usuário <emphasis>root</emphasis>:
      </para>

      <screen>
Enter number(s), N)ext, or Q)uit > <userinput>1</userinput>
gpg: key 40102233: duplicated user ID detected - merged
gpg: /root/.gnupg/trustdb.gpg: trustdb created
gpg: key 40102233: public key "Slackware Linux Project &lt;security@slackware.com&gt;" imported
gpg: Total number processed: 1
gpg:               imported: 1
      </screen>

      <para>
        Certifique-se de conferir mais de uma vez a chave que você recebeu.  O
        ID da chave e o resumo desta chave em particular podem ser encontrados
        na Internet em diversos sites confiáveis.  O ID da chave é, como você
        pôde ver acima, <emphasis>40102233</emphasis>.  Você pode obter o
        resumo desta chave com o parâmetro <parameter
        class="command">--fingerprint</parameter>:
      </para>

      <screen>
# <userinput>gpg --fingerprint security@slackware.com</userinput>
pub  1024D/40102233 2003-02-26 Slackware Linux Project &lt;security@slackware.com&gt;
     Key fingerprint = EC56 49DA 401E 22AB FA67  36EF 6A44 63C0 4010 2233
sub  1024g/4E523569 2003-02-26 [expires: 2012-12-21]
      </screen>

      <para>
        Uma vez que você tenha importado esta chave você pode começar a usar o
        slackpkg, e instalar pacotes de forma segura.
      </para>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-updatepkglist">
      <title>Atualizando a lista de pacotes</title>

      <para>
        Antes de atualizar e instalar pacotes você tem que deixar o slackpkg
        fazer o download das listas de pacotes a partir do espelho que você
        está usando.  É uma boa idéia fazer isto regularmente para manter estas
        listas sempre em dia.  A última listagem de pacotes pode ser obtida
        com:
      </para>

      <screen>
$ <userinput>slackpkg update</userinput>
      </screen>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-upgrade">
      <title>Atualizando pacotes</title>

      <para>
        O parâmetro <parameter class="command">upgrade</parameter> é usado para
        atualizar pacotes instalados.  Você precisa adicionar uma parâmetro
        extra para informar ao <command>slackpkg</command> o que você quer
        atualizar, e isto difere de uma versão estável do Slackware Linux para
        o slackware-current.  Atualizações para versões estáveis do Slackware
        Linux estão no diretório <filename>patches</filename> dos espelhos em
        FTP.  Você pode atualizar uma instalação do slackware-stable (p.ex., o
        Slackware Linux 12.0) com:
      </para>

      <screen>
# <userinput>slackpkg upgrade patches</userinput>
      </screen>

      <para>
        Neste caso, o <command>slackpkg</command> vai usar os pacotes do
        diretório <filename>patches</filename>.  Já os pacotes atualizados do
        slackware-current são colocados nos subdiretórios normais dos pacotes
        no diretório <filename>slackware</filename>.  Então, nós podemos
        passá-los como parâmetro para o <command>slackpkg upgrade</command>:
      </para>

      <screen>
# <userinput>slackpkg upgrade slackware</userinput>
      </screen>

      <para>
        Você também pode atualizar pacotes individuais especificando o nome do
        pacote a ser atualizado, por exemplo:
      </para>

      <screen>
# <userinput>slackpkg upgrade pine</userinput>
      </screen>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-install">
      <title>Instalando pacotes</title>

      <para>
        O parâmetro <parameter class="command">install</parameter> é usado para
        instalar pacotes:
      </para>

      <screen>
# <userinput>slackpkg install rexima</userinput>
      </screen>

      <para>
        Atente que nem o slackpkg, nem as ferramentas de pacotes do Slackware
        Linux fazem verificação de dependências.  Se algum programa não
        funcionar devido a ausência de alguma biblioteca, você precisa
        adicioná-las diretamente com o slackpkg.
      </para>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-pkgmgmt-rsync">
      <title>Obtendo atualizações através de rsync</title>

    <para>
      Outro método popular para manter o Slackware Linux atualizado é
      mantendo-se um espelho local.  A maneira ideal de fazer isto é através do
      rsync.  O rsync é um programa que pode sincronizar duas árvores de
      arquivos.  A vantagem é que o rsync apenas transfere as diferenças entre
      arquivos, sendo muito rápido.  Depois de sincronizar com um espelho você
      pode atualizar o Slackware Linux com <command>upgradepkg</command>, ou
      criar um novo CD de instalação.  O exemplo a seguir sincroniza uma árvore
      do current com uma árvore atualizada a partir de um espelho:
    </para>

    <screen>
# <userinput>rsync -av --delete \
--exclude=slackware/kde \
--exclude=slackware/kdei \
--exclude=slackware/gnome \
--exclude=bootdisks \
--exclude=extra \
--exclude=testing \
--exclude=pasture \
--exclude=rootdisks \
--exclude=source \
--exclude=zipslack \
rsync://fill-in-mirror/pub/slackware/slackware-current/ \
/usr/share/mirrors/slackware-current</userinput>
    </screen>

    <para>
      O parâmetro <parameter class="command">-a</parameter> implica em algumas
      poucas opções que tentam fazer uma cópia que seja tão exata quanto
      possível (em termos de preservação de links simbólicos, permissões e
      propriedades de arquivos).  O parâmetro <parameter
      class="command">--delete</parameter> remove arquivos que não estiverem
      mais disponíveis no espelho.  É uma boa idéia usar este parâmetro, porque
      de outra forma sua árvore pode ficar rapidamente entupida com uma porção
      de versões antigas de arquivos.  Com o parâmetro <parameter
      class="command">--exclude</parameter> você pode especificar quais
      arquivos ou diretórios devem ser ignorados.
    </para>

    <para>
      Depois de sincronizar a árvore você pode usar
      <command>upgradepkg</command> para atualizar sua instalação do Slackware
      Linux.  Por exemplo:
    </para>

    <screen>
# <userinput>upgradepkg /usr/share/mirrors/slackware-current/slackware/*/*.tgz</userinput>
    </screen>
  </sect1>

  <sect1 xml:id="chap-pkgmgmt-tagfiles">
    <title>Tagfiles</title>

    <sect2 xml:id="chap-pkgmgmt-tagfiles-intro">
      <title>Introdução</title>

      <para>
        Tagfiles são um recurso relativamente desconhecido do Slackware Linux.
        Um tagfile é um arquivo que pode ser usado para informar o 
        <command>installpkg</command> sobre que pacotes deveriam ser instalados
        a partir de um conjunto de pacotes.  Por exemplo, o instalador do
        Slackware Linux gera um arquivo tagfile ao executar os métodos de
        instalação <emphasis>Expert</emphasis> e <emphasis>Menu</emphasis> para
        armazenar quais pacotes deveriam ser instalados durante o processo de
        instalação.
      </para>

      <para>
        O aspecto positivo dos tagfiles é que você pode facilmente criar estes
        arquivos você mesmo.  Ao escrever seus próprios tagfiles você
        automatizar a instalação de pacotes, o que é ideal para instalações em
        muitos clientes ou manutenção de servidores (ou mesmo configurações
        menores se isso lhe dá mais conforto que instalar os pacotes
        manualmente).  A maneira mais fácil de criar seus próprios tagfiles é
        começando com os tagfiles existentes na distribuição oficial do
        Slackware Linux.  Nas seções seguintes vamos ver como isto é feito.
      </para>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-tagfiles-creating">
      <title>Criando tagfiles</title>

      <para>
        Tagfiles são meros arquivos de texto plano.  Cada linha consiste
        de um nome de pacote e um marcador, estes dois elementos são
        separados por dois-pontos e um espaço.  O marcador especifica o
        que deveria ser feito com o pacote.  Os campos são descritos em
        <xref linkend="chap-pkgmgmt-tagfiles-creating-fields"/>.  Vamos
        dar uma olhada em algumas linhas de tagfile da série
        <quote>a</quote> dos discos de instalação:
      </para>

      <screen>
aaa_base: ADD
aaa_elflibs: ADD
acpid: REC
apmd: REC
bash: ADD
bin: ADD
      </screen>

      <para>
        Cabe ressaltar que você pode adicionar comentários aos tagfiles
        com o tradicional caracter de comentário (#).  Como você pode
        ver no trecho acima, existem diversos marcadores.  A tabela
        listada abaixo descreve os quatro tipos existentes.
      </para>

      <table xml:id="chap-pkgmgmt-tagfiles-creating-fields">
        <title>Campos de tagfile</title>
        <tgroup cols="2" align="left" colsep="1" rowsep="1">
          <thead>
            <row>
              <entry>Marcador</entry>
              <entry>Significado</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>ADD</entry>
              <entry>Um pacote com este marcador será instalado
              automaticamente.</entry>
            </row>
            <row>
              <entry>SKP</entry>
              <entry>Um pacote com este marcador será pulado
              automaticamente.</entry>
            </row>
            <row>
              <entry>REC</entry>
              <entry>Pergunta ao usuário sobre o que fazer, recomendado
              a instalação do pacote.</entry>
            </row>
            <row>
              <entry>OPT</entry>
              <entry>Pergunta ao usuário sobre o que fazer, mas
              indicando o pacote como opcional.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>
        Como você pode ver, o <command>installpkg</command> só irá agir
        automaticamente quando <emphasis>ADD</emphasis> ou
        <emphasis>SKP</emphasis> forem usados.
      </para>

      <para>
        Deve ser muito entediante escrever um arquivo de tagfile para
        cada disco de instalação do Slackware Linux.  A distribuição
        oficial do Slackware Linux contém arquivos de tagfiles nos
        diretórios de cada série dos discos de instalação.  Você pode
        usar esses tagfiles para começar.  O pequeno script mostrado
        abaixo pode ser usado para copiar os tagfiles para o diretório
        atual, mantendo a estrutura dos discos de instalação.
      </para>

      <screen>
#!/bin/sh

if [ ! $# -eq 1 ] ; then
  echo "Syntax: $0 [directory]"
  exit
fi

for tagfile in $1/*/tagfile; do 
  setdir=`echo ${tagfile} | egrep -o '\w+/tagfile$' | xargs dirname`
  mkdir ${setdir}
  cp ${tagfile} ${setdir}/tagfile.org
  cp ${tagfile} ${setdir}
done
      </screen>

      <para>
        Depois de transcrever este script para um arquivo, você pode
        executá-lo e especificar um diretório
        <filename>slackware/</filename> contento as séries dos discos de
        instalação.  Por exemplo:
      </para>

      <screen>
$ <command>sh copy-tagfiles.sh /mnt/flux/slackware-current/slackware</command>
      </screen>

      <para>
        Depois de fazer isso, o diretório atual irá conter uma estrutura
        de diretório parecida com a mostrada abaixo, na qual você pode
        editar os arquivos de tagfiles individuais:
      </para>

      <screen>
a/tagfile
a/tagfile.org
ap/tagfile
ap/tagfile.org
d/tagfile
d/tagfile.org
e/tagfile
e/tagfile.org
[...]
      </screen>

      <para>
        Os arquivos que terminam com <emphasis>.org</emphasis> são
        backups que você pode usar como referências ao editar os
        tagfiles.  Além disso, eles também são usados pelo script como
        descrito na próxima seção.
      </para>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-tagfiles-autogen" >
      <title>Gerando tagfiles automaticamente</title>

      <para>
        Com um único script, também é possível criar tagfiles baseados
        nas pacotes que estão instalados neste instante no sistema.
        Agradeço a Peter Kaagman por sugerir esta brilhante idéia!
      </para>

      <para>
        Primeiro crie um diretório de tagfiles a partir da mídia de
        instalação do Slackware Linux, como mostrado na seção anterior.
        Quando tiver feito isso, você pode criar o seguinte script:
      </para>

      <screen>
#!/bin/sh

if [ ! $# -eq 1 ] ; then
  echo "Syntax: $0 [directory]"
  exit
fi

for tforg in $1/*/tagfile.org ; do
  tf=${tforg%.org}
  rm -f ${tf}
  for package in $(grep -v '^#' ${tforg} | cut -d ':' -f 1) ; do
    if ls /var/log/packages/${package}-[0-9]* &amp;&gt; /dev/null ; then 
      echo "${package}: ADD" &gt;&gt; ${tf}
    else
      echo "${package}: SKP" &gt;&gt; ${tf}
    fi
  done
done
      </screen>

      <para>
        Suponha que você tenha salvo este script como 
        <filename>build-tagfiles.sh</filename>, você pode executá-lo
        especificando o diretório que contém os tagfiles como primeiro
        argumento:
      </para>

      <screen>
$ <userinput>sh build-tagfiles.sh .</userinput>
      </screen>

      <para>
        O script irá marcar os pacotes que estão instalados como 
        <emphasis>ADD</emphasis>, e os que não estiverem instalados como
        <emphasis>SKP</emphasis>.
      </para>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-tagfiles-using">
      <title>Usando tagfiles</title>

      <para>
        Em um sistema instalado você pode fazer com que o 
        <command>installpkg</command> use tagfiles com o parâmetro
        <parameter class="command">-tagfile</parameter>.  Por exemplo:
      </para>

      <screen>
# <userinput>installpkg -infobox -root /mnt-small -tagfile a/tagfile /mnt/flux/slackware-current/slackware/a/*.tgz</userinput>
      </screen>

      <note>
	<para>
      Você pode usar a opção <parameter
	  class="command">-infobox</parameter>, do contrário os arquivos de
      tagfiles não serão usados.
	</para>
      </note>

      <para>
        É claro, tagfiles seriam inúteis se não pudessem ser usados
        durante a instalação do Slackware Linux.  É claro que isso é
        possível: depois de selecionar que séries você quer instalar,
        você pode escolhar de que forma você quer selecionar os pacotes
        (o diálogo é chamado <emphasis>SELECT PROMPTING
        MODE</emphasis>.  Escolha <emphasis>tagpath</emphasis> a partir
        deste menu.  Então será solicitado que você informe o caminho do
        diretório com a estrutura dos tagfiles.  A forma comum de
        informar tagfiles na instalação do Slackware Linux é colocá-los
        em um disquete ou em outra mídia e montá-la antes ou durante da
        instalação.  P.ex., você pode mudar para o segundo console
        pressionando as teclas &lt;ALT&gt; e &lt;F2&gt;, e criar um
        ponto de montagem e montar o disco com os tagfiles:
      </para>

      <screen>
# <userinput>mkdir /mnt-tagfiles</userinput>
# <userinput>mount /dev/fd0 /mnt/mnt-tagfiles</userinput>
      </screen>

      <para>
        Depois de montar o disco você pode voltar para o console virtual
        no qual o <command>setup</command> está executando, pressionando
        &lt;ALT&gt; e &lt;F1&gt;.
      </para>
    </sect2>
  </sect1>
</chapter>
