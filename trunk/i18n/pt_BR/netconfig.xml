<!-- $Id: netconfig.xml 295 2007-09-18 23:03:49Z danieldk $ -->

<chapter id="sysadmin-netconfig"> <?dbhtml filename="netconfig.html"?>
<title>Configuração de rede</title>

<sect1 id="sysadmin-netconfig-hardware">
<title>Hardware</title>

<bridgehead>Placas de rede</bridgehead>

<para>
Os drivers para a placa de rede são instalados como módulos do kernel. 
O módulo para a sua placa é carregada durante a inicialização do 
Slackware Linux. Na maioria do sistemas a placa de rede é automaticamente
detectada e configurada durante a instalação do Slackware Linux. Você
pode reconfigurá-la utilizando o comando <command>netconfig</command>.
O <command>netconfig</command> adiciona o driver (módulo) para a placa
detectada no arquivo <filename>/etc/rc.d/rc.netdevice</filename>.
</para>

<para>
Também é possível configurar quais módulos devem ser carregados durante a
inicialização do sistema. Isto pode ser feito adicionando uma linha com
o comando <command>modprobe</command> no arquivo 
<filename>/etc/rc.d/rc.modules</filename>. Por exemplo, se você precisa
carregar o módulo para as placas 3Com 59x (3c59x.o), adicione a seguinte 
linha no arquivo <filename>/etc/rc.d/rc.modules</filename> 
</para>

<screen>
/sbin/modprobe 3c59x
</screen>

<bridgehead>Placas PCMCIA</bridgehead>

<para>
Placas PCMCIA suportadas são detectadas automaticamente pelo software
responsável por este tipo de placa. Os pacotes pcmcia-cs do conjunto 
<quote>a</quote> do CD provê todas as funcionalidades para placas PCMCIA 
para o Slackware Linux.
</para> 

</sect1>

<sect1>
<title>Configuração das interfaces</title>

<para>
Placas de rede disponíveis no Linux são chamadas de <quote>interfaces</quotes>.
O comando <command>ifconfig</command> pode ser usado para mostrar as interfaces disponíveis:
</para>

<screen>
# <command>ifconfig -a</command>
eth0      Link encap:Ethernet  HWaddr 00:20:AF:F6:D4:AD  
          inet addr:192.168.1.1  Bcast:192.168.1.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1301 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1529 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1 txqueuelen:100 
          RX bytes:472116 (461.0 Kb)  TX bytes:280355 (273.7 Kb)
          Interrupt:10 Base address:0xdc00 

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:77 errors:0 dropped:0 overruns:0 frame:0
          TX packets:77 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:8482 (8.2 Kb)  TX bytes:8482 (8.2 Kb)
</screen>

<para>
As placas de rede recebem o nome ethn, onde o n é um número, começando 
em 0. No exemplo anterior, a primeira placa de rede (eth0) já possui um
endereço IP. Mas placas desconfiguradas não possuem endereço IP, o comando 
<command>ifconfig</command> não irá mostrar endereços IP para interfaces 
desconfiguradas. As interfaces podem ser configuradas no arquivo 
<filename>/etc/rc.d/rc.inet1.conf</filename>. Você pode simplesmente ler 
os comentários, e preencher as informações necessárias. Por exemplo:
</para>

<screen>
# Config information for eth0:
IPADDR[0]="192.168.1.1"
NETMASK[0]="255.255.255.0"
USE_DHCP[0]=""
DHCP_HOSTNAME[0]=""
</screen>

<para>
Neste exemplo o endereço IP 192.168.1.1 com a máscara de rede 255.255.255.0 
é atribuído à primeira interface ethernet (eth0). Se você está usando um 
servidor DHCP você pode alterar a linha <emphasis>USE_DHCP=""</emphasis> 
para <emphasis>USE_DHP[n]="yes"</emphasis> (troque <quote>n</quote> pelo 
número da interface). Outras variáveis, exceto <emphasis>DHCP_HOSTNAME</emphasis>
são ignoradas quando se usa DHCP. Por exemplo:
</para>

<screen>
IPADDR[1]=""
NETMASK[1]=""
USE_DHCP[1]="yes"
DHCP_HOSTNAME[1]=""
</screen>

<para>
O mesmo se aplica a outras interfaces. Você pode ativar as configurações 
reiniciando o sistema ou executando o comando <command>/etc/rc.d/rc.inet1</command>.
É possível também reconfigurar apenas uma interface com o comando
<command>/etc/rc.d/rc.inet1 ethX_restart</command>, onde <emphasis>ethX</emphasis> 
deve ser substituído pelo nome da interface que você quer reconfigurar.
</para>
</sect1>

<sect1>
<title>Configuração de interfaces (IPv6)</title>

<sect2>
<title>Introdução</title>

<para>
<acronym>IPv6</acronym> é a próxima versão do protocolo de internet. Uma das 
vantagens que ela possui é a grande quantidade de endereços. No IPv4 (o 
protocolo de internet mais utilizado atualmente) os endereços são de 32 bits, 
e há uma falta desses endereços. O IPv6 usa endereços de 128 bits, que provê 
uma inimaginável quantidade de endereços (2^128 endereços). Nele é utilizado 
outra notação de endereços. São usados números hexadecimais em vez de decimais, 
e os endereços são organizados em pares de 16 bits, separados por dois pontos 
(<quote>:</quote>). Vamos dar uma olhada em um exemplo: </para>

<screen>
fec0:ffff:a300:2312:0:0:0:1
</screen>

<para>
Um bloco de zeros pode ser substituído por um par de dois pontos. Portanto, 
o endereço anterior pode ser escrito assim:
</para>

<screen>
fec0:ffff:a300:2312::1
</screen>

<para>
Cada endereço IPv6 possui um prefixo. Normalmente ele consiste de dois 
elementos: um de 32 bits identificando o espaço de endereço que o provedor 
lhe provê e um número de 16 bits que especifíca a rede. Estes dois elementos
formam o prefixo, e neste caso o tamanho do prefixo é 32 + 16 = 48 bits. 
Entretanto, se você tiver um prefixo /48 você pode fazer 2^16 subnets e 
ter 2^80 máquinas em cada subnet. A imagem abaixo mostra a estrutura de 
um endereço IPv6 com um prefixo de 48 bits:
</para>

<figure id="ipv6address">
<title>A anatomia de um endereço IPv6</title>
<mediaobject>
<imageobject>
<imagedata fileref="../images/ipv6addr.png" format="PNG" />
</imageobject>
</mediaobject>
</figure>

<para>
Há alguns prefixos especiais reservados, os mais notáveis são:
</para>

<table>
<title>Prefixos IPv6 Importantes</title>
<tgroup cols="2">
<thead>
<row>
<entry>Prefixo</entry><entry>Descrição</entry>
</row>
</thead>
<tbody>
<row>
<entry>fe80::</entry><entry>Link local addresses, which are not routed.</entry>
</row>
<row>
<entry>fec0::</entry><entry>Site local addresses, which are locally routed, but not on or to the internet.</entry>
</row>
<row>
<entry>2002::</entry><entry>6to4 addresses, which are used for the transition from IPv4 to IPv6.</entry>
</row> 
</tbody>
</tgroup>
</table>
</sect2>

<sect2>
<title>Suporte a IPv6 no Slackware Linux</title>

<para>
O binários do kernel Linux incluídos no Slackware Linux não suportam
IPv6 por padrão, porém o suporte é incluído como um módulo do kernel.
Este módulo pode ser carregado usando-se o comando <command>modprobe</command>:
</para>

<screen>
# <command>modprobe ipv6</command>
</screen>

<para>
Você pode verificar se o suporte ao IPv6 está carregado corretamente
verificando a saída do kernel, com o comando <command>dmesg</command>:
</para>

<screen>
$ <command>dmesg</command>
[..]
IPv6 v0.8 for NET4.0
</screen>

<para>
O suporte ao iPv6 pode ser ativado permanentemente adicionando-se a 
seguinte linha ao arquivo <filename>/etc/rc.d/rc.modules</filename>:
</para>

<screen>
/sbin/modprobe ipv6
</screen>

<para>
As interfaces podem ser configuradas usando o comando <command>ifconfig</command>.
Porém é recomendado que se faça as configurações de IPv6 usando o
comando <command>ip</command>, o qual faz parte do pacote <command>iputils</command>
e que pode ser localizado no diretório <filename>extra/</filename> do 
Slackware Linux.
</para>
</sect2>

<sect2>
<title>Adicionando um endereço IPv6 em uma interface</title>

<para>
Se existir algum roteador na rede, há uma possibilidade de que a
interface de rede, já tenha recebido um endereço IPv6, caso o 
suporte a IPv6 esteja carregado no kernel.  Se este não for o caso
pode-se adicionar um endereço IPv6 a uma interface usando o
utilitário <command>ip</command>. Suponha que vamos adicionar o
endereço <quote>fec0:0:0:bebe::1</quote> com um prefixo de comprimento
64 (<quote>fec0:0:0:bebe</quote> este é o prefixo). Isto pode ser
feito com o seguinte comando:
</para>

<screen>
# <command>ip -6 addr add &lt;ip6addr&gt;/&lt;prefixlen&gt; dev &lt;device&gt;</command>
</screen>

<para>
Por Exemplo:
</para>

<screen>
# <command>ip -6 addr add fec0:0:0:bebe::1/64 dev eth0</command>
</screen> 

</sect2>

</sect1>

<sect1>
<title>Interfaces de Rede Sem Fio (<foreignphrase>Wireless</foreignphrase>)</title>

<para>
As interfaces de rede sem fio geralmente requerem algumas configurações
adicionais, como configuração de ESSID, chaves WEP e o modo de wireless.
A especificação das configurações para as interfaces wireless pode ser
feita no arquivo <filename>/etc/rc.d/rc.wireless.conf</filename>. O
script <command>/etc/rc.d/rc.wireless</command> configura as interfaces
de rede sem fio com base nas descrições do arquivo <filename>/etc/rc.d/rc.wireless.conf</command>.
Neste arquivo, as cofigurações são feitas pelo endereço MAC da Inteface.
Por default, este arquivo possui uma seção que localiza qualquer interface:
</para>

<screen>
## NOTE : Comment out the following five lines to activate the samples below ...
## --------- START SECTION TO REMOVE -----------
## Pick up any Access Point, should work on most 802.11 cards
*)
    INFO="Any ESSID"
    ESSID="any"
    ;;
## ---------- END SECTION TO REMOVE ------------
</screen>

<para>
Comumente é uma boa idéia remover esta seção e fazer uma configuração
por placa. Se você tiver somente uma placa wireless, poderá deixar esta
seção e adicionar apenas os parâmetros de configuração necessários.
Uma vez que esta seção integra a interface sem fio com a placa
de rede sem fio correspondente e configurada. Você poderá adicionar uma seção
para sua interface sem fio. Onde cada seção terá o seguinte formato:
</para>

<screen>
&lt;MAC address&gt;)
    &lt;settings&gt;
;;
</screen>

<para>
Você pode localizar o endereço MAC de uma interface conferindo a saída
para a interface através do comando <command>ifconfig</command>. Por
exemplo, se uma placa de rede sem fio tiver o nome da interface <emphasis>eth1</emphasis>,
voce poderá localizar o endereço MAC com o seguinte caminho:
</para>

<screen>
# <command>ifconfig eth1</command>
eth1      Link encap:Ethernet  HWaddr <emphasis>00:01:F4:EC:A5:32</emphasis>
          inet addr:192.168.2.2  Bcast:192.168.2.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:4 errors:1 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:0 (0.0 b)  TX bytes:504 (504.0 b)
          Interrupt:5 Base address:0x100
</screen>

<para>
O endereço hexadecimal que é mostrado após <emphasis>HWaddr</emphasis>
é o endereço MAC, neste exemplo <emphasis>00:01:F4:EC:A5:32</emphasis>.
Quando você tiver localizado o endereço MAC da interface poderá adicionar
uma seção para o dispositivo no arquivo <filename>/etc/rc.d/rc.wireless.conf</filename>.
Por exemplo:
</para>

<screen>
00:01:F4:EC:A5:32)
    INFO="Cabletron Roamabout WLAN NIC"
    ESSID="home"
    CHANNEL="8"
    MODE="Managed"
    KEY="1234-5678-AB"
    ;;
</screen>

<para>
Esta seção irá configurar a interface com o endereço MAC
<emphasis>00:01:F4:EC:A5:32</emphasis> para usar o ESSID
<emphasis>home</emphasis>, trabalhar em modo <emphasis>Managed</emphasis>
no canal <emphasis>8</emphasis>. A chave usada para criptografia WEP é
<emphasis>1234-5678-AB</emphasis>. Há outros parâmetros que podem ser
configurados. Para uma visualização de todos os parâmetros, verifique
o último exemplo no arquivo <filename>rc.wireless.conf</filename>.
</para>

<para>
Depois de configurar a interface sem fio, você poderá ativar as
modificações executando o script de inicialização de rede
<command>/etc/rc.d/rc.inet1</command>. Você poderá ver as configurações
atuais da wireless com o comando <command>iwconfig</command>:
</para>

<screen>
eth1      IEEE 802.11-DS  ESSID:"home"  Nickname:"HERMES I"
          Mode:Managed  Frequency:2.447 GHz  Access Point: 02:20:6B:75:0C:56   
          Bit Rate:2 Mb/s   Tx-Power=15 dBm   Sensitivity:1/3  
          Retry limit:4   RTS thr:off   Fragment thr:off
          Encryption key:1234-5678-AB
          Power Management:off
          Link Quality=0/92  Signal level=134/153  Noise level=134/153
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:27  Invalid misc:0   Missed beacon:0
</screen>

</sect1>

<sect1>
<title>Resolvendo nomes</title>

<bridgehead>nome de host (<foreignphrase>hostname</foreignphrase></bridgehead>

<para>
Cada computador na internet tem um nome de host. Se você não tiver um
hostname o qual é resolvido com DNS, seria uma boa idéia configurá-lo,
pois alguns softwares o utilizam. Você pode configurar seu nome de host
no arquivo <filename>/etc/HOSTNAME</filename>.  Uma linha simples com
o nome de host da maquina será suficiente. Normalmente esse nome tem o
seguinte formato: host.domain.tld, por exemplo, darkstar.slackfans.org.
Esteja ciente de que ter um hostname para resolver significa que GNU/Linux
está apto a converter o nome de host em um endereço IP. Se você tiver
certeza de que o endereço é resolvível pode adiconá-lo ao arquivo
<filename>/etc/hosts</filename>. Leia a seguinte seção para
mais informações sobre este arquivo.
</para>

<bridgehead>/etc/hosts</bridgehead>

<para>
<filename>/etc/hosts</filename> é uma tabela de endereços IP
com nomes associados. Este arquivo pode ser usado para nomes
de computadores em uma pequena rede. Vamos verificar um
exemplo do arquivo <filename>/etc/hosts</filename>:
</para>

<screen>
127.0.0.1               localhost
192.168.1.1             tazzy.slackfans.org tazzy
192.168.1.169           flux.slackfans.org
</screen>

<para>
A linha <emphasis>localhost</emphasis> deve estar sempre presente. Ela define o nome <emphasis>localhost</emphasis>
a uma interface especial, chamada loopback. Neste exemplo os nomes <emphasis>tazzy.slackfans.org</emphasis> e
<emphasis>tazzy</emphasis> estão definidos para o endereço IP 192.168.1.1, e o nome
<emphasis>flux.slackfans.org</emphasis> está definido para o endereço IP 192.168.1.169. No sistema que está
utilizando este arquivo, ambos os computadores estão disponíveis através dos hostnames mencionados.
</para>

<para>
É também possível adicionar um endereço IPv6, que será usado caso seu sistema
esteja configurado para usar IPv6. Este é um exemplo do arquivo
<filename>/etc/hosts</filename> com entradas IPv4 e IPv6: 
</para>

<screen>
# IPv4 entries
127.0.0.1               localhost
192.168.1.1             tazzy.slackfans.org tazzy
192.168.1.169           gideon.slackfans.org

# IPv6 entries
::1			localhost
fec0:0:0:bebe::2	flux.slackfans.org	
</screen>

<para>
Perceba que <quote>::1</quote> é o endereço padrão de
<foreignphrase>loopback</foreignphrase> para IPv6.
</para>

<bridgehead>/etc/resolv.conf</bridgehead>

<para>
O arquivo <filename>/etc/resolv.conf</filename> é usado para especificar
quais servidores de nomes o sistema poderá utilizar. Um servidor de nomes
converte hostnames para um endereço IP. Seu provedor deveria informar
pelo menos dois endereços de servidores de nomes (Servidores DNS). Você
poderá adicionar estes servidores de nomes ao arquivo
<filename>/etc/resolv.conf</filename> utilizando uma sequência
<emphasis>nameserver endereçoIP</emphasis> para cada servidor de nomes.
Por exemplo:
</para>

<screen>
nameserver 192.168.1.1
nameserver 192.168.1.169
</screen>

<para>
Você poderá chegar quais nomes de host estão respondendo corretamente ou
não com o comando <command>host hostname</command>. Troque o argumento 
<emphasis>hostname</emphasis> por um nome de host existente, por exemplo
o website de seu provedor de internet.
</para>
</sect1>

<sect1>
<title>Redirecionamentos IPv4 (<foreignphrase>IPv4 Forwarding</foreignphrase>)</title>

<para>
IPv4 forwarding conecta duas ou mais redes, enviando pacotes que
chegam a uma interface para outra. Isto permite que uma máquina
GNU/Linux funcione como um roteador. Por exemplo, você pode conectar
múltiplas redes, ou sua rede doméstica com a internet. Vamos
ver um exemplo:
</para> 

<figure id="router">
<title>Exemplo de Roteador</title>
<mediaobject>
<imageobject>
<imagedata fileref="../images/router.png" format="PNG" />
</imageobject>
</mediaobject>
</figure>

<para>
No exemplo acima, há duas redes, 192.168.1.0 e 192.168.2.0. Três hosts
estão conectados a ambas redes. Um destes hosts está conectado em ambas
as redes com diferentes interfaces. A interface na rede 192.168.1.0 tem
o endereço IP 192.168.1.3, a interface na rede 192.168.2.0 tem o
endereço IP 192.168.2.3. Como o host funciona com um roteador entre
ambas as redes ele encaminha pacotes da rede 192.168.1.0 para a
rede 192.168.2.0 e vice-versa. Roteamento de pacotes TCP/IP IPv4 podem
ser habilitados, ativando IPv4 forwarding.
</para>

<para>
IPv4 forwarding
pode ser habilitado ou desabilitado no Slackware Linux, mudando o
bit executável do arquivo <filename>/etc/rc.d/rc.ip_forward</filename>.
Se o bit executável estiver configurado neste arquivo, IP forwarding
estará habilitando durante o boot do sistema, caso contrario não
estará habilitado. Voce poderá checar se o bit executável está habilitado
com o comando <command>ls -l</command> (uma descrição do
<command>ls</command> pode ser encontrada em 
<xref linkend="chap-filesystems-analyzing-listing" />). 
</para>

<para>
Também é possível habilitar IPv4 forwarding num sistema em execução
com o seguinte comando (0 desabilita forwardin, 1 habilita forwarding):
</para>

<screen>
# <command>echo 0 > /proc/sys/net/ipv4/ip_forward</command>
</screen>

<para>
Muito Cuidado! Por padrão, não há nenhum filtro de pacotes. O que
significa que outros poderão acessar outras redes. O tráfego pode
ser filtrado e logado com o filtro de pacotes iptables. Iptables
pode ser administrado através do comando <command>iptables</command>.
NAT (<foreignphrase>Network Address Translation</foreignphrase> ou
tradução de endereços de rede) também é um subconjunto do iptables
e pode ser controlado e habilitado através do comando
<command>iptables</command>. NAT torna possível <quote>ocultar</quote>
uma rede atrás de um  endereço IP. O que permite a você utilizar a
internet em uma rede inteira com somente um endereço IP.
</para>
</sect1>

</chapter>
