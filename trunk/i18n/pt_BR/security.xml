<!-- $Id: security.xml 283 2007-09-18 20:14:31Z danieldk $ -->

<chapter> <?dbhtml filename="security.html"?>
<title>Segurança</title>

<sect1>
<title>Introdução</title>

<para>
Com o crescimento do uso da Internet e de redes sem fio, a segurança
está se tornando ainda mais importante a cada dia.  É impossível cobrir
este tópico em um único capítulo de uma introdução ao GNU/Linux.  Este
capítulo aborda algumas técnicas básicas de segurança que representam
um bom começo para segurança em servidores e estações de trabalho.
</para>

<para>
Antes de irmos aos tópicos específicos, é uma boa idéia recapitular
sobre senhas.  Autorização em sistema de computador é fortemente baseada
em senhas.  Certifique-se de usar boas senhas em todas as situações.
Evite usar palavras, nomes, datas de aniversário e senhas curtas.  Esses
tipos de senhas podem ser facilmente quebradas com ataques de dicionário
ou mesmo com ataques de força bruta contra hosts ou índices de senhas.
Utilize senhas longas, idealmente de oito caracteres ou maiores e
compostas por combinações aleatórias de letras (incluindo caracteres em
maiúsculas) e números.
</para>
</sect1>

<sect1>
<title>Fechando serviços</title>

<sect2>
<title>Introdução</title>

<para>
Muitos sistemas GNU/Linux executam alguns serviços que estão disponíveis
para uma rede local ou para a Internet.  Outros hosts podem se conectar
a esses serviços estabelecendo conexões a portas específicas.  Por
exemplo, a porta 80 é usada para tráfego WWW.  O arquivo
<filename>/etc/services</filename> contém uma relação com todos os
serviços mais comumente usados, e os respectivos números de porta
padrão.
</para>

<para>
Um sistema seguro deveria apenas executar os serviços que são
necessários.  Então, suponha que um host esteja configurado como um
servidor web, ele não deveria ter portas abertas (isto é, serviços) de
FTP ou SMTP.  Com mais portas abertas, os riscos de segurança aumentam
muito rapidamente, pois há maiores chances de que um software que esteja
disponibilizando um serviço numa porta tenha uma vulnerabilidade, ou
mesmo que esteja mal configurado.  As poucas seçõe seguintes irão
ajudá-lo a rastrear essas portas que estiverem abertas, e fechá-las.
</para>
</sect2>

<sect2>
<title>Encontrando portas abertas</title>

<para>
Portas abertas podem ser encontradas com o auxílio de um varredor de
portas (<foreignphrase>port scanner</foreignphrase>).  Provavelmente o
varredor de portais mais famoso para GNU/Linux seja o
<command>nmap</command>.  O <command>nmap</command> está disponível
dentro da série <quote>n</quote> dos discos de instalação.
</para>

<para>
A sintaxe básica do <command>nmap</command> é: <command>nmap
host</command>.  O parâmetro <emphasis>host</emphasis> pode ser tanto
um nome de host como um endereço IP.  Suponha que queremos varrer o
próprio host em que o <command>nmap</command> está instalado.  Neste
caso, deveríamos especificar o endereço IP do
<emphasis>localhost</emphasis>, <emphasis>127.0.0.1</emphasis>:
</para>

<screen>
$ <command>nmap 127.0.0.1</command>

Starting nmap V. 3.00 ( www.insecure.org/nmap/ )
Interesting ports on localhost (127.0.0.1):
(The 1596 ports scanned but not shown below are in state: closed)
Port       State       Service
21/tcp     open        ftp
22/tcp     open        ssh
23/tcp     open        telnet
80/tcp     open        http
6000/tcp   open        X11

Nmap run completed -- 1 IP address (1 host up) scanned in 0 seconds
</screen>

<para>
Neste exemplo, você pode ver que o host tem cinco portas abertas que
estão oferecendo serviços; ftp, ssh, telnet, http e X11.
</para>
</sect2>

<sect2>
<title>inetd</title>

<para>
Há duas maneiras de disponibilizar serviços TCP/IP: executando as
aplicações servidoras de forma independente como daemon ou usando o
super servidor internet, <command>inetd</command>.  O
<command>inetd</command> é um daemon que monitora um intervalo de
portas.  Se um cliente tenta se conectar a uma porta,o
<command>inetd</command> manipula a conexão e a encaminha para o
software servidor responsável por aquele tipo de conexão.  A vantagem
dessa abordagem é que ela adiciona uma camada extra de segurança e torna
mais fácil o log de conexões entrantes.  A desvantagem é que acaba sendo
mais lento que usar um daemon independente.  Então, será uma boa idéia
usar o servidor como daemon indepentente, por exemplo, em um servidor
FTP bastante carregado.
</para>

<para>
Você pode conferir se o <command>inetd</command> está ou não sendo
executado com o comando <command>ps</command>, por exemplo:
</para>

<screen>
$ <command>ps ax | grep inetd</command>
 2845 ?        S      0:00 /usr/sbin/inetd
</screen>

<para>
Neste exemplo, o inetd está sendo executando com o PID (ID de processo)
2845.  O <command>inetd</command> pode ser configurado através do arquivo
<filename>/etc/inetd.conf</filename>.  Vamos ver um exemplo de uma linha
do <filename>inetd.conf</filename>:
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Esta linha especifica que o <command>inetd</command> deve aceitar
conexões FTP e passá-las para o <command>tcpd</command>.  Isto pode
parecer um pouco estranho, afinal é o <command>proftpd</command> que
normalmente manipula conexões FTP.  Você também poderia atribuir o
<command>proftpd</command> diretamente no
<filename>inetd.conf</filename>, mas o Slackware Linux normalmente passa
a conexão para o <command>tcpd</command>.  Por sua vez, este programa
repassa a conexão para o <command>proftpd</command>, como especificado.
O <command>tcpd</command> é usado para monitorar serviços e permitir
controle de acesso baseado em hosts.
</para>

<para>
Serviços podem ser desabilitados adicionando-se o caracter de comentário
(#) no começo da linha.  É uma boa idéia desabilitar todos os serviços e
deixar habilitados apenas aqueles que você precisar a cada momento.
Depois de modificar o <filename>/etc/inetd.conf</filename>, o
<command>inetd</command> precisa ser reiniciado para ativar as mudanças.
Isto pode ser feito enviando-se um sinal HUP para o processo inetd:
</para>

<screen>
# <command>ps ax | grep 'inetd'</command>
   2845 ?        S      0:00 /usr/sbin/inetd
# <command>kill -HUP 2845</command>
</screen>

<para>
Se você não for precisar do <command>inetd</command> de forma alguma, é
uma boa idéia removê-lo.  Se você quiser mantê-lo instalado, mas não
quiser que o Slackware Linux carregue-o a cada inicialização, execute o
seguinte comando como root:
</para>

<screen>
# <command>chmod a-x /etc/rc.d/rc.inetd</command>
</screen>
</sect2>
</sect1>

</chapter>
