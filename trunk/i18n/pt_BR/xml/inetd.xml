<!-- $Id: inetd.xml 283 2007-09-18 20:14:31Z danieldk $ -->

<chapter> <?dbhtml filename="inetd.html"?>
<title>O super servidor de Internet</title>

<sect1>
<title>Introdução</title>

<para>
Há duas maneiras de disponibilizar serviços TCP/IP: executando as
aplicações servidoras de forma independente como daemon ou usando o
super servidor internet, <command>inetd</command>.  O
<command>inetd</command> é um daemon que monitora um intervalo de
portas.  Se um cliente tenta se conectar a uma porta,o
<command>inetd</command> manipula a conexão e a encaminha para o
software servidor responsável por aquele tipo de conexão.  A vantagem
dessa abordagem é que ela adiciona uma camada extra de segurança e torna
mais fácil o log de conexões entrantes.  A desvantagem é que acaba sendo
mais lento que usar um daemon independente.  Então, será uma boa idéia
usar o servidor como daemon independente, por exemplo, em um servidor
FTP bastante carregado.
</para>

</sect1>

<sect1>
<title>Configuração</title>

<para>
O <command>inetd</command> pode ser configurado através do arquivo
<filename>/etc/inetd.conf</filename>.  Vamos ver um exemplo de uma linha
do <filename>inetd.conf</filename>:
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Esta linha especifica que o <command>inetd</command> deve aceitar
conexões FTP e passá-las para o <command>tcpd</command>.  Isto pode
parecer um pouco estranho, afinal é o <command>proftpd</command> que
normalmente manipula conexões FTP.  Você também poderia atribuir o
<command>proftpd</command> diretamente no
<filename>inetd.conf</filename>, mas o Slackware Linux normalmente passa
a conexão para o <command>tcpd</command>.  Por sua vez, este programa
repassa a conexão para o <command>proftpd</command>, como especificado.
O <command>tcpd</command> é usado para monitorar serviços e permitir
controle de acesso baseado em hosts.
</para>

<para>
Serviços podem ser desabilitados adicionando-se o caractere de comentário
(#) no começo da linha.  É uma boa idéia desabilitar todos os serviços e
deixar habilitados apenas aqueles que você precisar a cada momento.
Depois de modificar o <filename>/etc/inetd.conf</filename>, o
<command>inetd</command> precisa ser reiniciado para ativar as mudanças.
Isto pode ser feito enviando-se um sinal HUP para o processo inetd:
</para>

<screen>
# <command>ps ax | grep 'inetd'</command>
   64 ?        S      0:00 /usr/sbin/inetd
# <command>kill -HUP 64</command>
</screen>

<para>
  Ou você pode usar o script de inicialização
  <filename>rc.inetd</filename> para reiniciar o
  <command>inetd</command>:
</para>

<screen>
# <command>/etc/rc.d/rc.inetd restart</command>
</screen>

</sect1>

<sect1>
<title>TCP wrappers</title>

<para>
Como você pode ver no arquivo <filename>/etc/inetd.conf</filename>, as
conexões para a maioria dos protocolos são feitas por meio do
<command>tcpd</command>, ao invés de se passar a conexão diretamente
para o software do serviço.  Por exemplo:
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Neste exemplo, as conexões ftp são passadas para o
<command>tcpd</command>.  O <command>tcpd</command> registra logs das
conexões por meio do syslog e permite verificações adicionais.  Um dos
recursos mais usado do <command>tcpd</command> é o controle de acesso
baseado em hosts.  Hosts que devem ter acesso negado são determinados
pelo <filename>/etc/hosts.deny</filename>, enquanto que os hosts com
permissão de acesso são definidos via
<filename>/etc/hosts.allow</filename>.  Ambos os arquivos levam uma
regra por linha, da seguinte forma:
</para>

<screen>
service: hosts
</screen>

<para>
Os hosts podem ser especificados pelo nome de host ou por seu endereço
IP.  A palavra-chave ALL significa todos os hosts ou todos os serviços.
</para>

<para>
Suponha que nós queremos bloquear acesso a todos os serviços gerenciados
pelo <command>tcpd</command>, exceto para o host
<quote>trusted.example.org</quote>.  Para isso, os seguintes arquivos
<filename>hosts.deny</filename> e <filename>hosts.allow</filename> devem
ser criados.
</para>

<para>
<filename>/etc/hosts.deny</filename>:
</para>

<screen>
ALL: ALL
</screen>

<para>
<filename>/etc/hosts.allow</filename>:
</para>

<screen>
ALL: trusted.example.org
</screen>

<para>
No arquivo <filename>hosts.deny</filename>, o acesso é bloqueado para
todos (ALL) os serviços e para todos (ALL) os hosts.  Mas o arquivo
<filename>hosts.allow</filename> especifica que todos (ALL) os serviços
devem estar disponíveis para <quote>trusted.example.org</quote>.
</para>

</sect1>

</chapter>
