<!-- $Id: sendmail.xml 301 2007-09-19 23:00:26Z danieldk $ -->

<chapter id="email-sendmail"> <?dbhtml filename="sendmail.html"?>
  <title>Sendmail</title>

  <indexterm><primary>sendmail</primary></indexterm>

  <sect1 id="email-sendmail-introduction">
    <title>Introdução</title>

    <indexterm><primary>MTA</primary></indexterm>
    <indexterm><primary>Agente de Transferência de Correio (Mail Transfer Agent)</primary></indexterm>

    <para>
      O Sendmail é o Agente de Transferência de Correio
      (<acronym>MTA</acronym>) que o Slackware Linux utiliza.  O
      sendmail foi escrito originalmente por Eric Allman, que ainda
      é o mantenedor do projeto.  O principal papel do MTA sendmail é
      fazer a entrega de mensagens, tanto local quanto remotamente.  A
      entrega é comumente feita por meio do protocolo SMTP.  Isso
      significa que o sendmail pode aceitar e-mail de sites remotos
      através da porta SMTP, e que o sendmail também entrega mensagens
      destinadas a sites remotos por meio de outros servidores SMTP.
    </para>
  </sect1>

  <sect1 id="email-sendmail-installation">
    <title>Instalação</title>

    <indexterm><primary>sendmail</primary><secondary>instalação</secondary></indexterm>

    <para>
      O Sendmail está disponível como o pacote
      <emphasis>sendmail</emphasis> na série <quote>n</quote> dos discos
      de instalação.  Se você quiser gerar seu próprio arquivo de
      configuração do sendmail, o pacote
      <emphasis>sendmail-cf</emphasis> também é necessário.  Para saber
      mais sobre como instalar pacotes no Slackware Linux, consulte
      <xref linkend="chap-pkgmgmt" />.
    </para>

    <para>
      Você pode deixar o Slackware Linux iniciar o sendmail a cada
      inicialização do sistema deixando o script
      <filename>/etc/rc.d/rc.sendmail</filename> como executável.
      Você pode fazer isso com:
    </para>

    <screen>
# <command>chmod a+x /etc/rc.d/rc.sendmail</command>
    </screen>

    <para>
      Você também pode iniciar, parar e reiniciar o sendmail usando
      <emphasis>start</emphasis>, <emphasis>stop</emphasis>, e
      <emphasis>restart</emphasis> como parâmetros para o script de
      inicialização do sendmail.  Por exemplo, você pode reiniciar o
      sendmail da seguinte forma:
    </para>

    <screen>
# <command>/etc/rc.d/rc.sendmail restart</command>
    </screen>
  </sect1>

  <sect1 id="email-sendmail-configuration">
    <title>Configuração</title>

    <para>
      O arquivo de configuração principal do sendmail é o
      <filename>/etc/mail/sendmail.cf</filename>; é neste arquivo que o
      comportamento do sendmail é configurado, e onde outros arquivos
      são incluídos.  A sintaxe do
      <filename>/etc/mail/sendmail.cf</filename>, de certa forma, é bem
      obscuta, porque este arquivo é compilado a partir de arquivos
      <filename>.mc</filename> mais simples e que usam macros M4 que são
      definidas para o sendmail.
    </para>

    <para>
      Algumas definições podem ser facilmente modificadas no arquivo
      <filename>/etc/mail/sendmail.cf</filename>, mas para outras
      alterações é melhor criar seu próprio arquivo
      <filename>.mc</filename>.  Os exemplos neste capítulo serão
      focados na criação de um arquivo mc personalizado.
    </para>

    <sect2 id="email-sendmail-configuration-mc">
      <title>Trabalhando com arquivos mc</title>

      <indexterm><primary>sendmail</primary><secondary>arquivos mc</secondary></indexterm>

      <para>
        Nesta seção vamos ver como você pode começar com um arquivo mc
        inicial, e como compilar seu próprio arquivo .cf para um arquivo
        de configuração.  Há muitos interessante arquivos mc de exemplo
        disponíveis em <filename>/usr/share/sendmail/cf/cf</filename>.
        Os exemplos mais interessantes são
        <filename>sendmail-slackware.mc</filename> (que é usado para
        gerar o <filename>sendmail.cf</filename> padrão do Slackware
        Linux) e o <filename>sendmail-slackware-tls.mc</filename>, que
        inclui suporte a TLS ao arquivo de configuração padrão do
        sendmail no Slackware Linux.  Se você quiser criar sua própria
        configuração do sendmail, é uma boa idéia começar com uma cópia
        do arquivo mc padrão do Slackware Linux.  Por exemplo, suponha
        que queiramos criar um arquivo de configuração para um servidor
        chamado <emphasis>straw</emphasis>.  Poderíamos executar:
      </para>

      <screen>
# <command>cd /usr/share/sendmail/cf/cf</command>
# <command>cp sendmail-slackware.mc sendmail-straw.mc</command>
      </screen>

      <para>
        e começar a fazer modificações em
        <filename>sendmail-straw.mc</filename>.  Depois que o arquivo de
        configuração estiver modificado de acordo com nossas
        necessidades, o M4 pode ser usado para compilar um arquivo cf:
      </para>

      <screen>
# <command>m4 sendmail-straw.mc &gt; sendmail-straw.cf</command>
      </screen>

      <para>
        Se quisermos usar este novo arquivo de configuração como nosso
        arquivo de configuração padrão, podemos copiá-lo de volta em
        <filename>/etc/mail/sendmail.cf</filename>:
      </para>

      <screen>
# <command>cp sendmail-straw.cf /etc/mail/sendmail.cf</command>
      </screen>
    </sect2>

    <sect2 id="email-sendmail-configuration-smarthost">
      <title>Usando um smarthost</title>

      <indexterm><primary>sendmail</primary><secondary>smarthost</secondary></indexterm>

      <para>
        Se você preferir usar outro host para entrega de e-mail a locais
        em que o servidor sendmail que está sendo configurado não pode
        entregar, você pode configurar o sendmail para usar um, assim
        chamado, <quote>smart host</quote>.  O Sendmail irá enviar os
        e-mails não entregáveis para esse smart host que, por sua vez,
        se supõe que irá manipular o e-mail.  Você pode fazer isso
        definindo <emphasis>SMART_HOST</emphasis> em seu arquivo mc.
        Por exemplo, se você quiser usar
        <emphasis>smtp2.example.org</emphasis> como smart host, você
        pode incluir a seguinte linha:
      </para>

      <screen>
define(`SMART_HOST',`stmp2.example.org')
      </screen>
    </sect2>

    <sect2 id="email-sendmail-configuration-accepthosts">
      <title>Nomes de domínio/hosts alternativos</title>

      <indexterm><primary>sendmail</primary><secondary>nomes de host locais</secondary></indexterm>

      <para>
        Por padrão, o sendmail irá aceitar e-mails endereçados para
        localhost, bem como para o nome de host atual do sistema.  Você
        pode simplesmente incluir hosts adicionais ou domínios a partir
        dos quais aceitar e-mails.  O primeiro passo é conferir se a
        seguinte linha está incluída em seu arquivo mc de configuração:
      </para>

      <screen>
FEATURE(`use_cw_file')dnl
      </screen>

      <para>
        Quando essa opção está habilitada, você pode adicionar nomes de
        hosts e domínios a partir dos quais aceitar e-mails no arquivo
        <filename>/etc/mail/local-host-names</filename>.  Este arquivo
        é uma base de nomes, contendo um registro por linha.  Por
        exemplo, o arquivo poderia ser algo parecido com isto:
      </para>

      <screen>
example.org
mail.example.org
www.example.org
      </screen>
    </sect2>

    <sect2 id="email-sendmail-configuration-mapaddr">
      <title>Tabela de usuários virtuais</title>

      <indexterm><primary>sendmail</primary><secondary>tabela de usuários virtuais</secondary></indexterm>

      <para>
        Frequentemente você pode querer mapear endereços de e-mail para
        nomes de usuários.  Isto é necessário quando o nome de usuário
        no sistema difere da parte antes do <quote>@</quote> antes do
        endereço de e-mail.  Para habilitar esta funcionalidade,
        certifique-se de adicionar a seguinte linha em seu arquivo mc:
      </para>

      <screen>
FEATURE(`virtusertable',`hash -o /etc/mail/virtusertable.db')dnl
      </screen>

      <para>
        Os mapeamentos agora serão lidos a partir de
        <filename>/etc/mail/virtusertable.db</filename>.  Este arquivo é
        uma base de dados binários que não pode ser modificada
        diretamente.  No entanto, você pode editar
        <filename>/etc/mail/virtusertable</filename> e gerar o
        <filename>/etc/mail/virtusertable.db</filename> a partir desse
        arquivo.
      </para>

      <para>
        O arquivo <filename>/etc/mail/virtusertable</filename> é um
        simples arquivo de texto plano.  Há um mapeamento por linha, com
        um endereço de e-mail e um nome de usuário separado por uma
        tabulação.  Por exemplo:
      </para>

      <screen>
john.doe@example.org    john
john.doe@mail.example.org        john
      </screen>

      <para>
        Neste exemplo, ambos os e-mails endereçados a
        <emphasis>john.doe@example.org</emphasis> e a
        <emphasis>john.doe@mail.example.org</emphasis> serão entregues à
        conta do usuário <emphasis>john</emphasis> account.  Também é
        possível encaminhar algum e-mail endereçado a um domínio
        hospedado no servidor a um outro endereço de e-mail,
        especificando este endereço de e-mail de destino na segunda
        coluna.  Por exemplo:
      </para>

      <screen>
john.doe@example.org    john.doe@example.com
      </screen>

      <para>
        Depois de fazer as alterações necessárias em seu arquivo
        <filename>virtusertable</filename> você pode gerar a base de
        dados com o seguinte comando:
      </para>

      <screen>
# <command>makemap hash /etc/mail/virtusertable &lt; /etc/mail/virtusertable</command>
      </screen>
    </sect2>
  </sect1>

</chapter>
