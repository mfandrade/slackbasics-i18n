<?xml version="1.0" encoding="UTF-8"?>

<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
	 xml:id="chap-pkgmgmt">
  <title>Manajemen paket</title>

  <sect1 xml:id="chap-pkgmgmt-pkgtools">
    <title>Pkgtools</title>

    <sect2 xml:id="chap-pkgmgmt-pkgtools-intro">
      <title>Perkenalan</title>

      <para>
	Slackware Linux tidak menggunakan sistem paket yang kompleks, 
	tidak seperti distribusi linux lainnya. Paket memiliki ekstensi 
	<filename>.tgz</filename>, dan biasanya merupakan paket tarball 
	biasa dengan dua berkas tambahan yaitu : sebuah skrip installasi 
	dan berkas deskripsi paket tersebut. Sehubungan dengan 
	kesederhanaan dari paketnya, aplikasi manajemen Slackware Linux 
	tidak melakukan penanganan terhadap ketergantungan (dependensi). Tetapi banyak 
	pengguna Slackware Linux memilih cara ini, karena penanganan 
	dependensi sering mengakibatkan masalah dibandingkan pemecahannya.
      </para>

      <para>
	Slackware Linux memiliki beberapa aplikasi yang digunakan untuk 
	menangani paket. Pada bab ini akan dibahas aplikasi penanganan 
	paket yang paling penting. Untuk belajar memahami aplikasi 
	tersebut, penting untuk melihat penamaan paket terlebih dulu. 
	Mari kita lihat sebuah contoh, bayangkan kita memiliki paket 
	dengan nama berkas <filename>bash-2.05b-i386-2.tgz</filename>. 
	Dalam kasus ini nama paket adalah bash-2.05b-i386-2. Dalam nama 
	paket informasi tentang paket dipisahkan menggunakan karakter 
	'-'. Sebuah nama paket memiliki arti sebagai berikut : 
	<emphasis>namaprogram-versi-arsitektur-versipaket</emphasis>
      </para>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-pkgtools-pkgtool">
      <title>pkgtool</title>

      <para>
	Perintah <command>pkgtool</command> menyediakan antarmuka dalam 
	bentuk menu untuk melakukan beberapa operasi terhadap paket. 
	Bagian menu yang paling penting adalah 
	<emphasis>Remove</emphasis> dan <emphasis>Setup</emphasis>. Opsi 
	<emphasis>Remove</emphasis> menampilkan daftar paket yang telah 
	terinstall. Anda dapat memilih paket mana yang Anda ingin hapus 
	dengan menekan tombol spasi kemudian mengkonfirmasi pilihan Anda 
	dengan menekan tombol Enter. Anda juga dapat membatalkan pilihan 
	pada paket yang ingin Anda hapus dengan menekan kembali tombol 
	spasi.
      </para>

      <para>
	Opsi <emphasis>Setup</emphasis> menyediakan akses ke beberapa 
	aplikasi yang dapat membantu melakukan konfigurasi terhadap 
	sistem Anda, sebagai contoh: <command>netconfig</command>, 
	<command>pppconfig</command> and <command>xwmconfig</command>.
      </para>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-pkgtools-installpkg">
      <title>installpkg</title>

      <para>
	Perintah <command>installpkg</command> digunakan untuk 
	menginstall paket. <command>installpkg</command> membutuhkan 
	berkas paket sebagai parameter. Sebagai contoh, jika Anda ingin 
	menginstall paket <filename>bash-2.05b-i386-2.tgz</filename> 
	jalankan perintah sebagai berikut:
      </para>

      <screen>
# <userinput>installpkg bash-2.05b-i386-2.tgz</userinput>
      </screen>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-pkgtools-upgradepkg">
      <title>upgradepkg</title>

      <para>
	<command>upgradepkg</command> dapat digunakan untuk mengupgrade 
	paket. Berbeda dengan <command>installpkg</command>, aplikasi 
	ini hanya menginstall paket jika dalam sistem terdapat versi 
	yang lebih lama dari paket tersebut. Sintaks perintahnya dapat 
	dibandingkan dengan <command>installpkg</command>. Sebagai 
	contoh, jika Anda ingin mengupgrade paket menggunakan paket yang 
	ada di dalam sebuah direktori, jalankan perintah berikut :        
      </para>

      <screen>
# <userinput>upgradepkg *.tgz</userinput>
      </screen>

      <para>
	Seperti yang telah dikatakan, paket-paket tersebut akan 
	terinstall jika versi lain telah terinstall pada sistem 
	tersebut. 
      </para>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-pkgtools-removepkg">
      <title>removepkg</title>

      <para>
	Perintah <command>removepkg</command> dapat digunakan untuk 
	menghapus paket yang telah terinstall. Sebagai contoh, jika Anda 
	ingin menghapus paket <quote>bash</quote> (Sangat tidak 
	dianjurkan untuk melakukan hal ini !), Anda dapat mengeksekusi 
	perintah:
      </para>

      <screen>
# <userinput>removepkg bash</userinput>
      </screen>

      <para>
	Seperti yang Anda lihat, hanya nama program yang disebutkan 
	dalam contoh ini. Anda juga dapat menghapus sebuah paket dengan 
	menyebutkan nama lengkap dari paket tersebut :
      </para>

      <screen>
# <userinput>removepkg bash-2.05b-i386-2</userinput>
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-pkgmgmt-slackpkg">
    <title>Slackpkg</title>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-intro">
      <title>Perkenalan</title>

      <para>
	Slackpkg adalah aplikasi pengolah paket yang ditulis oleh 
	Roberto F. Batista dan Evaldo Gardenali. Aplikasi ini membantu 
	pengguna untuk melakukan installasi dan upgrade paket Slackware 
	Linux  menggunakan salah satu dari mirror Slackware Linux. 
	Slackpkg dimasukkan di direktori <filename>extra/</filename> 
	dalam CD kedua dari kumpulan CD Slackware Linux.
      </para>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-config">
      <title>Konfigurasi</title>

      <para>
	Slackpkg dikonfigurasikan melalui sebuah berkas  di 
	<filename>/etc/slackpkg</filename>. Hal pertama yang harus Anda 
	lakukan adalah mengkonfigurasikan mirror mana yang akan 
	digunakan oleh slackpkg. Hal ini dapat diselesaikan dengan 
	mengedit <filename>/etc/slackpkg/mirrors</filename>. Berkas ini 
	telah berisi daftar mirror-mirror, Anda hanya perlu 
	menghilangkan tanda komentar pada mirror yang dekat dengan Anda. 
	Sebagai contoh:
      </para>

      <screen>
ftp://ftp.nluug.nl/pub/os/Linux/distr/slackware/slackware-12.0/
      </screen>

      <para>
	Contoh ini akan menggunakan pohon Slackware Linux 12.0 dalam 
	mirror ftp.nluug.nl. Pastikan untuk menggunakan pohon yang cocok 
	dengan versi Slackware linux Anda. Jika Anda ingin menggunakan 
	slackware-current Anda dapat menghilangkan tanda komentar pada 
	baris berikut (jika Anda ingin menggunakan mirror NLUUG ):
      </para>

      <screen>
ftp://ftp.nluug.nl/pub/os/Linux/distr/slackware/slackware-current/
      </screen>

      <para>
	Slackpkg hanya akan menerima satu mirror. Menghilangkan tanda 
	komentar lebih dari satu mirror akan membuat aplikasi ini tidak 
	bekerja.
      </para>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-gpgkey">
      <title>Mengimport kunci GPG Slackware Linux</title>

      <para>
	Secara default slackpkg menguji paket menggunakan paket 
	signature dan kunci GPG publik Slackware Linux. Karena hal ini merupakan ide yang bagus 
	dari sudut pandang keamanan, Anda mungkin 
	tidak ingin mengganti kebiasaan ini. Untuk mampu melakukan 
	pengujian paket, Anda harus mengimport kunci GPG 
	<emphasis>security@slackware.com</emphasis>. Jika Anda tidak 
	pernah menggunakan GPG sebelumnya, Anda harus membuat direktori 
	GPG pada direktori home dari pengguna <emphasis>root</emphasis>:
      </para>

      <screen>
# <userinput>mkdir ~/.gnupg</userinput>
      </screen>

      <para>
	Langkah selanjutnya adalah mencari kunci publik untuk 
	<emphasis>security@slackware.com</emphasis>. Kita akan melakukan 
	hal ini dengan memasukkan server <emphasis>pgp.mit.edu</emphasis> :
      </para>

      <screen>
# <userinput>gpg --keyserver pgp.mit.edu --search security@slackware.com</userinput>
gpg: keyring `/root/.gnupg/secring.gpg' created
gpg: keyring `/root/.gnupg/pubring.gpg' created
gpg: searching for "security@slackware.com" from HKP server pgp.mit.edu
Keys 1-2 of 2 for "security@slackware.com"
(1)     Slackware Linux Project &lt;security@slackware.com&gt;
          1024 bit DSA key 40102233, created 2003-02-25
(2)     Slackware Linux Project &lt;security@slackware.com&gt;
          1024 bit DSA key 40102233, created 2003-02-25
Enter number(s), N)ext, or Q)uit &gt; 
      </screen>

      <para>
	Sebagaimana yang Anda lihat terdapat dua (identik) pilihan. 
	Pilih yang pertama dengan memasukkan nilai <quote>1</quote>. 
	GnuPG akan mengimport kunci ini ke dalam pengguna  
	<emphasis>root</emphasis> :
      </para>

      <screen>
Enter number(s), N)ext, or Q)uit > <userinput>1</userinput>
gpg: key 40102233: duplicated user ID detected - merged
gpg: /root/.gnupg/trustdb.gpg: trustdb created
gpg: key 40102233: public key "Slackware Linux Project &lt;security@slackware.com&gt;" imported
gpg: Total number processed: 1
gpg:               imported: 1
      </screen>

      <para>
	Pastikan untuk melakukan pengecekan ulang terhadap kunci yang 
	Anda terima. ID kunci dan sidikjari dari kunci ini dapat 
	ditemukan di internet pada berbagai situs yang dapat dipercaya. 
	ID kunci  adalah <emphasis>40102233</emphasis> seperti yang 
	dijelaskan diatas. Anda bisa mendapatkan sidikjari dengan 
	memasukkan parameter <parameter 
	class="command">--fingerprint</parameter> :
      </para>

      <screen>
# <userinput>gpg --fingerprint security@slackware.com</userinput>
pub  1024D/40102233 2003-02-26 Slackware Linux Project &lt;security@slackware.com&gt;
     Key fingerprint = EC56 49DA 401E 22AB FA67  36EF 6A44 63C0 4010 2233
sub  1024g/4E523569 2003-02-26 [expires: 2012-12-21]
      </screen>

      <para>
	Sekali Anda mengimport dan mengecek kunci ini, Anda sudah bisa 
	memulai menggunakan slackpkg, dan pastinya menginstall paket.
      </para>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-updatepkglist">
      <title>Mengupdate daftar paket</title>

      <para>
	Sebelum mengupgrade dan menginstal paket Anda harus membiarkan 
	slackpkg mendownload daftar paket dari mirror yang Anda gunakan. 
	Adalah ide bagus untuk melakukan hal ini secara reguler untuk 
	memastikan daftar tersebut selalu update. Daftar paket terakhir 
	dapat diambil dengan :
      </para>

      <screen>
$ <userinput>slackpkg update</userinput>
      </screen>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-upgrade">
      <title>Mengupgrade paket</title>

      <para>
	Parameter <parameter class="command">upgrade</parameter> 
	digunakan untuk mengupgrade paket yang telah terinstall. Anda 
	harus menambahkan parameter tambahan untuk memberitahu 
	<command>slackpkg</command> paket apa yang ingin Anda upgrade, 
	hal ini berbeda untuk versi stabil Slackware Linux dan slackware 
	current. Untuk upgrade keluaran stabil Slackware Linux terdapat 
	di direktori <filename>patches</filename> dari mirror FTP. Anda 
	dapat mengupdate instalasi versi stabil slackware (misalnya 
	Slackware Linux 12.0) dengan :
      </para>

      <screen>
# <userinput>slackpkg upgrade patches</userinput>
      </screen>

      <para>
	Pada kasus ini <command>slackpkg</command> akan menggunakan 
	paket dari direktori <filename>patches</filename>. Dalam versi 
	slackware current paket yang terbaru diletakkan dalam normal 
	subdirektori paket yaitu <filename>slackware</filename>. Jadi, 
	kita dapat melewatkannya sebagai parameter dalam perintah 
	<command>slackpkg upgrade</command>:
      </para>

      <screen>
# <userinput>slackpkg upgrade slackware</userinput>
      </screen>

      <para>
	Anda juga dapat mengupgrade paket secara individu dengan 
	menspesifikasikan nama paket yang akan diupgrade, sebagai 
	contoh:
      </para>

      <screen>
# <userinput>slackpkg upgrade pine</userinput>
      </screen>

    </sect2>

    <sect2 xml:id="chap-pkgmgmt-slackpkg-install">
      <title>Menginstall paket</title>

      <para>
	Parameter <parameter class="command">install</parameter> 
	digunakan untuk menginstall paket:
      </para>

      <screen>
# <userinput>slackpkg install rexima</userinput>
      </screen>

      <para>
	Untuk diperhatikan, baik slackpkg ataupun aplikasi paket 
	Slackware Linux tidak melakukan pengujian dependensi. Jika 
	terdapat program yang tidak bekerja karena kehilangan pustaka 
	tertentu, Anda dapat menambahkannya sendiri dengan slackpkg
      </para>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-pkgmgmt-rsync">
    <title>Melakukan update menggunakan rsync</title>

    <para>
	Metode populer lainnya untuk membuat Slackware Linux tetap 
	update adalah dengan menyimpan ke mirror lokal. Langkah ideal 
	untuk melakukan ini adalah lewat rsync. rsync adalah program 
	yang dapat melakukan sinkronisasi dari dua pohon berkas. 
	Keuntungannya adalah rsync hanya akan mentransfer perbedaan 
	dalam sebuah berkas, yang membuat proses update menjadi sangat 
	cepat. Setelah melakukan sinkronisasi dengan mirror Anda dapat 
	mengupgrade Slackware Linux dengan 
	<command>upgradepkg</command>, atau membuat CD instalasi yang 
	baru. Contoh berikut ini melakukan sinkronisasi pohon direktori 
	lokal dengan pohon yang terbaru dari mirror.
    </para>

    <screen>
# <userinput>rsync -av --delete \
--exclude=slackware/kde \
--exclude=slackware/kdei \
--exclude=slackware/gnome \
--exclude=bootdisks \
--exclude=extra \
--exclude=testing \
--exclude=pasture \
--exclude=rootdisks \
--exclude=source \
--exclude=zipslack \
rsync://fill-in-mirror/pub/slackware/slackware-current/ \
/usr/share/mirrors/slackware-current</userinput>
    </screen>

    <para>
      Parameter <parameter class="command">-a</parameter> seperti pada opsi lain mencoba membuat 
      salinan yang sama persis (dalam hal mempertahankan symlink, hak akses, dan pemilik). 
      Parameter <parameter class="command">--delete</parameter> menghapus berkas yang tidak lagi 
      tersedia pada mirror. Merupakan ide yang bagus untuk menggunakan parameter ini, karena pohon 
      Anda mungkin dipenuhi dengan versi paket lama. Dengan parameter <parameter class="command">--exclude</parameter> 
      Anda bisa menentukan berkas atau direktori mana yang harus diabaikan.
    </para>

    <para>
      Setelah melakukan sinkronisasi, Ana bisa menggunakan <command>upgradepkg</command> untuk mengupdate installasi 
      Slackware Linux Anda. Sebagai contoh:
    </para>

    <screen>
# <userinput>upgradepkg /usr/share/mirrors/slackware-current/slackware/*/*.tgz</userinput>
    </screen>
  </sect1>

  <sect1 xml:id="chap-pkgmgmt-tagfiles">
    <title>Tagfile</title>

    <sect2 xml:id="chap-pkgmgmt-tagfiles-intro">
      <title>Perkenalan</title>

      <para>
        Tagfile adalah fitur yang jarang diketahui dari Slackware Linux. Sebuah tagfile adalah berkas yang bisa 
	digunakan untuk memberitahukan kepada <command>installpkg</command> paket apa yang harus diinstall 
	dari sekumpulan paket-paket. Sebagai contoh, installer Slackware Linux menghasilkan tagfile selama mode 
	installasi <emphasis>Expert</emphasis> dan <emphasis>Menu</emphasis> untuk menyimpan paket mana yang harus 
	diinstall selama proses installasi.
      </para>

      <para>
        Aspek yang bagus dari tagfile adalah Anda bisa membuat tagfile Anda sendiri. Dengan menulis tagfile Anda sendiri, 
	Anda bisa mengotomatisasikan installasi paket, yang ideal untuk jumlah pengguna yang besar atau penggantian server 
	(atau pengaturan yang lebih kecil jika Anda lebih nyaman dibandingkan menginstall paket secara manual). Cara termudah 
	untuk membuat tagfile Anda adalah dengan menggunakan tagfile yang merupakan bagian dari distribusi resmi 
	Slackware Linux. Pada bagian berikut, kita akan melihat bagaimana hal ini bisa dilakukan.
      </para>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-tagfiles-creating">
      <title>Membuat tagfile</title>

      <para>
        Tagfile adalah berkas plain-text sederhana. Setiap baris terdiri dari nama paket dan sebuah flag, yang dipisahkan 
	dengan tanda titik dua dan spasi. Flag menentukan apa yang harus dilakukan dengan sebuah paket. Kolom akan dijelaskan 
	pada <xref
        linkend="chap-pkgmgmt-tagfiles-creating-fields"/>.  Mari kita lihat pada beberapa baris pada tagfile dari set disk <quote>a</quote> :
      </para>

      <screen>
aaa_base: ADD
aaa_elflibs: ADD
acpid: REC
apmd: REC
bash: ADD
bin: ADD
      </screen>

      <para>
        Harus dicatat bahwa Anda bisa menambahkan komentar pada tagfile dengan karakter komentar seperti biasa (#). Seperti yang 
	Anda lihat pada potongan diatas, terdapat beberapa flag. Tabel dibawah menjelaskan empat flag yang berbeda.
      </para>

      <table xml:id="chap-pkgmgmt-tagfiles-creating-fields">
        <title>Kolom Tagfile</title>
        <tgroup cols="2" align="left" colsep="1" rowsep="1">
          <thead>
            <row>
              <entry>Flag</entry>
              <entry>Arti</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>ADD</entry>
              <entry>Sebuah paket yang ditandai dengan ini akan secara otomatis diinstall.</entry>
            </row>
            <row>
              <entry>SKP</entry>
              <entry>Sebuah paket yang ditandai dengan ini akan secara otomatis dilewati.</entry>
            </row>
            <row>
              <entry>REC</entry>
              <entry>Menanyakan kepada pengguna apa yang harus dilakukan, merekomendasikan installasi paket.</entry>
            </row>
            <row>
              <entry>OPT</entry>
              <entry>Menanyakan kepada pengguna apa yang harus dilakukan, paket akan dijelaskan sebagai opsional.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>
        Seperti yang Anda baca dari tabel, <command>installpkg</command> hanya akan menginstall secara otomatis jika 
        <emphasis>ADD</emphasis> atau <emphasis>SKP</emphasis> digunakan.
      </para>

      <para>
        Akan menjadi pekerjaan membosankan untuk menulis tagfile untuk setiap set disk Slackware Linux. Distribusi resmi 
	Slackware Linux berisi sebuah tagfile pada direktori untuk setiap set disknya. Anda bisa menggunakan tagfile ini 
	sebagai awalnya. Script pendek berikut bisa digunakan untuk menyalin tagfile pada direktori aktual, sambil 
	mempertahankan strukturnya.
      </para>

      <screen>
#!/bin/sh

if [ ! $# -eq 1 ] ; then
  echo "Syntax: $0 [directory]"
  exit
fi

for tagfile in $1/*/tagfile; do 
  setdir=`echo ${tagfile} | egrep -o '\w+/tagfile$' | xargs dirname`
  mkdir ${setdir}
  cp ${tagfile} ${setdir}/tagfile.org
  cp ${tagfile} ${setdir}
done
      </screen>

      <para>
	Setelah script di tulis ke dalam file, Anda dapat 
	mengeksekusinya, kemudian menspesifikan 
	direktori <filename>Slackware</filename> yang menyediakan 
	kumpulan disk. Sebagai contoh :
      </para>

      <screen>
$ <command>sh copy-tagfiles.sh /mnt/flux/slackware-current/slackware</command>
      </screen>

      <para>
        Setelah melakukan hal ini, direktori aktual akan berisi struktur direktori seperti berikut, dimana 
	Anda bisa mengedit berkas tagfile secara individu:
      </para>

      <screen>
a/tagfile
a/tagfile.org
ap/tagfile
ap/tagfile.org
d/tagfile
d/tagfile.org
e/tagfile
e/tagfile.org
[...]
      </screen>

      <para>
        Berkas yang diakhiri dengan <emphasis>.org</emphasis> adalah cadangan, yang bisa Anda gunakan sebagai referensi 
	ketika mengedit tagfile. Selain itu, mereka juga digunakan pada script yang akan dijelaskan pada bagian berikutnya.
      </para>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-tagfiles-autogen" >
      <title>Pembuatan tagfile secara otomatis</title>

      <para>
        Dengan script yang sederhana, dimungkinkan untuk membangun tagfile berdasarkan paket yang diinstall pada sistem 
	aktual. Saya berterima kasih kepada Peter Kaagman yang hadir dengan ide ini!
      </para>

      <para>
        Pertama-tama, bangun direktori tagfile dari media installasi the Slackware Linux, seperti yang dijelaskan pada 
	bagian sebelumnya. Setelah selesai, Anda bisa membuat script berikut:
      </para>

      <screen>
#!/bin/sh

if [ ! $# -eq 1 ] ; then
  echo "Syntax: $0 [directory]"
  exit
fi

for tforg in $1/*/tagfile.org ; do
  tf=${tforg%.org}
  rm -f ${tf}
  for package in $(grep -v '^#' ${tforg} | cut -d ':' -f 1) ; do
    if ls /var/log/packages/${package}-[0-9]* &amp;&gt; /dev/null ; then 
      echo "${package}: ADD" &gt;&gt; ${tf}
    else
      echo "${package}: SKP" &gt;&gt; ${tf}
    fi
  done
done
      </screen>

      <para>
        Misalkan Anda sudah menyimpannya sebagai <filename>build-tagfiles.sh</filename>, Anda bisa menggunakannya 
	dengan menentukan direktori yang berisi tagfile sebagai argumen pertama:
      </para>

      <screen>
$ <userinput>sh build-tagfiles.sh .</userinput>
      </screen>

      <para>
        Script akan menandai paket-paket yang terinstall sebagai <emphasis>ADD</emphasis>, dan paket-paket yang 
	tidak terinstall sebagai <emphasis>SKP</emphasis>.
      </para>
    </sect2>

    <sect2 xml:id="chap-pkgmgmt-tagfiles-using">
      <title>Menggunakan tagfile</title>

      <para>
        Pada sistem yang terinstall, Anda bisa membiarkan <command>installpkg</command> menggunakan tagfile dengan parameter 
        <parameter class="command">-tagfile</parameter>. Sebagai contoh: 
      </para>

      <screen>
# <userinput>installpkg -infobox -root /mnt-small -tagfile a/tagfile /mnt/flux/slackware-current/slackware/a/*.tgz</userinput>
      </screen>

      <note>
	<para>
	  Anda harus menggunakan opsi <parameter
	  class="command">-infobox</parameter>, jika tidak, tagfile tidak akan digunakan.
	</para>
      </note>

      <para>
        Tentu saja, tagfile akan menjadi tidak berguna jika mereka tidak digunakan selama installasi dari Slackware Linux. 
	Hal ini jelas mungkin: setelah memilih set disk mana yang hendak Anda install, Anda bisa memilih bagaimana Anda memilih 
	paket (dialog bernama <emphasis>SELECT PROMPTING MODE</emphasis>. Pilih <emphasis>tagpath</emphasis> dari menu ini. Anda 
	akan mendapatkan pertanyaan tentang path pada struktur direktori dengan tagfile. Cara umum untuk menyediakan tagfile pada 
	installasi Slackware Linux adalah dengan meletakkannya pada disket atau media lain, dan me-mountnya sebelum atau saat 
	installasi. Misalnya, Anda bisa berpindah pada konsol kedua dengan menekan kunci &lt;ALT&gt; and &lt;F2&gt;, dan membuat 
	sebuah titik mount dan me-mount disk dengan tagfile:
      </para>

      <screen>
# <userinput>mkdir /mnt-tagfiles</userinput>
# <userinput>mount /dev/fd0 /mnt/mnt-tagfiles</userinput>
      </screen>

      <para>
        Setelah me-mount disk, Anda bisa kembali ke konsol virtual dimana Anda menjalankan <command>setup</command>, dengan menekan 
	&lt;ALT&gt; and &lt;F1&gt;.
      </para>
    </sect2>
  </sect1>
</chapter>
