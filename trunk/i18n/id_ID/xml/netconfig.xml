<!-- $Id: netconfig.xml 295 2007-09-18 23:03:49Z danieldk $ -->

<chapter id="sysadmin-netconfig"> <?dbhtml filename="netconfig.html"?>
<title>Konfigurasi jaringan</title>

<sect1 id="sysadmin-netconfig-hardware">
<title>Perangkat Keras</title>

<bridgehead>Kartu jaringan (NIC)</bridgehead>

<para>
Driver untuk NIC sudah terinstall sebagai modul kernel. Modul untuk NIC Anda harus sudah dimuat saat inisialisasi 
Slackware Linux. Pada sebagian besar sistem, NIC sudah otomatis terdeteksi dan terkonfigurasi saat installasi 
Slackware Linux. Anda bisa mengkonfigurasi ulang NIC Anda dengan perintah <command>netconfig</command>.
<command>netconfig</command> menambahkan driver (modul) untuk kartu yang terdeteksi pada <filename>/etc/rc.d/rc.netdevice</filename>. 
</para>

<para>
Juga dimungkinkan untuk mengkonfigurasi secara manual modul-modul mana yang hendak dimuat selama inisialisasi sistem. 
Hal ini bisa dilakukan dengan menambahkan baris <command>modprobe</command> pada <filename>/etc/rc.d/rc.modules</filename>. 
Sebagai contoh, jika Anda hendak memuat modul untuk NIC 3Com 59x NIC (3c59x.o), tambahkan baris berikut pada 
<filename>/etc/rc.d/rc.modules</filename> 
</para>

<screen>
/sbin/modprobe 3c59x
</screen>

<bridgehead>Kartu PCMCIA</bridgehead>

<para>
Kartu PCMCIA yang didukung akan terdeteksi secara otomatis oleh perangkat lunak PCMCIA. Paket pcmcia-cs dari 
set disk <quote>a</quote> menyediakan fungsionalitas PCMCIA untuk Slackware Linux.
</para> 

</sect1>

<sect1>
<title>Konfigurasi antarmuka</title>

<para>
Kartu jaringan tersedia pada Linux melalui <quote>antarmuka</quote>.
Perintah <command>ifconfig</command> digunakan untuk menampilkan antarmuka yang tersedia:
</para>

<screen>
# <command>ifconfig -a</command>
eth0      Link encap:Ethernet  HWaddr 00:20:AF:F6:D4:AD  
          inet addr:192.168.1.1  Bcast:192.168.1.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1301 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1529 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1 txqueuelen:100 
          RX bytes:472116 (461.0 Kb)  TX bytes:280355 (273.7 Kb)
          Interrupt:10 Base address:0xdc00 

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:77 errors:0 dropped:0 overruns:0 frame:0
          TX packets:77 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:8482 (8.2 Kb)  TX bytes:8482 (8.2 Kb)
</screen>

<para>
Kartu jaringan mendapatkan nama ethn, dimana n adalah sebuah angka, dimulai dari 0. Pada contoh diatas, 
kartu jaringan pertama (eth0) sudah memiliki alamat IP. Tetapi antarmuka yang belum terkonfigurasi 
tidak akan mendapatkan alamat IP, perintah <command>ifconfig</command> tidak akan menampilkan alamat IP untuk 
antarmuka yang belum dikonfigurasi. Antarmuka bisa dikonfigurasi pada berkas 
<filename>/etc/rc.d/rc.inet1.conf</filename>. Anda bisa membaca komentar yang ada, dan mengisi informasi yang 
diperlukan. Sebagai contoh:
</para>

<screen>
# Config information for eth0:
IPADDR[0]="192.168.1.1"
NETMASK[0]="255.255.255.0"
USE_DHCP[0]=""
DHCP_HOSTNAME[0]=""
</screen>

<para>
Pada contoh ini, alamat IP 192.168.1.1 dengan netmask 255.255.255.0 diberikan pada antarmuka ethernet pertama (eth0). 
Jika Anda menggunakan server DHCP, Anda bisa mengganti baris <emphasis>USE_DHCP=""</emphasis> menjadi 
<emphasis>USE_DHP[n]="yes"</emphasis> (ganti <quote>n</quote> dengan nomor antarmuka). Variabel lain, selain <emphasis>DHCP_HOSTNAME</emphasis>
akan diabaikan ketika menggunakan DHCP. Sebagai contoh:
</para>

<screen>
IPADDR[1]=""
NETMASK[1]=""
USE_DHCP[1]="yes"
DHCP_HOSTNAME[1]=""
</screen>

<para>
Hal yang sama berlaku pada antarmuka yang lain. Anda bisa mengaktifkan pengaturan dengan me-reboot sistem atau menjalankan 
<command>/etc/rc.d/rc.inet1</command>. Juga dimungkinkan untuk mengkonfigurasi ulang satu antarmuka dengan 
<command>/etc/rc.d/rc.inet1 ethX_restart</command>, dimana 
<emphasis>ethX</emphasis> harus diganti dengan nama antarmuka yang hendak dikonfigurasi ulang.
</para>
</sect1>

<sect1>
<title>Konfigurasi pada antarmuka (IPv6)</title>

<sect2>
<title>Perkenalan</title>

<para>
<acronym>IPv6</acronym> adalah protokol internet generasi berikutnya. Salah satu keuntungannya adalah ia memiliki ruang 
alamat yang jauh lebih besar. Pada IPv4 (protokol internet yang umum digunakan saat ini) alamat berjumlah 32-bit, 
ruang alamat ini hampir sepenuhnya terisi dan adanya kekurangan alamat IPv4. IPv6 menggunakan alamat 128-bit, yang menyediakan 
ruang alamat yang sangat besar (2^128 alamat). IPv6 menggunakan notasi alamat yang berbeda, pertama-tama menggunakan nomor heksadesimal 
dan bukan lagi menggunakan nomor desimal, dan alamat dinotasikan dalam pasangan 16-bit yang dipisahkan oleh tanda 
titik dua (<quote>:</quote>). Mari kita lihat pada sebuah contoh: </para>

<screen>
fec0:ffff:a300:2312:0:0:0:1
</screen>

<para>
Blok yang bernilai nol bisa digantikan dengan dua titik dua (<quote>::</quote>). Sehingga, alamat diatas bisa ditulis sebagai:
</para>

<screen>
fec0:ffff:a300:2312::1
</screen>

<para>
Setiap alamat IPv6 memiliki prefix. Biasanya berisi dua elemen: 32 bit yang mengidentifikasi ruang alamat yang disediakan 
oleh penyedia, dan angka 16-bit yang menunjukan jaringan. Dua elemen ini membentuk sebuah prefix, dan pada kasus ini panjang 
prefix adalah 32 + 16 = 48 bit. Sehingga, jika Anda memiliki prefix /48, Anda bisa membuat 2^16 subnet dan 2^80 host pada 
setiap subnet. Gambar dibawah menunjukan struktur dari alamat IPv6 dengan prefix 48-bit.
</para>

<figure id="ipv6address">
<title>Anatomi alamat IPv6</title>
<mediaobject>
<imageobject>
<imagedata fileref="../../images/ipv6addr.png" format="PNG" />
</imageobject>
</mediaobject>
</figure>

<para>
Terdapat beberapa prefix yang sudah dipakai, misalnya:
</para>

<table>
<title>Prefix IPv6 Penting</title>
<tgroup cols="2">
<thead>
<row>
<entry>Prefix</entry><entry>Deskripsi</entry>
</row>
</thead>
<tbody>
<row>
<entry>fe80::</entry><entry>Link alamat lokal, yang tidak dirutekan.</entry>
</row>
<row>
<entry>fec0::</entry><entry>Alamat lokal situs, yang dirutekan secara lokal, tetapi tidak pada atau ke Internet.</entry>
</row>
<row>
<entry>2002::</entry><entry>alamat 6to4, yang digunakan untuk transisi dari IPv4 ke IPv6.</entry>
</row> 
</tbody>
</tgroup>
</table>
</sect2>

<sect2>
<title>Dukungan IPv6 pada Slackware Linux</title>

<para>
Kernel Linux yang disertakan pada Slackware Linux tidak mendukung IPv6 secara default, tetapi dukungan disertakan 
sebagai modul kernel. Modul ini bisa dimuat menggunakan <command>modprobe</command>:
</para>

<screen>
# <command>modprobe ipv6</command>
</screen>

<para>
Anda bisa memverifikasi jika dukungan IPv6 sudah dimuat dengan benar dengan melihat hasil keluaran kernel menggunakan <command>dmesg</command>:
</para>

<screen>
$ <command>dmesg</command>
[..]
IPv6 v0.8 for NET4.0
</screen>

<para>
Dukungan IPv6 bisa diaktifkan secara permanen dengan menambahkan baris berikut pada 
<filename>/etc/rc.d/rc.modules</filename>:
</para>

<screen>
/sbin/modprobe ipv6
</screen>

<para>
Antarmuka bisa dikonfigurasi menggunakan <command>ifconfig</command>. Tetapi direkomendasikan untuk menggunakan pengaturan 
IPv6 menggunakan perintah <command>ip</command>, yang merupakan bagian dari paket <quote>iputils</quote> yang dapat ditemukan 
pada direktori <filename>extra/</filename> dari pohon Slackware Linux.
</para>
</sect2>

<sect2>
<title>Menambahkan alamat IPv6 pada antarmuka</title>

<para>
Jika terdapat sembarang router pada jaringan, maka ada kemungkinan bahwa antarmuka pada jaringan tersebut sudah menerima sebuah 
alamat IPv6 ketika dukungan kernel untuk IPv6 sudah dimuat. Jika tidak, sebuah alamat IPv6 bisa ditambahkan pada sebuah 
antarmuka menggunakan utilitas <command>ip</command>. Misalkan kita hendak menambahkan alamat <quote>fec0:0:0:bebe::1</quote>
dengan panjang prefix 64 (berarti <quote>fec0:0:0:bebe</quote> adalah prefix). Hal ini bisa dilakukan dengan 
sintaks berikut:
</para>

<screen>
# <command>ip -6 addr add &lt;ip6addr&gt;/&lt;prefixlen&gt; dev &lt;device&gt;</command>
</screen>

<para>
Sebagai contoh:
</para>

<screen>
# <command>ip -6 addr add fec0:0:0:bebe::1/64 dev eth0</command>
</screen> 

</sect2>

</sect1>

<sect1>
<title>Antarmuka nirkabel</title>

<para>
Antarmuka nirkabel biasanya membutuhkan konfigurasi tambahan, seperti pengaturan ESSID, kunci WEP dan mode nirkabel. 
Pengaturan antarmuka yang khusus pada antarmuka nirkabel bisa ditentukan pada berkas
<filename>/etc/rc.d/rc.wireless.conf</filename>. Script 
<command>/etc/rc.d/rc.wireless</command> mengkonfigurasikan antarmuka nirkabel berdasarkan deskripsi dari 
<filename>/etc/rc.d/rc.wireless.conf</filename>. Pada 
<filename>rc.wireless.conf</filename> pengaturan dibuat untuk setiap alamat MAC antarmuka. Secara default, berkas ini 
memiliki sebuah bagian yang cocok dengan setiap antarmuka:
</para>

<screen>
## NOTE : Comment out the following five lines to activate the samples below ...
## --------- START SECTION TO REMOVE -----------
## Pick up any Access Point, should work on most 802.11 cards
*)
    INFO="Any ESSID"
    ESSID="any"
    ;;
## ---------- END SECTION TO REMOVE ------------
</screen>

<para>
Merupakan ide bagus untuk menghapus bagian ini untuk membuat pengaturan per kartu. Jika Anda malas dan hanya memiliki 
satu kartu nirkabel, Anda bisa membiarkan bagian ini dan menambahkan parameter konfigurasi yang Anda perlukan. Karena bagian 
ini cocok dengan sembarang antarmuka nirkabel, maka kartu nirkabel Anda akan cocok dengan terkonfigurasi. Anda bisa menambahkan 
bagian untuk antarmuka kartu nirkabel Anda. Setiap bagian memiliki format sebagai berikut:
</para>

<screen>
&lt;MAC address&gt;)
    &lt;settings&gt;
;;
</screen>

<para>
Anda bisa menemukan alamat MAC dari sebuah antarmuka dengan melihat hasil keluaran 
<command>ifconfig</command> untuk sebuah antarmuka. Sebagai contoh, jika kartu nirkabel memiliki nama antarmuka 
<emphasis>eth1</emphasis>, Anda bisa mencari alamat MAC dengan cara berikut:
</para>

<screen>
# <command>ifconfig eth1</command>
eth1      Link encap:Ethernet  HWaddr <emphasis>00:01:F4:EC:A5:32</emphasis>
          inet addr:192.168.2.2  Bcast:192.168.2.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:4 errors:1 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:0 (0.0 b)  TX bytes:504 (504.0 b)
          Interrupt:5 Base address:0x100
</screen>

<para>
Alamat heksadesimal yang dicetak setelah <emphasis>HWaddr</emphasis> adalah alamat MAC, dalam kasus ini
<emphasis>00:01:F4:EC:A5:32</emphasis>.
Ketika Anda telah menemukan alamat MAC dari antarmuka, Anda bisa menambahkan bagian untuk perangkat keras ini 
pada <filename>/etc/rc.d/rc.wireless.conf</filename>. Sebagai contoh:
</para>

<screen>
00:01:F4:EC:A5:32)
    INFO="Cabletron Roamabout WLAN NIC"
    ESSID="home"
    CHANNEL="8"
    MODE="Managed"
    KEY="1234-5678-AB"
    ;;
</screen>

<para>
Hal ini mengatur antarmuka dengan alamat MAC 
<emphasis>00:01:F4:EC:A5:32</emphasis> untuk menggunakan ESSID
<emphasis>home</emphasis>, bekerja pada mode <emphasis>Managed</emphasis> pada kanal <emphasis>8</emphasis>. 
Kunci yang digunakan untuk enkripsi WEP adalah 
<emphasis>1234-5678-AB</emphasis>. Terdapat banyak parameter lain yang bisa ditentukan. Untuk gambaran dari semua parameter, 
lihat pada contoh terakhir pada <filename>rc.wireless.conf</filename>.
</para>

<para>
Setelah mengkonfigurasi antarmuka nirkabel, Anda bisa mengaktifkan perubahan dengan menjalankan script inisialisasi jaringan
<command>/etc/rc.d/rc.inet1</command>. Anda bisa melihat pengaturan nirkabel aktual dengan perintah <command>iwconfig</command> :
</para>

<screen>
eth1      IEEE 802.11-DS  ESSID:"home"  Nickname:"HERMES I"
          Mode:Managed  Frequency:2.447 GHz  Access Point: 02:20:6B:75:0C:56   
          Bit Rate:2 Mb/s   Tx-Power=15 dBm   Sensitivity:1/3  
          Retry limit:4   RTS thr:off   Fragment thr:off
          Encryption key:1234-5678-AB
          Power Management:off
          Link Quality=0/92  Signal level=134/153  Noise level=134/153
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:27  Invalid misc:0   Missed beacon:0
</screen>

</sect1>

<sect1>
<title>Resolve</title>

<bridgehead>Nama host</bridgehead>

<para>
Setiap komputer pada Internet memiliki sebuah nama host. Jika Anda tidak memiliki nama host yang dapat di-resolve oleh DNS, 
merupakan ide yang bagus untuk mengkonfigurasi nama host Anda, karena beberapa perangkat lunak menggunakannya. Anda bisa 
mengkonfigurasikan nama host pada <filename>/etc/HOSTNAME</filename>. Sebuah baris tunggal dengan nama host mesin sudah cukup. 
Biasanya sebuah nama host memiliki bentuk seperti berikut: host.domain.tld, sebagai contoh darkstar.slackfans.org. 
Hati-hati bahwa nama host harus dapat di-resolve, yang berarti GNU/Linux harus bisa mengkonversi nama host menjadi alamat 
IP. Anda bisa memastikan nama host dapat di-resolve dengan menambahkan pada <filename>/etc/hosts</filename>. Baca 
bagian berikutnya untuk informasi tentang berkas ini.
</para>

<bridgehead>/etc/hosts</bridgehead>

<para>
<filename>/etc/hosts</filename> adalah tabel alamat IP dengan nama host yang berhubungan. Berkas ini bisa digunakan untuk 
memberi nama komputer pada jaringan yang kecil. Mari kita lihat contoh dari berkas
<filename>/etc/hosts</filename> :
</para>

<screen>
127.0.0.1               localhost
192.168.1.1             tazzy.slackfans.org tazzy
192.168.1.169           flux.slackfans.org
</screen>

<para>
Baris <emphasis>localhost</emphasis> harus selalu ada. Bari ini memberi nama <emphasis>localhost</emphasis> pada antarmuka 
khusus, loopback. Pada contoh ini, nama 
<emphasis>tazzy.slackfans.org</emphasis> dan <emphasis>tazzy</emphasis> diberi alamat IP 192.168.1.1,
dan nama <emphasis>flux.slackfans.org</emphasis> diberi alamat IP 192.168.1.169.
Pada sistem dimana berkas ini berada, kedua komputer akan tersedia sesuai dengan nama host yang diberikan.
</para>

<para>
Juga dimungkinkan untuk menambahkan alamat IPv6, yang akan digunakan jika sistem Anda terkonfigurasi untuk IPv6. 
Berikut adalah contoh berkas <filename>/etc/hosts</filename> untuk alamat IPv4 dan IPv6 : 
</para>

<screen>
# IPv4 entries
127.0.0.1               localhost
192.168.1.1             tazzy.slackfans.org tazzy
192.168.1.169           gideon.slackfans.org

# IPv6 entries
::1			localhost
fec0:0:0:bebe::2	flux.slackfans.org	
</screen>

<para>
Harap diperhatikan bahwa <quote>::1</quote> adalah loopback IPv6 default.
</para>

<bridgehead>/etc/resolv.conf</bridgehead>

<para>
Berkas <filename>/etc/resolv.conf</filename> digunakan untuk menentukan nameserver mana yang harus digunakan sistem. Sebuah 
nameserver mengkonversi nama host menjadi alamat IP. Penyedia Internet Anda seharusnya memberikan paling tidak dua alamat 
nameserver (server DNS). Anda bisa menambahkan nameserver ini pada <filename>/etc/resolv.conf</filename> dengan menambahkan 
baris <emphasis>nameserver alamatIP</emphasis> untuk setiap nameserver. Sebagai contoh:
</para>

<screen>
nameserver 192.168.1.1
nameserver 192.168.1.169
</screen>

<para>
Anda bisa menguji apakah nama host ditranslasikan dengan benar atau tidak dengan perintah <command>host namahost</command>. 
Ganti <emphasis>namahost</emphasis> dengan nama hostname yang ada., sebagai contoh website dari penyedia layanan Internet Anda.
</para>
</sect1>

<sect1>
<title>IPv4 Forwarding</title>

<para>
IPv4 forwarding menghubungkan dua atau lebih jaringan dengan mengirimkan paket yang tiba pada satu antarmuka ke antarmuka lain. 
Hal ini memungkinkan sebuah mesin GNU/Linux berfungsi sebagai sebuah router. Sebagai contoh, Anda bisa menghubungkan 
banyak jaringan, atau jaringan rumah dengan Internet. Mari kita lihat pada sebuah contoh:
</para> 

<figure id="router">
<title>Contoh Router</title>
<mediaobject>
<imageobject>
<imagedata fileref="../../images/router.png" format="PNG" />
</imageobject>
</mediaobject>
</figure>

<para>
Pada contoh terdapat dua jaringan, 192.168.1.0 dan 192.168.2.0. Tiga host terhubung pada kedua jaringan. Salah satu dari host 
ini terhubung ke kedua jaringan dengan beberapa antarmuka. Antarmuka pada jaringan 192.168.1.0 memiliki alamat IP 192.168.1.3, 
antarmuka pada jaringan 192.168.2.0 memiliki alamat IP 192.168.2.3. Jika host bertindak sebagai router antar jaringan, maka 
ia mengirimkan paket dari jaringan 192.168.1.0 ke jaringan 192.168.2.0 dan sebaliknya. Routing dari paket TCP/IP IPv4 normal 
bisa diaktifkan dengan mengaktifkan IPv4 forwarding.
</para>

<para>
IPv4 forwarding bisa diaktifkan atau dinonaktifkan pada Slackware Linux dengan mengubah bit executable dari berkas 
<filename>/etc/rc.d/rc.ip_forward</filename>. Jika bit executable diaktifkan pada berkas ini, IP forwarding akan diaktifkan 
pada saat sistem boot, selain itu, tidak akan diaktifkan. Anda bisa menguji apakah bit executable sudah diaktifkan dengan 
<command>ls -l</command> (deskripsi dari perintah <command>ls</command> bisa ditemukan pada <xref linkend="chap-filesystems-analyzing-listing" />). 
</para>

<para>
Juga mungkin untuk mengaktifkan IPv4 forwarding pada sistem yang berjalan dengan perintah berikut (0 menonaktifkan 
forwarding, 1 mengaktifkan forwarding):
</para>

<screen>
# <command>echo 0 > /proc/sys/net/ipv4/ip_forward</command>
</screen>

<para>
Hati-hati! Secara default, tidak ada filter paket yang aktif. Hal ini berarti bahwa semua orang bisa mengakses jaringan lain. 
Beban bisa difilter dan dicatat dengan filter paket kernel iptables. Iptables bisa dikelola melalui perintah <command>iptables</command>.
NAT (Network Address Translation) juga bagian dari iptables, dan bisa dikontrol dan diaktifkan melalui perintah <command>iptables</command>.
NAT memungkinkan untuk <quote>menyembunyikan</quote> sebuah jaringan dibelakang sebuah alamat IP. Hal ini memungkinkan Anda menggunakan 
Internet pada jaringan yang lengkap hanya dengan satu alamat IP.
</para>
</sect1>

</chapter>
