<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
	 xml:lang="id" xml:id="chap-usermgmt">
  <title>Manajemen Pengguna</title>

  <sect1 xml:id="chap-usermgmt-intro">
    <title>Perkenalan</title>

    <para>
	GNU/LINUX adalah sistem operasi multi pengguna. Ini berarti 
	banyak pengguna dapat menggunakan sistem, dan mereka dapat 
	menggunakan sistem tersebut secara bersamaan. Konsep manajemen 
	pengguna dari GNU/Linux cukup sederhana. Pertama, terdapat 
	beberapa account pengguna pada setiap sistem.Bahkan untuk sistem 
	yang memiliki satu pengguna sekalipun terdapat beberapa account 
	pengguna, karena GNU/Linux menggunakan account yang unik untuk 
	melakukan beberapa tugas. Setiap pengguna dapat menjadi anggota 
	dari sebuah  grup. Grup digunakan untuk untuk perijinan yang 
	lebih luas. Sebagai contoh, Anda dapat membuat berkas yang hanya 
	bisa dibaca oleh grup tertentu. Dalam sebuah sistem terdapat 
	beberapa pengguna dan grup yang namanya telah dialokasikan. 
	Diantara nama pengguna yang dialokasikan tersebut, yang paling	
	penting adalah <emphasis>root</emphasis>. Pengguna 
	<emphasis>root</emphasis> merupakan administrator dari sistem. 
	Adalah hal yang baik  untuk menghindari login sebagai root, 
	karena dengan login sebagai root akan meningkatkan resiko 
	keamanan. Anda dapat login sebagai pengguna biasa, kemudian 
	melakukan pekerjaan administrasi sistem menggunakan perintah 
	<command>su</command> dan perintah <command>sudo</command>
    </para>

    <para>
	Account pengguna yang tersedia diletakkan di 
	<filename>/etc/passwd</filename>. Anda dapat melihat pada berkas
	ini untuk menentukan account pengguna mana yang akan diperintah.
	Satu hal yang perlu dicatat, pada berkas ini tidak disertakan
	password pengguna. Password pengguna dipisah ke  sebuah berkas 
	yang telah dienkripsi yaitu <filename>/etc/shadow</filename>. 
	Informasi untuk grup disimpan di 
	<filename>/etc/group</filename>. Mengubah isi berkas ini secara 
	langsung merupakan ide yang buruk. Terdapat beberapa aplikasi 
	tangguh yang digunakan untuk melakukan administrasi pengguna dan 
	grup. Bab ini akan menjelaskan 	beberapa dari aplikasi tersebut.
    </para>
  </sect1>

  <sect1 xml:id="chap-usermgmt-user">
    <title>Menambah dan mengurangi pengguna</title>

    <sect2 xml:id="chap-usermgmt-user-add">
      <title>useradd</title>

      <para>
	Perintah <command>useradd</command> digunakan untuk menambah 
	account pengguna ke sistem. Menjalankan perintah 
	<command>useradd</command> dengan menambahkan nama pengguna 
	sebagai parameter akan menciptakan pengguna di dalam sistem. 
Contoh:
      </para>

      <screen>
# <userinput>useradd bob</userinput>
      </screen>

      <para>
	Menciptakan account pengguna <emphasis>bob</emphasis>. Untuk 
	Anda ketahui dengan perintah diatas tidak akan menciptakan 
	direktori home untuk pengguna tersebut. Tambahkan parameter 
	<parameter class="command">-m</parameter> parameter untuk 
	menciptakan direktori home. Contoh :
      </para>

      <screen>
# <userinput>useradd -m bob</userinput>
      </screen>

      <para>
	Perintah ini akan menambah pengguna <emphasis>bob</emphasis> ke 
	dalam sistem, dan menciptakan direktori home untuk pengguna ini 
	yaitu <filename>/home/bob</filename>. Normalnya sebuah 
	pengguna langsung  menjadi anggota dari grup 
	<emphasis>users</emphasis>. Misalkan kita ingin mengubah 
	keanggotaan dengan membuat <emphasis>crew</emphasis> menjadi 
	grup primer dari pengguna <emphasis>bob</emphasis>. Hal ini 
	dapat dilakukan dengan 	menambahkan <parameter 
	class="command">-g</parameter> parameter. Contoh:
      </para>

      <screen>
# <userinput>useradd -g crew -m bob</userinput>
      </screen>

      <para>
	Selain itu dimungkinkan juga untuk menambah grup sekunder dalam 
	proses pembuatan account pengguna tersebut dengan dengan 
	menambah opsi <emphasis>-G</emphasis>. Nama-nama grup sekunder 
	lainnya dapat dipisahkan menggunakan koma. Contoh perintah di 
	bawah ini akan membuat pengguna <emphasis>bob</emphasis>, yang 
	memiliki grup primer dari grup<emphasis>crew</emphasis>, dan 
	<emphasis>www-admins</emphasis> dan 
	<emphasis>ftp-admins</emphasis> sebagai grup sekundernya:
      </para>

      <screen>
# <userinput>useradd -g crew -G www-admins,ftp-admins -m bob</userinput>
      </screen>

      <para>
	Secara default perintah <command>useradd</command> hanya membuat 
	pengguna, dan tidak membuat password dalam proses pembuatan 
	pengguna. Password dapat di buat menggunakan perintah 
	<command>passwd</command>
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-passwd">
      <title>passwd</title>

      <para>
	Mungkin Anda telah menebak lebih dulu perintah 
	<command>passwd</command> digunakan untuk mengubah password 
	pengguna. Menjalankan perintah ini sebagai pengguna tanpa 
	memberikan parameter akan mengubah password untuk pengguna 
	tersebut. Perintah password akan menanyakan password lama 
	sekali, kemudian meminta password baru sebanyak dua kali.
      </para>

      <screen>
$ <userinput>passwd</userinput>
Changing password for bob
(current) UNIX password: 
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
      </screen>

      <para>
	pengguna <emphasis>root</emphasis> dapat mengubah password 
	pengguna lainnya dengan menspesifikasikan nama pengguna yang 
ingin diubah passwordnya sebagai parameter. Dalam hal ini perintah 
	<command>passwd</command> hanya akan meminta password yang baru. 
	Contoh :
      </para>

      <screen>
# <userinput>passwd bob</userinput>
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
      </screen>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-adduser">
      <title>adduser</title>

      <para>
	Perintah <command>adduser</command> mengkombinasikan 
	<command>useradd</command> dan <command>passwd</command> dalam 
	sebuah skrip yang interaktif. Skrip ini akan meminta Anda untuk 
	mengisi informasi tentang account yana akan dibuat. Setelah itu 
	skrip ini akan membuat account berdasarkan informasi yang telah 
	Anda berikan. Listing di bawah ini akan menunjukkan contohnya.
      </para>

      <screen>
# <userinput>adduser</userinput>

Login name for new user []: <userinput>john</userinput>

User ID ('UID') [ defaults to next available ]: <userinput>&lt;Enter&gt;</userinput>

Initial group [ users ]: <userinput>&lt;Enter&gt;</userinput>

Additional groups (comma separated) []: <userinput>staff</userinput>

Home directory [ /home/john ] <userinput>&lt;Enter&gt;</userinput>

Shell [ /bin/bash ] <userinput>&lt;Enter&gt;</userinput>

Expiry date (YYYY-MM-DD) []: <userinput>&lt;Enter&gt;</userinput>

New account will be created as follows:

---------------------------------------
Login name.......:  john
UID..............:  [ Next available ]
Initial group....:  users
Additional groups:  [ None ]
Home directory...:  /home/john
Shell............:  /bin/bash
Expiry date......:  [ Never ]

This is it... if you want to bail out, hit Control-C.  Otherwise, press
ENTER to go ahead and make the account.
<userinput>&lt;Enter&gt;</userinput>

Creating new account...


Changing the user information for john
Enter the new value, or press ENTER for the default
        Full Name []: <userinput>John Doe</userinput>
        Room Number []: <userinput>&lt;Enter&gt;</userinput>
        Work Phone []: <userinput>&lt;Enter&gt;</userinput>
        Home Phone []: <userinput>&lt;Enter&gt;</userinput>
        Other []: <userinput>&lt;Enter&gt;</userinput>
Changing password for john
Enter the new password (minimum of 5, maximum of 127 characters)
Please use a combination of upper and lower case letters and numbers.
New password: <userinput>password</userinput>
Re-enter new password: <userinput>password</userinput>


Account setup complete.
      </screen>

      <para>
	Jika Anda ingin menggunakan nilai standar yang disediakan, cukup 
	dengan mengosongkan isian yang diminta, dengan menekan tombol 
	&lt;Enter&gt;
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-userdel">
      <title>userdel</title>

      <para>
	Terkadang adalah hal yang perlu untuk menghapus acount pengguna 
	dari sistem. GNU/Linux menyediakan perintah 
	<command>userdel</command> untuk melakukan hal ini. Sebagai 
	contoh perintah berikut akan menghapus account pengguna 
	<emphasis>bob</emphasis> dari sistem.
      </para>

      <screen>
# <userinput>userdel bob</userinput>
      </screen>

      <para>
	Perintah ini hanya akan menghapus account pengguna, namun tidak 
	direktori home pengguna dan kumpulan email yang diterima. Cukup 
	tambahkan parameter <parameter class="command">-r</parameter> 
	untuk menghapus direktori home pengguna serta kumpulan email 
	yang diterima. Contoh :
      </para>

      <screen>
# <userinput>userdel -r bob</userinput>
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-usermgmt-su">
    <title>Menghindari penggunaan root dengan su</title>

    <para>
	Merupakan ide bagus untuk menghindari login sebagai 
	<emphasis>root</emphasis>. Ada banyak alasan untuk tidak 
	melakukan hal ini. Mengetik perintah yang salah secara tidak 
	sengaja dapat berakibat terjadi hal yang tidak diinginkan, dan 
	program yang salah berpotensi untuk melakukan banyak kerusakan 
	ketika kita login sebagai <emphasis>root</emphasis>. Akan 
	tetapi, terdapat beberapa situasi yang membutuhkan akses root. 
	Sebagai contoh, untuk melakukan administrasi sistem, atau 
	menginstal program baru. Untungnya perintah <command>su</command> 
	dapat memberikan anda hak akses root untuk sementara.
    </para>

    <para>
	Menggunakan perintah <command>su</command> sangat sederhana/ 
	Cukup dengan mengeksekusi perintah <command>su</command>, 
	kemudian Anda akan ditanyakan password root. Setelah password 
	dimasukkan dengan benar, maka anda akan memulai shell dengan 
	hak akses root.
    </para>

    <screen>
$ <userinput>whoami</userinput>
bob
$ <userinput>su</userinput>
Password: 
# <userinput>whoami</userinput>
root
# <userinput>exit</userinput>
exit
$ <userinput>whoami</userinput>
bob
    </screen>

    <para>
	Pada contoh ini pengguna login sebagai <emphasis>bob</emphasis>. 
	Keluaran perintah <command>whoami</command> merefleksikan hal 
	ini. Pengguna mengeksekusi su dan memasukkan password 
	<emphasis>root</emphasis>. Perintah <command>su</command> 
	menjalankan sheel dengan hak akses root, hal ini dikonfirmasikan 
	oleh keluaran perintah <command>whoami</command>. Setelah keluar 
	dari shell <emphasis>root</emphasis>, kendali shell akan kembali 
	ke pengguna sebelumnya yaitu <emphasis>bob</emphasis>.
    </para>

    <para>
	Dalam hal ini memungkinkan juga untuk mengeksekusi satu perintah 
	sebagai <emphasis>root</emphasis> dengan parameter <parameter 
	class="command">-c</parameter>. Berikut ini adalah contoh 
	menjalankan perintah <emphasis>lilo</emphasis>:
    </para>

    <screen>
$ <userinput>su -c lilo</userinput>
    </screen>

    <para>
	Jika Anda ingin memberikan parameter pada perintah yang ingin 
	anda jalankan, gunakan tanda kutip (contoh <command>su -c &quot; 
	ls -l /&quot;</command>). Tanpa tanda petik <command>su</command> 
	tidak dapat mengenali apakah parameter tersebut akan digunakan 
	oleh perintah tertentu, atau oleh <command>su</command> itu 
	sendiri
    </para>

    <sect2 xml:id="chap-usermgmt-su-restrict">
      <title>Membatasi hak akses su</title>

      <para>
	Anda dapat menyaring akses ke <command>su</command> dengan 
	<emphasis>suauth</emphasis>.Hal ini merupakan latihan keamanan 
	yang bagus dengan hanya mengijinkan anggota dari grup tertentu 
	untuk melakukan <command>su</command> ke 
	<emphasis>root</emphasis>. Sebagai contoh, Anda dapat 
	memembatasi perintah <command>su</command> ke root dengan gaya 
	BSD yang hanya  membolehkan anggota dari grup 
	<emphasis>wheel</emphasis> dengan menambahkan baris berikut ke 
	<filename>/etc/suauth</filename>:
      </para>

      <screen>
root:ALL EXCEPT GROUP wheel:DENY
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-usermgmt-quota">
    <title>Kuota disk</title>

    <sect2 xml:id="chap-usermgmt-quota-intro">
      <title>Perkenalan</title>

      <para>
	Kuota disk adalah mekanisme yang mengijinkan administrator 
	sistem untuk membatasi jumlah blok disk dan node yang boleh 
	digunakan oleh pengguna dan grup tertentu. Tidak semua sistem 
	berkas yang didukung linux mendukung kuota. Secara luas sistem 
	berkas yang mendukung kuota adalah ext2. ext3 dan XFS. Kuota 
	diaktifkan dan diatur dalam tiap dasar sistem berkas.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-config">
      <title>Mengaktifkan kuota</title>

      <para>
	Kuota dapat diaktifkan di tiap sistem berkas dalam 
	<filename>/etc/fstab</filename>, dengan  menambahkan opsi pada 
	sistem berkas yaitu <parameter>usrquota</parameter> dan 
	<parameter>grpquota</parameter>. Misalkan kita memiliki catatan 
	berikut untuk partisi <filename>/home</filename> di 
	<filename>/etc/fstab</filename>:
      </para>

      <screen>
/dev/hda8        /home            xfs         defaults         1   2
      </screen>

      <para>
	Kini kita dapat mengaktifkan kuota pengguna dengan menambahkan 
	<parameter>usrquota</parameter> pada opsi sistem berkas :
      </para>

      <screen>
/dev/hda8        /home            xfs         defaults<emphasis role="bold">,usrquota</emphasis> 1   2
      </screen>

      <para>
	Pada titik ini, mesin dapat direboot untuk membiarkan Slackware 
	Linux menginisialisasi skrip yang mengaktifkan kuota. Anda juga 
	dapat mengaktifkan kuota tanpa harus mereboot mesin, dengan 
	melakukan mount ulang partisi, dan menjalankan perintah 
	<command>quotaon</command>:
      </para>

      <screen>
# <userinput>mount -o remount /home</userinput>
# <userinput>quotaon -avug</userinput>
      </screen>
    </sect2>

    <sect2 xml:id="chap-usermgmt-quota-edit">
      <title>Mengedit kuota</title>

      <para>
	Kuota pengguna dan grup dapat diedit menggunakan fasilitas 
	<quote>edquota</quote>. Program ini memungkinkan anda untuk 
	mengedit kuota secara interaktif dengan editor 
	<command>vi</command>. Sintaks yang paling dasar dari perintah 
	ini adalah <command>edquota username</command>. Sebagai contoh:
      </para>

      <screen>
# <userinput>edquota joe</userinput>
      </screen>

      <para>
	Perintah ini akan menjalankan editor <command>vi</command> 
	dengan informasi kuota untuk pengguna <emphasis>joe</emphasis>. 
	Hal ini akan tampak seperti di bawah ini:
      </para>

      <screen>
Disk quotas for user joe (uid 1143):
  Filesystem                   blocks       soft       hard     inodes     soft    hard
  /dev/hda5                      2136          0          0         64        0       0
      </screen>

      <para>
	Dalam contoh ini kuota hanya diaktifkan untuk satu sistem 
	berkas, yaitu pada sistem berkas di 
	<filename>/dev/hda5</filename>. Sebagaimana yang Anda lihat 
	disana terdapat banyak kolom. Kolom <emphasis>blocks</emphasis> 
	menunjukkan banyak blok yang digunakan pengguna dalam sistem 
	berkas, dan kolom <emphasis> inodes</emphasis> menunjukkan nomor 
	inode yang ditinggali oleh pengguna. Disamping itu terdapat 
	kolom <emphasis>soft</emphasis> dan <emphasis>hard </emphasis> 
	setelah kolom <emphasis>blocks</emphasis> dan 
	<emphasis>inodes</emphasis>. Kolom ini menentukan batas soft dan 
	batas hard dalam blok dan inode. Pengguna dapat melewati batas 
	soft pada periode perpanjangan yang ditentukan, tetapi pengguna 
	tidak akan pernah melewati batas hard. Jika jumlah limit adalah 
	<emphasis>0</emphasis>, maka tidak akan ada limit. 
      </para>

      <note>
	<para>
	Istilah <quote>blok</quote> mungkin agak membingungkan dalam 
	konteks ini. Dalam konfigurasi kuota satu blok adalah 1KB, bukan 
	jumlah ukuran satu blok dalam sistem berkas.
        </para>
      </note>

      <para>
	Mari kita lihat contoh sederhana. Misalkan kita ingin menentukan 
	batas soft untuk pengguna <emphasis>joe</emphasis> menjadi 
	<emphasis>250000</emphasis>, dan limit hard ke 
	<emphasis>300000</emphasis>. Kita dapat mengubah contoh daftar 
	kuota contoh diatas menjadi:
      </para>

      <screen>
Disk quotas for user joe (uid 1143):
  Filesystem                   blocks       soft       hard     inodes     soft    hard
  /dev/hda5                      2136     <emphasis role="bold">250000</emphasis>     <emphasis role="bold">300000</emphasis>         64        0       0
      </screen>

      <para>
	Kuota yang baru untuk pengguna ini akan aktif setelah berkas 
	disimpan, dan keluar dari <command>vi</command>.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-quota-repquota">
      <title>Mendapatkan informasi tentang kuota</title>

      <para> 
	Seringkali merupakan hal yang berguna mendapatkan statistik 
	terbaru tentang penggunaan kuota. Perintah 
	<command>repquota</command> dapat digunakan untuk mendapatkan 
	informasi tentang kuota apa saja yang ditentukan untuk tiap 
	pengguna, dan berapa banyak kuota yang telah digunakan. Anda 
	dapat melihat konfigurasi kuota untuk partisi tertentu dengan 
	memberikan nama partisi sebagai parameter. Parameter <parameter 
	class="command">-a</parameter> akan menunjukkan informasi untuk 
	semua partisi yang koutanya diaktifkan. Misalkan Anda ingin 
	melihat informasi kuota untuk <filename>/dev/hda5</filename>, 
	anda dapat menggunakan perintah berikut:
      </para>

      <screen>
# <userinput>repquota /dev/hda5</userinput>
*** Report for user quotas on device /dev/hda5
Block grace time: 7days; Inode grace time: 7days
                        Block limits                File limits
User            used    soft    hard  grace    used  soft  hard  grace
----------------------------------------------------------------------
root      --       0       0       0              3     0     0       
[..]
joe       --    2136  250000  300000             64     0     0       
[..]
      </screen>
    </sect2>
  </sect1>
</chapter>
