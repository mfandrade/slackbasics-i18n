<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
	 xml:lang="id" xml:id="chap-usermgmt">
  <title>Manajemen User</title>

  <sect1 xml:id="chap-usermgmt-intro">
    <title>Perkenalan</title>

    <para>
	GNU/LINUX adalah sistem operasi multi-user. Ini berarti banyak
	User dapat menggunakan sistem, dan mereka dapat menggunakan sistem
	tersebut secara bersama.Konsep manajemen pengguna dari GNU/Linux 
	cukup sederhana.Pertama, terdapat beberapa account user pada setiap
	sistem.Bahkan untuk sistem yang memiliki satu user sekalipun terdapat 
	beberapa account user,karena GNU/Linux menggunakan account yang unik 
	untuk melakukan beberapa tugas.Setiap user dapat menjadi anggota dari
	sebuah  grup. Grup digunakan untuk untuk perijinan yang lebih luas.
	Sebagai contoh, anda dapat membuat file yang hanya bisa dibaca oleh 
	grup tertentu.Dalam sebuah sistem terdapat beberapa user dan grup 
	yang namanya telah dialokasikan. Diantara user yang dialokasikan 
	tersebut yang paling	penting adalah <emphasis>root</emphasis>. 
	User <emphasis>root</emphasis> merupakan administrator dari sistem.
	Adalah ide bagus untuk menghindari login sebagai root, karena dengan
	login sebagai root akan meningkatkan resiko keamanan. Anda dapat login
	sebagai user biasa, kemudian melakukan pekerjaan administrasi sistem 
	menggunakan perintah <command>su</command> dan perintah <command>sudo
	</command>
    </para>

    <para>
	Account user yang tersedia diletakkan di
        <filename>/etc/passwd</filename>. Anda dapat melihat pada file
        ini untuk menentukan account user mana yang akan diperintah.
        Satu hal yang perlu dicatat, pada file ini tidak menyertakan
        password user. Password user dipisah ke  sebuah file yang telah
        dienkripsi yaitu <filename>/etc/shadow</filename>.Informasi
	untuk grup disimpan di <filename>/etc/group</filename>. Mengubah 
	isi file ini secara langsung secara umum merupakan ide yang 
	buruk. Terdapat beberapa aplikasi tangguh yang digunakan untuk 
	melakukan administrasi user dan grup. Bab ini akan menjelaskan 
	beberapa dari aplikasi tersebut.
    </para>
  </sect1>

  <sect1 xml:id="chap-usermgmt-user">
    <title>Menambah dan mengurangi user</title>

    <sect2 xml:id="chap-usermgmt-user-add">
      <title>useradd</title>

      <para>
	Perintah <command>useradd</command> digunakan untuk menambah 
	account user ke sistem. Menjalankan perintah 
	<command>useradd</command> dengan menambahkan nama user sebagai 
	parameter akan menciptakan user di dalam sistem. Contoh:
      </para>

      <screen>
# <userinput>useradd bob</userinput>
      </screen>

      <para>
	Menciptakan account user <emphasis>bob</emphasis>. Untuk anda 
	ketahui dengan perintah diatas tidak akan menciptakan direktori 
	home untuk user tersebut. Tambahkan parameter <parameter 
	class="command">-m</parameter> parameter untuk menciptakan 
	direktori home. Contoh :
      </para>

      <screen>
# <userinput>useradd -m bob</userinput>
      </screen>

      <para>
	Perintah ini akan menambah user <emphasis>bob</emphasis> ke 
	dalam sistem, dan menciptakan direktori home untuk user ini 
	yaitu <filename>/home/bob</filename>. Normalnya sebuah 
	user langsung  menjadi anggota dari grup <emphasis>users</emphasis>. 
	Misalkan kita ingin mengubah keanggotaan dengan membuat 
	<emphasis>crew</emphasis> menjadi grup primer dari user 
	<emphasis>bob</emphasis>. Hal ini dapat dilakukan dengan 
	menambahkan <parameter class="command">-g</parameter> parameter. 
	Contoh:
      </para>

      <screen>
# <userinput>useradd -g crew -m bob</userinput>
      </screen>

      <para>
	Selain itu dimungkinkan juga untuk menambah grup sekunder dalam 
	proses pembuatan account user tersebut dengan dengan menambah opsi 
	<emphasis>-G</emphasis>. Nama-nama grup sekunder lainnya dapat 
	dipisahkan menggunakan koma. Contoh perintah di bawah ini akan 
	membuat user <emphasis>bob</emphasis>, yang memiliki grup primer 
	dari grup<emphasis>crew</emphasis>, dan 
	<emphasis>www-admins</emphasis> dan 
	<emphasis>ftp-admins</emphasis> sebagai grup sekundernya:
      </para>

      <screen>
# <userinput>useradd -g crew -G www-admins,ftp-admins -m bob</userinput>
      </screen>

      <para>
	Secara default perintah <command>useradd</command> hanya membuat 
	user, dan tidak membuat password dalam proses pembuatan user. 
	Password dapat di buat menggunakan perintah 
	<command>passwd</command>
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-passwd">
      <title>passwd</title>

      <para>
	Mungkin anda telah menebak lebih dulu perintah 
	<command>passwd</command> digunakan untuk mengubah password 
	user. Menjalankan perintah ini sebagai user tanpa memberikan 
	parameter akan mengubah password untuk user tersebut. Perintah 
	password akan menanyakan password lama sekali, kemudian meminta 
	password baru sebanyak dua kali.
      </para>

      <screen>
$ <userinput>passwd</userinput>
Changing password for bob
(current) UNIX password: 
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
      </screen>

      <para>
	user <emphasis>root</emphasis> dapat mengubah password user-user 
	lainnya dengan menspesifikasikan nama user yang ingin diubah 
	passwordnya sebagai parameter. Dalam hal ini perintah 
	<command>passwd</command> hanya akan meminta password yang baru. 
	Contoh :
      </para>

      <screen>
# <userinput>passwd bob</userinput>
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
      </screen>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-adduser">
      <title>adduser</title>

      <para>
	Perintah <command>adduser</command> mengkombinasikan 
	<command>useradd</command> dan <command>passwd</command> dalam 
	sebuah skrip yang interaktif. Skrip ini akan meminta anda untuk 
	mengisi informasi tentang account yana akan dibuat. Setelah itu 
	skrip ini akan membuat account berdasarkan informasi yang telah 
	anda berikan. Listing di bawah ini akan menunjukkan contohnya.
      </para>

      <screen>
# <userinput>adduser</userinput>

Login name for new user []: <userinput>john</userinput>

User ID ('UID') [ defaults to next available ]: <userinput>&lt;Enter&gt;</userinput>

Initial group [ users ]: <userinput>&lt;Enter&gt;</userinput>

Additional groups (comma separated) []: <userinput>staff</userinput>

Home directory [ /home/john ] <userinput>&lt;Enter&gt;</userinput>

Shell [ /bin/bash ] <userinput>&lt;Enter&gt;</userinput>

Expiry date (YYYY-MM-DD) []: <userinput>&lt;Enter&gt;</userinput>

New account will be created as follows:

---------------------------------------
Login name.......:  john
UID..............:  [ Next available ]
Initial group....:  users
Additional groups:  [ None ]
Home directory...:  /home/john
Shell............:  /bin/bash
Expiry date......:  [ Never ]

This is it... if you want to bail out, hit Control-C.  Otherwise, press
ENTER to go ahead and make the account.
<userinput>&lt;Enter&gt;</userinput>

Creating new account...


Changing the user information for john
Enter the new value, or press ENTER for the default
        Full Name []: <userinput>John Doe</userinput>
        Room Number []: <userinput>&lt;Enter&gt;</userinput>
        Work Phone []: <userinput>&lt;Enter&gt;</userinput>
        Home Phone []: <userinput>&lt;Enter&gt;</userinput>
        Other []: <userinput>&lt;Enter&gt;</userinput>
Changing password for john
Enter the new password (minimum of 5, maximum of 127 characters)
Please use a combination of upper and lower case letters and numbers.
New password: <userinput>password</userinput>
Re-enter new password: <userinput>password</userinput>


Account setup complete.
      </screen>

      <para>
	Jika anda ingin menggunakan nilai standar yang disediakan, cukup 
	dengan mengosongkan isian yang diminta, dengan menekan tombol 
	&lt;Enter&gt;
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-user-userdel">
      <title>userdel</title>

      <para>
	Terkadang adalah hal yang perlu untuk menghapus acount user dari 
	sistem. GNU/Linux menyediakan perintah 
	<command>userdel</command> untuk melakukan hal ini. Sebagai 
	contoh perintah berikut akan menghapus account user 
	<emphasis>bob</emphasis> dari sistem.
      </para>

      <screen>
# <userinput>userdel bob</userinput>
      </screen>

      <para>
	Perintah ini hanya akan menghapus account user, namun tidak 
	direktori home user dan kumpulan email yang diterima. Cukup 
	tambahkan parameter <parameter class="command">-r</parameter> 
	untuk menghapus direktori home user serta kumpulan email yang 
	diterima. Contoh :
      </para>

      <screen>
# <userinput>userdel -r bob</userinput>
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-usermgmt-su">
    <title>Avoiding root usage with su</title>

    <para>
      It is a good idea to avoid logging in as
      <emphasis>root</emphasis>. There are many reasons for not doing
      this. Accidentally typing a wrong command could cause bad things
      to happen, and malicious programs can make a lot of damage when
      you are logged in as <emphasis>root</emphasis>.  Still, there
      are many situations in which you need to have root access. For
      example, to do system administration, or to install new
      software. Fortunately the <command>su</command> can give you
      temporal root privileges.
    </para>

    <para>
      Using <command>su</command> is very simple. Just executing
      <command>su</command> will ask you for the root password, and
      will start a shell with root privileges after the password is
      correctly entered:
    </para>

    <screen>
$ <userinput>whoami</userinput>
bob
$ <userinput>su</userinput>
Password: 
# <userinput>whoami</userinput>
root
# <userinput>exit</userinput>
exit
$ <userinput>whoami</userinput>
bob
    </screen>

    <para>
      In this example the user <emphasis>bob</emphasis> is logged on,
      the <command>whoami</command> output reflects this. The user
      executes su and enters the <emphasis>root</emphasis>
      password. <command>su</command> launches a shell with root
      privileges, this is confirmed by the <command>whoami</command>
      output. After exiting the <emphasis>root</emphasis> shell,
      control is returned to the original running shell running with
      the privileges of the user <emphasis>bob</emphasis>.
    </para>

    <para>
      It is also possible to execute just one command as the
      <emphasis>root</emphasis> user with the <parameter
      class="command">-c</parameter> parameter. The following example
      will run <command>lilo</command>:
    </para>

    <screen>
$ <userinput>su -c lilo</userinput>
    </screen>

    <para>
      If you want to give parameters to the command you would like to
      run, use quotes (e.g. <command>su -c &quot;ls -l
      /&quot;</command>). Without quotes <command>su</command> cannot
      determine whether the parameters should be used by the specified
      command, or by <command>su</command> itself.
    </para>

    <sect2 xml:id="chap-usermgmt-su-restrict">
      <title>Restricting su access</title>

      <para>
	You can refine access to <command>su</command> with
	<emphasis>suauth</emphasis>.  It is a good security practice
	to only allow members of a special group to
	<command>su</command> to <emphasis>root</emphasis>. For
	instance, you can restrict root <command>su</command>-ing in a
	BSD fashion to members of the <emphasis>wheel</emphasis> group
	by adding the following line to
	<filename>/etc/suauth</filename>:
      </para>

      <screen>
root:ALL EXCEPT GROUP wheel:DENY
      </screen>
    </sect2>
  </sect1>

  <sect1 xml:id="chap-usermgmt-quota">
    <title>Disk quota</title>

    <sect2 xml:id="chap-usermgmt-quota-intro">
      <title>Introduction</title>

      <para>
	Disk quota is a mechanism that allows the system administrator
	to restrict the number of disk blocks and inodes that a
	particular user and group can use. Not all filesystems
	supported by Linux support quota, widely used filesystems that
	support quota are ext2, ext3 and XFS. Quota are turned on and
	managed on a per filesystem basis.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-config">
      <title>Enabling quota</title>

      <para>
	Quota can be enabled per filesystem in
	<filename>/etc/fstab</filename>, by using the
	<parameter>usrquota</parameter> and
	<parameter>grpquota</parameter> filesystem options. For
	example, suppose that we have the following entry for the
	<filename>/home</filename> partition in
	<filename>/etc/fstab</filename>:
      </para>

      <screen>
/dev/hda8        /home            xfs         defaults         1   2
      </screen>

      <para>
	We can now enable user quota by adding the
	<parameter>usrquota</parameter> filesystem option:
      </para>

      <screen>
/dev/hda8        /home            xfs         defaults<emphasis role="bold">,usrquota</emphasis> 1   2
      </screen>

      <para>
	At this point the machine can be rebooted, to let the
	Slackware Linux initialization scripts enable quota. You can
	also enable quota without rebooting the machine, by remounting
	the partition, and running the <command>quotaon</command>
	command:
      </para>

      <screen>
# <userinput>mount -o remount /home</userinput>
# <userinput>quotaon -avug</userinput>
      </screen>
    </sect2>

    <sect2 xml:id="chap-usermgmt-quota-edit">
      <title>Editing quota</title>

      <para>
	User and group quotas can be edited with the
	<quote>edquota</quote> utility. This program allows you to
	edit quotas interactively with the <command>vi</command>
	editor. The most basic syntax of this command is
	<command>edquota username</command>. For example:
      </para>

      <screen>
# <userinput>edquota joe</userinput>
      </screen>

      <para>
	This will launch the <command>vi</command> editor with the
	quota information for the user <emphasis>joe</emphasis>.  It
	will look like this:
      </para>

      <screen>
Disk quotas for user joe (uid 1143):
  Filesystem                   blocks       soft       hard     inodes     soft    hard
  /dev/hda5                      2136          0          0         64        0       0
      </screen>

      <para>
	In this example quotas are only turned on for one file system,
	namely the filesystem on <filename>/dev/hda5</filename>. As
	you can see there are multiple columns. The
	<emphasis>blocks</emphasis> column shows how many block the
	user uses on the file system, and the
	<emphasis>inodes</emphasis> column the number of inodes a user
	occupies. Besides that there are <emphasis>soft</emphasis> and
	<emphasis>hard</emphasis> columns after both
	<emphasis>blocks</emphasis> and
	<emphasis>inodes</emphasis>. These columns specify the soft
	and hard limits on blocks and inodes. A user can exceed the
	soft limit for a grace period, but the user can never exceed
	the hard limit. If the value of a limit is
	<emphasis>0</emphasis>, there is no limit.
      </para>

      <note>
	<para>
          The term <quote>blocks</quote> might be a bit confusing in
          this context. In the quota settings a block is 1KB, not the
          block size of the file system.
        </para>
      </note>

      <para>
	Let's look at a simple example. Suppose that we would like to
	set the soft limit for the user <emphasis>joe</emphasis> to
	<emphasis>250000</emphasis>, and the hard limit to
	<emphasis>300000</emphasis>. We could change the quotas listed
	above to:
      </para>

      <screen>
Disk quotas for user joe (uid 1143):
  Filesystem                   blocks       soft       hard     inodes     soft    hard
  /dev/hda5                      2136     <emphasis role="bold">250000</emphasis>     <emphasis role="bold">300000</emphasis>         64        0       0
      </screen>

      <para>
        The new quota settings for this user will be active after
        saving the file, and quitting <command>vi</command>.
      </para>
    </sect2>

    <sect2 xml:id="chap-usermgmt-quota-repquota">
      <title>Getting information about quota</title>

      <para> 
	It is often useful to get statistics about the current quota
	usage.  The <command>repquota</command> command can be used to
	get information about what quotas are set for every user, and
	how much of each quota is used. You can see the quota settings
	for a specific partition by giving the name of the partition
	as a parameter. The <parameter class="command">-a</parameter>
	parameter will show quota information for all partitions with
	quota enabled. Suppose that you would like to see quota
	information for <filename>/dev/hda5</filename>, you can use
	the following command:
      </para>

      <screen>
# <userinput>repquota /dev/hda5</userinput>
*** Report for user quotas on device /dev/hda5
Block grace time: 7days; Inode grace time: 7days
                        Block limits                File limits
User            used    soft    hard  grace    used  soft  hard  grace
----------------------------------------------------------------------
root      --       0       0       0              3     0     0       
[..]
joe       --    2136  250000  300000             64     0     0       
[..]
      </screen>
    </sect2>
  </sect1>
</chapter>
