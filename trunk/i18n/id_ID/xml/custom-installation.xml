<chapter id="getstarted-custominstall"> <?dbhtml filename="custom-installation.html" ?>
  <title>Modifikasi Installasi</title>

  <para>
    Seringkali Anda hendak melakukan modifikasi terhadap installasi Slackware Linux,
    misalnya untuk memahami bagaimana sistem GNU/Linux bekerja, atau mempersiapkan
    script installasi otomatis. Bab ini membahas langkah-langkah yang diperlukan untuk 
    menginstall Slackware Linux secara manual. Sebuah contoh script installasi juga 
    disediakan pada <xref
    linkend="getstarted-custominstall-script" />.
  </para>

  <sect1 id="getstarted-custominstall-partition">
    <title>Mempartisi hard disk</title>

    <para>
      Jika Anda sudah melakukan installasi manual, Anda tidak akan mengalami masalah 
      dalam mempartisi hard disk. Anda bisa menggunakan perintah 
      <command>fdisk</command> dan <command>cfdisk</command>
      untuk mempartisi disk. Jika Anda membuat script installasi Slackware Linux, maka 
      akan berguna untuk diketahui bahwa Anda bisa menggunakan pipe untuk perintah 
      <command>fdisk</command> ke <command>fdisk</command>. Sebagai contoh:
    </para>

    <screen>
# <command>fdisk /dev/hda &lt;&lt; EOF
n
p
1

+10000M
n
p
2

+512M
t
2
82
w
EOF</command>
    </screen>

    <para>
      Perintah-perintah ini menghasilkan partisi Linux utama sebesar 10000MB, dan 
      partisi swap Linux utama sebesar 512MB. Anda bisa menyimpan perintah 
      <command>fdisk</command> pada profil disk yang berbeda dan menggunakan salah satu 
      profil sesuai kondisi tertentu (misalnya ukuran disk). Sebagai contoh:
    </para>

    <screen>
# <command>cat /usr/share/fdisk-profiles/smalldisk | fdisk</command>
    </screen>
  </sect1>

  <sect1 id="getstarted-custominstall-initfs">
    <title>Menginisialisasi dan me-mount sistem berkas</title>

    <para>
      Setelah membuat minimal partisi swap dan Linux, Anda bisa menginisialisasi sistem berkas dan
      ruang swap dan menggunakan ruang penyimpanan ini. Pada sistem dengan jumlah memory 
      yang terbatas, Anda harus menginisialisasi dan menggunakan swap terlebih dahulu. Kita
      akan menggunakan layout partisi yang digunakan pada contoh diatas pada contoh berikutnya. Untuk
      melakukan setting dan menggunakan swap, jalankan:
    </para>

    <screen>
# <command>mkswap /dev/hda2</command>
# <command>swapon /dev/hda2</command>
    </screen>

    <para>
      Arti dari perintah diatas cukup jelas. <command>mkswap</command>
      menginisialisasi ruang space, dan <command>swapon</command> menggunakannya. Anda hanya perlu 
      menjalankan <command>mkswap</command> satu kali, tetapi <command>swapon</command> harus dijalankan 
      setiap kali sistem dijalankan. Hal ini bisa dilakukan secara otomatis dengan menambahkan sebuah entri 
      untuk partisi swap pada <filename>/etc/fstab</filename>, yang akan kita lakukan nanti.
    </para>

    <para>
      Untuk saat ini, sangatlah penting untuk menginisialisasi partisi target. Hal ini bisa dilakukan dengan
      perintah <command>mkfs</command>. Anda bisa menentukan sistem berkas yang akan digunakan dengan 
      menambahkan parameter <parameter class="command">-t</parameter>. <command>mkfs</command>
      akan memanggil perintah <command>mkfs.filesystem</command> secara otomatis sesuai dengan sistem berkas
      yang Anda pilih. Hati-hati bahwa sistem berkas yang dapat digunakan tergantung dari kernel installasi yang
      Anda gunakan. Jika Anda menggunakan kernel <emphasis>bare.i</emphasis>, Anda bisa menggunakan sistem
      berkas <emphasis>ext2</emphasis>, <emphasis>ext3</emphasis> dan <emphasis>reiserfs</emphasis>.
    </para>

    <para>
      Untuk menginisialisasi sistem berkas <emphasis>ext3</emphasis>, dan melakukan proses mount, Anda harus 
      menjalankan perintah berikut:
    </para>

    <screen>
# <command>mkfs -t ext3 /dev/hda1</command>
# <command>mount /dev/hda1 /mnt</command>
    </screen>

    <para>
      Jika Anda sudah menyediakan partisi yang terpisah untuk beberapa direktori tertentu pada sistem berkas
      root, misalnya <filename>/home</filename>, Anda bisa melakukan inisialisasi dan melakukan proses mount
      saat ini. Sebagai contoh:
    </para>

    <screen>
# <command>mkfs -t ext3 /dev/hda2</command>
# <command>mkdir /mnt/home</command>
# <command>mount /dev/hda2 /mnt/home</command>
    </screen>

    <para>
      Akhirnya, Anda harus melakukan mount terhadap media sumber Anda. Jika Anda menggunakan CD-ROM, hal ini 
      sangatlah mudah. Misalkan <filename>/dev/hdc</filename> adalah berkas untuk CD-ROM, Anda bisa melakukan
      mount CD-ROM dengan:
    </para>

    <screen>
# <command>mount /dev/hdc /var/log/mount</command>
    </screen>

    <para>
      Menggunakan NFS sebagai media installasi membutuhkan beberapa langkah tambahan.
      Pertama, Anda harus memuat disk jaringan. Anda bisa melakukannya dengan menjalankan 
      perintah <command>network</command> dan memasukkan disk jaringan. Anda bisa memuat disk ini 
      dari media lain, misalnya dari memori USB. Misalnya Anda telah melakukan mount dari memori USB
      pada /var/log/mount, Anda bisa memuat disk jaringan dengan: <command>network
      /var/log/mount/network.dsk</command>. Setelah memuat disk jaringan, Anda harus mengkonfigurasi
      antarmuka jaringan. Jika server NFS berada pada jaringan yang sama, Anda hanya perlu memberikan
      alamat IP pada antarmuka jaringan. Misalnya, untuk menggunakan alamat  <emphasis>192.168.2.201</emphasis>, 
      Anda bisa menjalankan perintah berikut:
    </para>

    <screen>
# <command>ifconfig eth0 192.168.2.201</command>
    </screen>

    <para>
      Anda bisa memuat portmapper, yang diperlukan agar klien NFS bisa bekerja dengan benar:
    </para>

    <screen>
# <command>/sbin/rpc.portmap</command>
    </screen>

    <para>
      Jika portmapper berjalan dengan baik, Anda bisa melakukan mount terhadap isi NFS. Tetapi, pastikan Anda sudah 
      melakukan unmount semua sistem berkas yang Anda mount pada <filename>/var/log/mount</filename>. Jika tidak 
      ada sistem berkas lain yang di-mount pada <filename>/var/log/mount</filename>, Anda bisa melanjutkan dengan 
      me-mount isi NFS. Misalnya Anda hendak me-mount <emphasis>192.168.2.1:/home/pub/slackware-current</emphasis>,
      Anda harus menjalankan perintah berikut:
    </para>

    <screen>
# <command>mount -r -t nfs -o nolock 192.168.2.1:/home/pub/slackware-current /var/log/mount</command>
    </screen>

    <para>
      Jika tidak ada kesalahan yang dicetak ketika isi di-mount, maka isi akan dapat diakses melalui <filename>/var/log/mount</filename>
    </para>
  </sect1>

  <sect1 id="getstarted-custominstall-packages">
    <title>Menginstal paket-paket</title>

    <para>
      Semua sudah siap untuk memulai menginstall paket-paket dari media installasi.
      Karena <command>installpkg</command> tersedia dari sistem installasi, Anda bisa menggunakannya
      untuk menginstall paket-paket Slackware Linux. Untuk menginstall paket-paket pada partisi target yang 
      di-mount pada <filename>/mnt</filename>, tambahkan opsi <parameter class="command">-root</parameter>. 
      Perintah berikut akan menginstall semua paket dari media sumber:
    </para>

    <screen>
# <command>installpkg -root /mnt /var/log/mount/slackware/*/*.tgz</command>
    </screen>

    <para>
      Jika Anda telah membuat berkas tag untuk mendefinisikan paket-paket mana yang 
      harus diinstall, maka Anda bisa menggunakannya sekarang (berkas tag dijelaskan pada 
      <xref linkend="chap-pkgmgmt-tagfiles" />). Misalkan Anda telah menyimpan berkas tag 
      untuk setiap set disk pada <filename>/usr/share/tagfiles/small-desktop</filename>, 
      Anda bisa menginstall paket-paket berdasarkan berkas tag dengan cara berikut:
    </para>

    <screen>
# <command>for p in a ap d e f k kde kdei l n t tcl x xap y; do
   installpkg -infobox -root /mnt \
     -tagfile /usr/share/tagfiles/small-desktop/$p/tagfile \
     /var/log/mount/slackware/$p/*.tgz
done</command>
    </screen>
  </sect1>

  <sect1 id="getstarted-custominstall-config">
    <title>Konfigurasi pasca-installasi</title>

    <para>
      Bagian berikutnya menjelaskan konfigurasi minimal yang diperlukan untuk menjalankan sistem.
    </para>

    <sect2 id="getstarted-custominstall-config-fstab">
      <title>fstab</title>

      <para>
        Salah satu langkah konfigurasi penting adalah membuat berkas <command>fstab</command>, 
	sehingga sistem bisa mencari partisi atau isi apa yang harus di-mount. Format dari berkas 
	<filename>/etc/fstab</filename> dijelaskan pada <xref linkend="basics-filesystem-mounting-fstab" />.
        Pada batas minimal Anda harus menambahkan isian untuk sistem berkas <filename>/</filename>, 
	sistem berkas pseudo <filename>/proc</filename>, <filename>devpts</filename>, dan partisi swap.
      </para>

      <para>
        Dengan contoh partisi yang digunakan di awal bab ini, Anda bisa membuat <filename>/etc/fstab</filename> seperti ini:
      </para>

      <screen>
# <command> cat &gt; /mnt/etc/fstab &lt;&lt; EOF
/dev/hda2	 swap             swap        defaults         0   0
/dev/hda1        /                ext3        defaults         1   1
devpts           /dev/pts         devpts      gid=5,mode=620   0   0
proc             /proc            proc        defaults         0   0
EOF</command>
      </screen>
    </sect2>

    <sect2 id="getstarted-custominstall-lilo">
      <title>LILO</title>

      <para>
        Untuk membuat sistem dapat di-boot Anda harus mengkonfigurasi dan menginstall
        Linux Loader (LILO). Konfigurasi dari LILO dibahas pada <xref linkend="chap-init-lilo" />. 
	Untuk bagian ini kita hanya akan menunjukan contoh konfigurasi LILO, yang bisa digunakan untuk 
	skema partisi yang dijelaskan pada bab ini. Langkah pertama adalah membuat berkas 
	<filename>/etc/lilo.conf</filename>:
      </para>

      <screen>
# <command>cat &gt; /mnt/etc/lilo.conf &lt;&lt; EOF
boot = /dev/hda
vga = normal
timeout = 50
image = /boot/vmlinuz
	root = /dev/hda1
	label = Slackware
	read-only
EOF</command>
      </screen>

      <para>
        Anda bisa menginstall LILO dengan <filename>/mnt</filename> sebagai induk LILO. Dengan 
	<filename>/mnt</filename> sebagai induk, LILO akan menggunakan <filename>/etc/lilo.conf</filename> 
	dari partisi target:
      </para>

      <screen>
# <command>lilo -r /mnt</command>
      </screen>
    </sect2>

    <sect2 id="getstarted-custominstall-config-network">
      <title>Jaringan</title>

      <para>
        Konfigurasi jaringan pada Slackware Linux dibahas pada <xref linkend="sysadmin-netconfig" />. 
	Bagian ini akan membahas satu contoh dari host yang menggunakan DHCP untuk mendapatkan alamat IP.
      </para>

      <para>
        Berkas <filename>/etc/networks</filename> berisi informasi tentang jaringan Internet yang 
	dikenali. Karena kita akan mendapatkan informasi dari DHCP, kita cukup menggunakan 
	<emphasis>127.0.0.1</emphasis> sebagai jaringan lokal.
      </para>

      <screen>
# <command>cat &gt; /mnt/etc/networks &lt;&lt; EOF
loopback        127.0.0.0
localnet        127.0.0.0
EOF</command>
      </screen>

      <para>
        Meskipun kita akan mendapatkan nama host dari DHCP, kita akan memberikan nama host sementara:
      </para>

      <screen>
# <command>cat &gt; /mnt/etc/HOSTNAME &lt;&lt; EOF
sugaree.example.net
EOF</command>
      </screen>

      <para>
        Sekarang nama host sudah dikonfigurasi, nama host dan <emphasis>localhost</emphasis> seharusnya
	bisa di-resolve, dengan menciptakan basis data <filename>/etc/hosts</filename>:
      </para>

      <screen>
# <command>cat &gt; /mnt/etc/hosts &lt;&lt; EOF
127.0.0.1	localhost
127.0.0.1	sugaree.example.net	sugaree	
EOF</command>
      </screen>

      <para>
        Kita tidak perlu membuat <filename>/etc/resolv.conf</filename>, karena akan dibuat secara
	otomatis oleh <command>dhcpcd</command>, klien DHCP. Jadi, akhirnya kita bisa melakukan setting
	pada antarmuka pada <filename>/etc/rc.d/rc.inet1.conf</filename>:
      </para>

      <screen>
# <command>cat &gt; /mnt/etc/rc.d/rc.inet1.conf &lt;&lt; EOF
IPADDR[0]=""
NETMASK[0]=""
USE_DHCP[0]="yes"
DHCP_HOSTNAME[0]=""
EOF</command>
      </screen>

      <para>
	Anda mungkin perlu membuat salinan dari berkas <filename>rc.inet1.conf</filename> yang lama, 
	karena berisi banyak sekali komentar yang berguna. Atau Anda bisa menggunakan <command>sed</command> 
	untuk mengganti opsi spesifik ini:
      </para>

      <screen>
# <command>sed -i 's/USE_DHCP\[0\]=""/USE_DHCP[0]="yes"/' \
   /mnt/etc/rc.d/rc.inet1.conf</command>
      </screen>
    </sect2>

    <sect2 id="getstarted-custominstall-config-init">
      <title>Melakukan penyesuaian script inisialisasi</title>

      <para>
        Tergantung dari tujuan sistem yang akan diinstall, harus ditentukan script inisialisasi mana yang 
	harus dijalankan. Jumlah layanan yang tersedia tergantung dari paket apa yang telah Anda install. Anda bisa 
	mendapatkan daftar script yang tersedia dengan <command>ls</command>:
      </para>

      <screen>
# <command>ls -l /mnt/etc/rc.d/rc.*</command>
      </screen>

      <para>
        Jika bit executable (dapat dieksekusi) sudah diaktifkan pada sebuah script, maka akan dijalankan, selain
	itu tidak. Jelas Anda harus memastikan script yang penting executable, termasuk script untuk run-level tertentu. 
	Anda bisa mengaktifkan bit executable pada sebuah script dengan:
      </para>

      <screen>
# <command>chmod +x /mnt/etc/rc.d/rc.scriptname</command>
      </screen>

      <para>
        atau menghapusnya dengan :
      </para>

      <screen>
# <command>chmod -x /mnt/etc/rc.d/rc.scriptname</command>
      </screen>
    </sect2>

    <sect2 id="getstarted-custominstall-config-ldconfig">
      <title>Mengkonfigurasi binding run-time linker dinamis</title>

      <para>
        GNU/Linux menggunakan cache untuk memuat pustaka dinamis. Selain itu banyak program 
	bergantung pada nomor versi generik dari pustaka (misalnya <filename>/usr/lib/libgtk-x11-2.0.so</filename>, 
	dan bukan <filename>/usr/lib/libgtk-x11-2.0.so.0.600.8</filename>).
        Cache dan symlink pustaka dapat diupdate pada satu perintah <command>ldconfig</command>:
      </para>

      <screen>
# <command>chroot /mnt /sbin/ldconfig</command>
      </screen>

      <para>
        Anda mungkin tidak tahu perintah <command>chroot</command>; ini adalah perintah yang mengeksekusi 
        sebuah perintah dengan root yang berbeda dengan root yang aktif. Pada contoh ini direktori root 
	diganti menjadi <filename>/mnt</filename>, dan dari sana <command>chroot</command>
        menjalankan biner <command>/sbin/ldconfig</command>. Setelah perintah selesai, sistem akan kembali 
	ke shell, yang menggunakan root awal. Untuk menggunakan <command>chroot</command> dengan perintah lain, 
        perintah <command>ldconfig</command> harus dijalankan dahulu minimal satu kali, karena tanpa melakukan 
	inisialisasi, sebagian besar perintah tidak akan dieksekusi, karena ketergantungan pustaka yang tidak dapat
	diselesaikan.
      </para>
    </sect2>

    <sect2 id="getstarted-custominstall-config-rootpasswd">
      <title>Menentukan kata sandi root</title>

      <para>
        Sekarang cache pustaka dinamis dan link sudah selesai, Anda bisa menjalankan perintah pada sistem 
	yang terinstall. Kita akan memanfaatkannya untuk menentukan kata sandi <emphasis>root</emphasis>.  
	Perintah <command>passwd</command> bisa digunakan untuk menentukan kata sandi untuk pengguna yang sudah 
	ada (pengguna <emphasis>root</emphasis> adalah bagian dari berkas <filename>/etc/passwd</filename> awal).
	Kita akan menggunakan perintah <command>chroot</command> lagi untuk mengeksekusi perintah pada partisi target:
      </para>

      <screen>
# <command>chroot /mnt /usr/bin/passwd root</command>
      </screen>
    </sect2>

    <sect2 id="getstarted-custominstall-config-timezone">
      <title>Menentukan zona waktu</title>

      <para>
        Pada sistem UNIX-like, sangatlah penting untuk menentukan zona waktu dengan benar, karena digunakan oleh banyak 
	bagian dari sistem. Sebagai contoh, zona waktu digunakan oleh NTP untuk melakukan sinkronisasi waktu sistem 
	dengan benar, atau oleh banyak program jaringan lainnya untuk menghitung perbedaan waktu antara klien dan server.
	Pada Slackware Linux zona waktu bisa ditentukan dengan menghubungkan <filename>/etc/localtime</filename> 
	dengan berkas zona waktu. Anda bisa menemukan zona waktu untuk regional Anda dengan mengunjungi direktori 
        <filename>/mnt/usr/share/zoneinfo</filename>. Sebagian besar zona waktu dapat ditemukan pada sub direktori dari regional
	masing-masing. Sebagai contoh untuk menggunakan <emphasis>Europe/Amsterdam</emphasis> sebagai zona waktu, Anda bisa 
	mengeksekusi perintah berikut:
      </para>

      <screen>
# <command>cd /mnt</command>
# <command>rm -rf etc/localtime</command>
# <command>ln -sf /usr/share/zoneinfo/Europe/Amsterdam etc/localtime</command>
      </screen>

      <para>
        Setelah menentukan zona waktu, program masih tidak tahu apakah jam perangkat keras ditentukan ke waktu lokal 
	atau ke standar Coordinated Universal Time (UTC). Jika Anda menggunakan sistem operasi lain pada mesin yang sama yang 
	tidak ditentukan ke UTC, maka lebih baik menentukan jam perangkat keras ke waktu lokal. Pada sistem UNIX-like 
	sangatlah biasa untuk menentukan jam sistem ke UTC. Anda bisa menentukan waktu sistem yang digunakan dengan 
	menciptakan berkas <filename>/etc/hardwareclock</filename>, dan memberikan isi <emphasis>localtime</emphasis> 
	didalamnya jika waktu Anda ditentukan ke waktu lokal, atau <emphasis>UTC</emphasis> jika menggunakan UTC.
        Sebagai contoh, untuk menggunakan UTC, Anda bisa menciptakan <filename>/etc/hardwareclock</filename> dengan cara berikut:
      </para>

      <screen>
# <command>echo "UTC" &gt; /mnt/etc/hardwareclock</command>
      </screen>
    </sect2>

    <sect2 id="getstarted-custominstall-fonts">
      <title>Membuat cache font X11</title>

      <para>
        Jika Anda hendak menggunakan X11, Anda harus melakukan inisialisasi cache font untuk jenis font TrueType dan Type1. 
	Hal ini bisa dilakukan dengan perintah <command>fc-cache</command>:
      </para>

      <screen>
# <command>chroot /mnt /usr/bin/fc-cache</command>
      </screen>
    </sect2>
  </sect1>

  <sect1 id="getstarted-custominstall-script">
    <title>Script installasi otomatis</title>

    <para>
      Sangatlah mudah untuk mengkombinasikan langkah-langkah dari installasi modifikasi pada satu script, 
      yang melakukan langkah-langkah secara otomatis. Hal ini ideal untuk membuat installasi server default
      atau melakukan installasi masal pada klien Linux. Bagian ini berisi contoh script yang ditulis oleh 
      William Park. Sangatlah mudah untuk menambahkan script installasi pada media Slackware Linux, terutama 
      jika Anda menggunakan installasi CD-ROM atau melakukan boot sistem installasi dari flash drive USB.
    </para>

    <para>
      Sistem installasi tersimpan didalam satu citra terkompres, yang tersedia pada media distribusi sebagai 
      <filename>isolinux/initrd.img</filename>. Anda bisa membuat salinan dari citra ini pada hard disk Anda, dan 
      melakukan dekompresi dengan <command>gunzip</command>:
    </para>

    <screen>
# <command>mv initrd.img initrd.img.gz</command>
# <command>gunzip initrd.img.gz</command>
    </screen>

    <para>
      Setelah mendekompresi citra, Anda bisa melakukan mount berkas sebagai disk, menggunakan loopback:
    </para>

    <screen>
# <command>mount -o loop initrd.img /mnt/hd</command>
    </screen>

    <para>
      Anda bisa menambahkan script pada berkas initrd dengan menambahkannya pada struktur direktori yang tersedia dibawah 
      mount point. Setelah melakukan perubahan yang diperlukan, Anda bisa unmount sistem berkas dan mengkompresnya kembali:
    </para>

    <screen>
# <command>umount /mnt/hd</command>
# <command>gzip initd.img</command>
# <command>mv initrd.img.gz initrd.img</command>
    </screen>

    <para>
      Anda bisa meletakkan berkas <filename>initrd.img</filename> yang baru pada media installasi, dan mencoba script.
    </para>

    <programlisting>
#! /bin/sh
# Copyright (c) 2003-2005 by William Park &lt;opengeometry@yahoo.ca&gt;.
# All rights reserved.
#
# Usage: slackware-install.sh

rm_ln ()		# Usage: rm_ln from to
{
	rm -rf $2; ln -sf $1 $2
}


###############################################################################
echo "Partitioning harddisk..."

(   echo -ne "n\np\n1\n\n+1000M\n"	# /dev/hda1 --> 1GB swap
	echo -ne "n\np\n2\n\n+6000M\n"	# /dev/hda2 --> 6GB /
	echo -ne "t\n1\n82\nw\n"
) | fdisk /dev/hda

mkswap /dev/hda1		# swap
swapon /dev/hda1

mke2fs -c /dev/hda2		# /
mount /dev/hda2 /mnt


###############################################################################
echo "Installing packages..."

mount -t iso9660 /dev/hdc /cdrom	# actually, /var/log/mount
cd /cdrom/slackware
for p in [a-z]*; do		# a, ap, ..., y
	installpkg -root /mnt -priority ADD $p/*.tgz
done

cd /mnt


###############################################################################
echo "Configuring /dev/* stuffs..."

rm_ln psaux dev/mouse		# or, 'input/mice' for usb mouse
rm_ln ttyS0 dev/modem
rm_ln hdc dev/cdrom
rm_ln hdc dev/dvd


###############################################################################
echo "Configuring /etc/* stuffs..."

cat &gt; etc/fstab &lt;&lt; EOF
/dev/hda1   swap         swap     defaults         0  0
/dev/hda2   /            ext2     defaults         1  1
devpts      /dev/pts     devpts   gid=5,mode=620   0  0
proc        /proc        proc     defaults         0  0
#
/dev/cdrom  /mnt/cdrom   iso9660  noauto,owner,ro  0  0
/dev/fd0    /mnt/floppy  auto     noauto,owner     0  0
tmpfs       /dev/shm     tmpfs    noauto           0  0
EOF

cat &gt; etc/networks &lt;&lt; EOF
loopback	127.0.0.0
localnet	192.168.1.0
EOF
cat &gt; etc/hosts &lt;&lt; EOF
127.0.0.1	localhost
192.168.1.1	node1.example.net	node1
EOF
cat &gt; etc/resolv.conf &lt;&lt; EOF
search example.net
nameserver 127.0.0.1
EOF
cat &gt; etc/HOSTNAME &lt;&lt; EOF
node1.example.net
EOF

## setup.05.fontconfig
chroot . /sbin/ldconfig		# must be run before other program
chroot . /usr/X11R6/bin/fc-cache

chroot . /usr/bin/passwd root

## setup.06.scrollkeeper
chroot . /usr/bin/scrollkeeper-update

## setup.timeconfig
rm_ln /usr/share/zoneinfo/Canada/Eastern  etc/localtime
cat &gt; etc/hardwareclock &lt;&lt; EOF
localtime
EOF

## setup.liloconfig
cat &gt; etc/lilo.conf &lt;&lt; EOF
boot=/dev/hda
delay=100
vga=normal	# 80x25 char
# VESA framebuffer console:
#   pixel	char	8bit	15bit	16bit	24bit
#   -----	----	----	-----	-----	-----
#   1600x1200		796	797	798	799
#   1280x1024	160x64	775	793	794	795
#   1024x768	128x48	773	790	791	792
#   800x600	100x37	771	787	788	789
#   640x480	80x30	769	784	785	786
image=/boot/vmlinuz		# Linux
	root=/dev/hda2
	label=bare.i
	read-only
# other=/dev/hda1		# Windows
#     label=win
#     table=/dev/hda
EOF
lilo -r .

## setup.xwmconfig
rm_ln xinitrc.fvwm95  etc/X11/xinit/xinitrc


###############################################################################
echo "Configuring /etc/rc.d/rc.* stuffs..."

cat &gt; etc/rc.d/rc.keymap &lt;&lt; EOF
#! /bin/sh
[ -x /usr/bin/loadkeys ] &amp;&amp; /usr/bin/loadkeys us.map
EOF
chmod -x etc/rc.d/rc.keymap

## setup.mouse
cat &gt; etc/rc.d/rc.gpm &lt;&lt; 'EOF'
#! /bin/sh
case $1 in
	stop)
	    echo "Stopping gpm..."
	    /usr/sbin/gpm -k
	    ;;
	restart)
	    echo "Restarting gpm..."
	    /usr/sbin/gpm -k
	    sleep 1
	    /usr/sbin/gpm -m /dev/mouse -t ps2
	    ;;
	start)
	    echo "Starting gpm..."
	    /usr/sbin/gpm -m /dev/mouse -t ps2
	    ;;
	*)
	    echo "Usage $0 {start|stop|restart}"
	    ;;
esac
EOF
chmod +x etc/rc.d/rc.gpm

## setup.netconfig
cat &gt; etc/rc.d/rc.inet1.conf &lt;&lt; EOF
IPADDR=(192.168.1.1)		# array variables
NETMASK=(255.255.255.0)
USE_DHCP=()			# "yes" or ""
DHCP_HOSTNAME=()
GATEWAY=""
DEBUG_ETH_UP="no"
EOF

cat &gt; etc/rc.d/rc.netdevice &lt;&lt; EOF
/sbin/modprobe 3c59x
EOF
chmod +x etc/rc.d/rc.netdevice

## setup.setconsolefont
mv etc/rc.d/rc.font{.sample,}
chmod -x etc/rc.d/rc.font

## setup.services
chmod +x etc/rc.d/rc.bind
chmod +x etc/rc.d/rc.hotplug
chmod +x etc/rc.d/rc.inetd
chmod +x etc/rc.d/rc.portmap
chmod +x etc/rc.d/rc.sendmail
#
chmod -x etc/rc.d/rc.atalk
chmod -x etc/rc.d/rc.cups
chmod -x etc/rc.d/rc.httpd
chmod -x etc/rc.d/rc.ip_forward
chmod -x etc/rc.d/rc.lprng
chmod -x etc/rc.d/rc.mysqld
chmod -x etc/rc.d/rc.pcmcia
chmod -x etc/rc.d/rc.samba
chmod -x etc/rc.d/rc.sshd
    </programlisting>
  </sect1>
</chapter>
