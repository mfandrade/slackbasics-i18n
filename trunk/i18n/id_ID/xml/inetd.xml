<!-- $Id: inetd.xml 283 2007-09-18 20:14:31Z danieldk $ -->

<chapter> <?dbhtml filename="inetd.html"?>
<title>Super server internet</title>

<sect1>
<title>Perkenalan</title>

<para>
Terdapat dua cara untuk menawarkan layanan TCP/IP: 
dengan menjalankan aplikasi server secara mandiri (standalone) 
sebagai daemon atau dengan menggunakan server super 
Internet, <command>inetd</command>. <command>inetd</command>
adalah sebuah daemon yang mengawasi sejumlah port. Jika sebuah klien 
mencoba untuk menghubungkan diri pada sebuah port <command>inetd</command> 
akan menangani koneksi dan mengirimkan koneksi pada perangkat lunak server 
yang menangani jenis koneksi tersebut. Keuntungan dari pendekatan ini adalah 
adanya tambahan sebuah layer keamanan dan membuatnya lebih mudah untuk 
mencatat log pada koneksi yang masuk. Kerugiannya adalah lebih lambat 
dibandingkan dengan daemon yang sifatnya standalone. Disarankan untuk 
menjalankan daemon secara standalone pada, misalnya server FTP yang memiliki beban yang tinggi.
</para>

</sect1>

<sect1>
<title>Konfigurasi</title>

<para>
<command>inetd</command> dapat dikonfigurasi menggunakan berkas
<filename>/etc/inetd.conf</filename>. Mari kita lihat pada contoh baris dari <filename>inetd.conf</filename>:
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Baris ini menyatakan bahwa <command>inetd</command> harus 
menerima koneksi FTP dan meneruskannya pada <command>tcpd</command>. Ini mungkin cukup aneh, 
karena <command>proftpd</command> biasanya menangani koneksi FTP. Anda juga bisa 
menyebutkan penggunaan <command>proftpd</command>
secara langsung pada <filename>inetd.conf</filename>, tetapi Slackware Linux biasanya 
mengirimkan koneksi pada <command>tcpd</command>. Program ini pada gilirannya mengirimkan 
koneksi pada <command>proftpd</command>, seperti yang ditentukan.
<command>tcpd</command> digunakan untuk memonitor layanan dan menyediakan kontrol akses berbasis host.
</para>

<para>
Layanan bisa dinonaktifkan dengan menambahkan karakter komentar (#) di awal baris. 
Disarankan untuk menonaktifkan semua layanan dan hanya mengaktifkan layanan 
yang Anda perlukan saja. Setelah mengganti
<filename>/etc/inetd.conf</filename> <command>inetd</command>
harus dijalankan kembali untuk mengaktifkan perubahan. Hal ini bisa dilakukan dengan mengirimkan sinyal HUP pada proses inetd:
</para>

<screen>
# <command>ps ax | grep 'inetd'</command>
   64 ?        S      0:00 /usr/sbin/inetd
# <command>kill -HUP 64</command>
</screen>

<para>
  Atau anda dapat menggunakan skrip inisialisasi <filename>rc.inetd</filename> untuk menjalankan 
  kembali <command>inetd</command>:
</para>

<screen>
# <command>/etc/rc.d/rc.inetd restart</command>
</screen>

</sect1>

<sect1>
<title>TCP wrappers</title>

<para>
Seperti yang anda lihat pada <filename>/etc/inetd.conf</filename> koneksi untuk 
sebagian besar protokol dibuat melalui <command>tcpd</command>, bukannya dengan akses langsung pada program layanan. Sebagai contoh:
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Pada contoh ini koneksi ftp dikirimkan melalui <command>tcpd</command>.
<command>tcpd</command> mencatat koneksi melalui syslog dan mengijinkan 
pengujian tambahan. Salah satu fitur yang paling sering dipakai dari <command>tcpd</command>
adalah kontrol akses berbasis host. Host yang harus ditolak dapat dikontrol 
melalui <filename>/etc/hosts.deny</filename>, host yang diijinkan 
melalui <filename>/etc/hosts.allow</filename>. Kedua berkas ini memiliki satu aturan 
pada setiap barisnya dengan bentuk seperti berikut:
</para>

<screen>
service: hosts
</screen>

<para>
Host bisa ditentukan berdasarkan nama host atau alamat IP. Kata kunci ALL menentukan semua host atau semua layanan.
</para>

<para>
Seandainya kita hendak memblokir semua akses yang dikelola melalui 
<command>tcpd</command>, kecuali untuk host 
<quote>trusted.example.org</quote>. Untuk melakukan ini, berkas
<filename>hosts.deny</filename> dan <filename>hosts.allow</filename>
harus dibuat.
</para>

<para>
<filename>/etc/hosts.deny</filename>:
</para>

<screen>
ALL: ALL
</screen>

<para>
<filename>/etc/hosts.allow</filename>:
</para>

<screen>
ALL: trusted.example.org
</screen>

<para>
Dalam <filename>hosts.deny</filename> akses untuk semua layanan (ALL)
dan semua host (ALL) diblokir. Tapi <filename>hosts.allow</filename>
menentukan bahwa semua layanan (ALL) harus tersedia untuk
<quote>trusted.example.org</quote>.
</para>

</sect1>

</chapter>
