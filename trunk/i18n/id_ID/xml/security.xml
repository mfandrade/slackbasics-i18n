<!-- $Id: security.xml 283 2007-09-18 20:14:31Z danieldk $ -->

<chapter> <?dbhtml filename="security.html"?>
<title>Keamanan</title>

<sect1>
<title>Perkenalan</title>

<para>
Dengan peningkatkan penggunaan dari Internet dan jaringan nirkabel, keamanan menjadi semakin penting 
setiap harinya. Tidaklah mungkin untuk membahas masalah ini dalam sebuah bab pada perkenalan kepada 
GNU/Linux. Bab ini membahas beberapa teknis keamanan dasar yang menyediakan langkah awal untuk keamanan 
desktop dan server.
</para>

<para>
Sebelum kita mulai pada subyek yang lebih spesifik, merupakan ide yang bagus untuk membuat beberapa catatan 
tentang kata sandi. Otorisasi komputer pada umumnya bergantung pada kata sandi. Pastikan memilih kata sandi 
yang bagus untuk segala situasi. Hindari menggunakan kata-kata, nama, tanggal lahir, dan kata sandi yang pendek. 
Kata sandi semacam ini bisa dengan mudah dibobol dengan serangan kamus atau brute force. Gunakan kata sandi 
yang panjang, idealnya delapan karakter atau lebih, terdiri dari huruf acak (termasuk huruf kapital) dan angka.
</para>
</sect1>

<sect1>
<title>Menutup layanan</title>

<sect2>
<title>Perkenalan</title>

<para>
Banyak GNU/Linux menjalankan beberapa layanan yang terbuka untuk jaringan lokal maupun Internet. Host lain bisa 
terkoneksi pada layanan ini dengan menghubungkan diri ke port tertentu. Sebagai contoh, port 80 digunakan untuk 
jalur WWW. Berkas <filename>/etc/services</filename> berisi tabel dengan semua layanan yang digunakan, dan nomor 
port yang digunakan untuk layanan tersebut.
</para>

<para>
Sistem yang aman seharusnya hanya menjalankan layanan yang diperlukan. Jadi, misalkan sebuah host berfungsi sebagai 
server web, maka seharusnya ia tidak memiliki port terbuka (dan melayani) FTP atau SMTP. Dengan banyak port yang 
terbuka, maka resiko keamanan meningkat dengan cepat, karena terdapat kemungkinan besar perangkat lunak yang 
memberikan layanan memiliki kecacatan, atau dikonfigurasi dengan tidak benar. Beberapa bagian berikut akan 
membantu Anda melacak port yang terbuka dan menutupnya.
</para>
</sect2>

<sect2>
<title>Mencari port yang terbuka</title>

<para>
Port yang terbuka dapat ditemukan menggunakan pemindai port. Salah satu pemindai port yang paling terkenal untuk 
GNU/Linux adalah <command>nmap</command>. <command>nmap</command> tersedia pada set disk <quote>n</quote>. 
</para>

<para>
Sintaks dasar <command>nmap</command> adalah: <command>nmap host</command>. Parameter 
<emphasis>host</emphasis> bisa berupa nama host atau alamat IP. Misalkan kita hendak memindai host dimana 
<command>nmap</command> terpasang. Pada kasus ini, kita bisa menentukan alamat IP 
<emphasis>localhost</emphasis>, <emphasis>127.0.0.1</emphasis>:
</para>

<screen>
$ <command>nmap 127.0.0.1</command>

Starting nmap V. 3.00 ( www.insecure.org/nmap/ )
Interesting ports on localhost (127.0.0.1):
(The 1596 ports scanned but not shown below are in state: closed)
Port       State       Service
21/tcp     open        ftp                     
22/tcp     open        ssh                     
23/tcp     open        telnet                  
80/tcp     open        http                    
6000/tcp   open        X11                     

Nmap run completed -- 1 IP address (1 host up) scanned in 0 seconds
</screen>

<para>
Pada kasus ini, Anda bisa melihat bahwa host memiliki lima port yang terbuka yang melayani; ftp, ssh, telnet, http dan X11.
</para>
</sect2>

<sect2>
<title>inetd</title>

<para>
Terdapat dua cara untuk menawarkan layanan TCP/IP: dengan menjalankan server aplikasi stand-alone (mandiri) sebagai daemon atau 
dengan menggunakan server internet super, <command>inetd</command>. inetd  adalah sebuah daemon yang memonitor 
sekumpulan port. Jika sebuah klien mencoba untuk menghubungkan diri ke port, inetd akan menangani koneksi tersebut 
dan meneruskan koneksi pada perangkat lunak yang menangani jenis koneksi tersebut. Keunggulan dari pendekatan ini adalah 
adanya tambahan lapisan keamanan dan membuatnya lebih mudah untuk mencatat koneksi yang masuk. Kelemahannya adalah lebih 
lambat dibandingkan daemon yang bersifat stand-alone. Oleh sebab itu merupakan ide bagus untuk menjalankan daemon yang 
bersifat stand-alone pada server FTP yang sibuk. 
</para>

<para>
Anda bisa menguji apakah <command>inetd</command> berjalan pada sebuah host atau tidak dengan <command>ps</command>, sebagai contoh:
</para>

<screen>
$ <command>ps ax | grep inetd</command>
 2845 ?        S      0:00 /usr/sbin/inetd
</screen>

<para>
Pada kasus ini, inetd berjalan dengan PID (process ID) 2845. 
<command>inetd</command> bisa dikonfigurasikan menggunakan berkas 
<filename>/etc/inetd.conf</filename>. Mari kita lihat contoh sebuah contoh dari inetd.conf:
</para>

<screen>
# File Transfer Protocol (FTP) server:
ftp     stream  tcp     nowait  root    /usr/sbin/tcpd  proftpd
</screen>

<para>
Baris ini menjelaskan bahwa inetd harus menerima koneksi FTP dan mengirimkannya pada 
<command>tcpd</command>. Hal ini mungkin cukup aneh, karena 
<command>proftpd</command> biasanya menangani koneksi FTP. Anda bisa menentukan untuk langsung menggunakan 
proftpd pada <filename>inetd.conf</filename>, tetapi merupakan ide bagus untuk memberikan koneksi pada 
<command>tcpd</command>. Program ini mengirimkan koneksi pada <command>proftpd</command>, seperti yang ditentukan. 
<command>tcpd</command> digunakan untuk memonitor layanan dan menyediakan kontrol akses berbasis host.
</para>

<para>
Layanan bisa dinonaktifkan dengan menambahkan karakter kres (#) di awal baris. Merupakan ide bagus untuk menonaktifkan 
semua layanan dan mengaktifkan layanan yang Anda butuhkan satu persatu. Setelah mengubah <filename>/etc/inetd.conf</filename> 
<command>inetd</command> harus dijalankan ulang untuk mengaktifkan perubahan. Hal ini bisa dilakukan dengan mengirimkan sinyal 
HUP pada proses inetd:
</para>

<screen>
# <command>ps ax | grep 'inetd'</command>
   2845 ?        S      0:00 /usr/sbin/inetd
# <command>kill -HUP 2845</command>
</screen>

<para>
Jika Anda tidak membutuhkan <command>inetd</command> sama sekali, merupakan ide bagus untuk menghapusnya. Jika Anda tetap ingin 
agar paket ini terinstall, tetapi tidak ingin agar Slackware Linux menjalankannya saat proses boot, jalankan perintah 
berikut sebagai root:
</para>

<screen>
# <command>chmod a-x /etc/rc.d/rc.inetd</command>
</screen>
</sect2>
</sect1>

</chapter>
